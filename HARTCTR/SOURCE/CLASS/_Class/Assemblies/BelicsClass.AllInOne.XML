<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BelicsClass.AllInOne</name>
    </assembly>
    <members>
        <member name="T:BelicsClass.UI.BL_SeparatedFunctions">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.UI.BL_SeparatedFunctions.ViewResizer">
            <summary>
            自動スケーリングオブジェクト
            </summary>
        </member>
        <member name="F:BelicsClass.UI.BL_SeparatedFunctions.btnFunctions">
            <summary>
            ファンクションキー文字列を保持します。
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SeparatedFunctions.#ctor(BelicsClass.UI.BL_SubForm_Base)">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SeparatedFunctions.BL_SubForm_Functions_KeyUp(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_SeparatedFunctions.Function_Enabled(System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <param name="functionno"></param>
            <param name="enabled"></param>
        </member>
        <member name="F:BelicsClass.UI.BL_SeparatedFunctions.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SeparatedFunctions.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:BelicsClass.UI.BL_SeparatedFunctions.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:BelicsClass.UI.BL_SeparatedFunctions.buttonFunction00">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_SeparatedFunctions.buttonFunction12">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_SeparatedFunctions.buttonFunction11">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_SeparatedFunctions.buttonFunction10">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_SeparatedFunctions.buttonFunction09">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_SeparatedFunctions.buttonFunction08">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_SeparatedFunctions.buttonFunction07">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_SeparatedFunctions.buttonFunction06">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_SeparatedFunctions.buttonFunction05">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_SeparatedFunctions.buttonFunction04">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_SeparatedFunctions.buttonFunction03">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_SeparatedFunctions.buttonFunction02">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_SeparatedFunctions.buttonFunction01">
            <summary></summary>
        </member>
        <member name="P:BelicsClass.UI.BL_SeparatedFunctions.CreateParams">
            <summary>
            アプリケーション終了操作を無効にする
            </summary>
        </member>
        <member name="T:BelicsClass.UI.BL_MainForm_Base">
            <summary>
            メインフォームの基本クラスです。
            </summary>
            <summary>
            メインフォームの基本クラスです。
            </summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MainForm_Base.WM_SETREDRAW">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MainForm_Base.components">
            <summary>
            必要なデザイナー変数です。
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.Dispose(System.Boolean)">
            <summary>
            使用中のリソースをすべてクリーンアップします。
            </summary>
            <param name="disposing">マネージ リソースが破棄される場合 true、破棄されない場合は false です。</param>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.InitializeComponent">
            <summary>
            デザイナー サポートに必要なメソッドです。このメソッドの内容を
            コード エディターで変更しないでください。
            </summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MainForm_Base.labelTitle">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MainForm_Base.buttonFunction01">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MainForm_Base.buttonFunction02">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MainForm_Base.buttonFunction03">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MainForm_Base.buttonFunction04">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MainForm_Base.buttonFunction05">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MainForm_Base.buttonFunction06">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MainForm_Base.buttonFunction07">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MainForm_Base.buttonFunction08">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MainForm_Base.buttonFunction09">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MainForm_Base.buttonFunction10">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MainForm_Base.buttonFunction11">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MainForm_Base.buttonFunction12">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MainForm_Base.buttonFunction00">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MainForm_Base.notifyIconMinimum">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MainForm_Base.panelSubForm">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MainForm_Base.timer1Second">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MainForm_Base.timer100ms">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MainForm_Base.labelOther">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MainForm_Base.labelTimenow">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MainForm_Base.flatButtonMinimum">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MainForm_Base.flatButtonExit">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MainForm_Base.flatButtonSeparate">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MainForm_Base.ViewResizer">
            <summary>
            自動スケーリングオブジェクト
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.Resizer_Initialize(System.Boolean,System.Boolean)">
            <summary>
            メインフォームの自動スケーリング機能を開始します
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.Resizer_Finalize">
            <summary>
            メインフォームの自動スケーリング機能を終了します
            スケーリング状態は現在のままで終了されます
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.Log(System.String)">
            <summary>
            ログを追加します
            </summary>
            <param name="description"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.Log(System.String,System.Int32)">
            <summary>
            ログを追加します
            </summary>
            <param name="description"></param>
            <param name="level"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.ImmGetContext(System.IntPtr)">
            <summary>
            
            </summary>
            <param name="hWnd"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.ImmGetOpenStatus(System.IntPtr)">
            <summary>
            
            </summary>
            <param name="hIMC"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.ImmReleaseContext(System.IntPtr,System.IntPtr)">
            <summary>
            
            </summary>
            <param name="hWnd"></param>
            <param name="hIMC"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.StartDebugMode">
            <summary>
            デバッグモード開始
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.EndDebugMode">
            <summary>
            デバッグモード終了
            </summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MainForm_Base.btnFunctions">
            <summary>
            ファンクションキー文字列を保持します。
            </summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MainForm_Base.FunctionBackColor">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MainForm_Base.FunctionForeColor">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MainForm_Base.OnColor">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MainForm_Base.OffColor">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MainForm_Base.functionControl">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MainForm_Base.m_MessageBox">
            <summary>
            表示中メッセージボックス類インスタンス(参照)
            </summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MainForm_Base.isExitableWindow">
            <summary>
            終了(ウィンドウ右上の×ボタン)を有効するか否かを保持します
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.#ctor(System.Boolean)">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.#ctor(System.Drawing.Bitmap)">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.#ctor(System.Drawing.Bitmap,System.Boolean)">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.#ctor(System.Drawing.Icon)">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.#ctor(System.Drawing.Icon,System.Boolean)">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.#ctor(System.Drawing.Bitmap,System.Drawing.Icon)">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.#ctor(System.Drawing.Bitmap,System.Drawing.Icon,System.Boolean)">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.MainForm_Base_Load(System.Object,System.EventArgs)">
            <summary>
            フォームロード時の処理
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.MainForm_KeyUp(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.panelSubForm_ControlRemoved(System.Object,System.Windows.Forms.ControlEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.panelSubForm_ControlAdded(System.Object,System.Windows.Forms.ControlEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.CloseOtherForms(BelicsClass.UI.BL_SubForm_Base,BelicsClass.UI.BL_SubForm_Base)">
            <summary>
            他のサブフォームを閉じて、指定のフォームの単独表示を行います。
            </summary>
            <param name="sender">アクションを起こすフォーム</param>
            <param name="onlyform">単独表示を行うフォーム</param>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.MainForm_Base_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            フォームクローズ前の処理
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:BelicsClass.UI.BL_MainForm_Base.m_DebugStep">
            <summary>デバッグ処理検出変数</summary>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.MainForm_Base_KeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            キー押し下げ時の処理
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.MainForm_Base_OnDebugMode(System.Object,System.Boolean)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="isDebugMode"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.MainForm_Base_timer100ms_Tick(System.Object,System.EventArgs)">
            <summary>
            100ms定周期処理を行います。
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.panelSubForm_Resize(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.CheckSubForm(BelicsClass.UI.BL_SubForm_Base)">
            <summary>
            
            </summary>
            <param name="subform"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.AddSubForm(BelicsClass.UI.BL_SubForm_Base,System.Boolean)">
            <summary>
            
            </summary>
            <param name="subform"></param>
            <param name="activated"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.RemoveSubForm(BelicsClass.UI.BL_SubForm_Base)">
            <summary>
            
            </summary>
            <param name="subform"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.RemoveSubForm(System.String)">
            <summary>
            
            </summary>
            <param name="title"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.TopSubForm_Focus">
            <summary>
            
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.MainForm_Base_Resize(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.MainForm_Base_notifyIconMinimum_MouseDoubleClick(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.MainForm_Base_notifyIconMinimum_MouseClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.MainForm_Base_notifyIconMinimum_BalloonTipClicked(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.MainForm_Base_notifyIconMinimum_BalloonTipClosed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.MainForm_Base_notifyIconMinimum_BalloonTipShown(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.IsTopLevelSubForm(BelicsClass.UI.BL_SubForm_Base)">
            <summary>
            サブフォームが最前面かどうか調査する
            </summary>
            <param name="subform"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.CloseAllMessageBox">
            <summary>
            全てのメッセージボックスを閉じます
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.MainForm_Base_timer1Second_Tick(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.GetTaskBarLocation">
            <summary>
            タスクバーの位置を取得します
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.FindDockedTaskBars(System.Windows.Forms.Control)">
            <summary>
            タスクバーのサイズを取得します
            </summary>
            <param name="ctl"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.SetEdgeLocation(BelicsClass.UI.BL_MainForm_Base.EdgeLocation)">
            <summary>
            
            </summary>
            <param name="edge"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.ActivateSubform(BelicsClass.UI.BL_SubForm_Base)">
            <summary>
            
            </summary>
            <param name="subform"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.MainForm_Base_Activated(System.Object,System.EventArgs)">
            <summary>
            メインフォームがアクティブになった時にアクティブなサブフォームもアクティブを通知します。
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.MainForm_Base_Deactivate(System.Object,System.EventArgs)">
            <summary>
            メインフォームが非アクティブになった時にアクティブなサブフォームも非アクティブを通知します。
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.SetWindowBounds(System.Drawing.Rectangle)">
            <summary>
            ウィンドウの位置とサイズを変更する
            </summary>
            <param name="rect">変更後のウィンドウの位置とサイズ</param>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.SendMessage(System.IntPtr,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="hWnd"></param>
            <param name="msg"></param>
            <param name="wParam"></param>
            <param name="lParam"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.BeginUpdate(System.Windows.Forms.Control)">
            <summary>
            コントロール(子コントロールも含む)の描画を停止します。
            </summary>
            <param name="control">対象コントロール</param>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.EndUpdate(System.Windows.Forms.Control)">
            <summary>
            コントロール(子コントロールも含む)の描画を開始します。
            </summary>
            <param name="control">対象コントロール</param>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.ExitApplication">
            <summary>
            アプリケーションを終了します。
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.ExitApplication(System.String)">
            <summary>
            アプリケーションを終了します。
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.ExitApplication(System.String,System.String)">
            <summary>
            アプリケーションを終了します。
            パスワード確認機能付き
            </summary>
            <param name="message"></param>
            <param name="password"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.ShowCheckPassword(System.String,System.String)">
            <summary>
            パスワードチェック
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.MainForm_Base_flatButtonMinimum_Click(System.Object,System.EventArgs)">
            <summary>
            フォーム上の最小化ボタン処理
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.MainForm_Base_Exit_Click(System.Object,System.EventArgs)">
            <summary>
            フォーム上の終了ボタン処理
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.SeparateSubForm(BelicsClass.UI.BL_SubForm_Base)">
            <summary>
            
            </summary>
            <param name="sub"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.flatButtonSeparate_Click(System.Object,System.EventArgs)">
            <summary>
            サブフォーム切り離しボタン処理
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.MainForm_Base_Title_DoubleClick(System.Object,System.EventArgs)">
            <summary>
            タイトルバーをダブルクリックした時の処理
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.Function_Enabled(System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <param name="functionno"></param>
            <param name="enabled"></param>
        </member>
        <member name="P:BelicsClass.UI.BL_MainForm_Base.Resizer_LastScaleWidth">
            <summary></summary>
        </member>
        <member name="P:BelicsClass.UI.BL_MainForm_Base.Resizer_LastScaleHeight">
            <summary></summary>
        </member>
        <member name="P:BelicsClass.UI.BL_MainForm_Base.ImeFunctionEnable">
            <summary>
            IMEのON/OFF状態によってファンクション表示を変化させるか否かを取得または設定します
            </summary>
        </member>
        <member name="P:BelicsClass.UI.BL_MainForm_Base.IsDebugMode">
            <summary>
            デバッグモード有効
            </summary>
        </member>
        <member name="P:BelicsClass.UI.BL_MainForm_Base.FunctionControl">
            <summary></summary>
        </member>
        <member name="P:BelicsClass.UI.BL_MainForm_Base.IsExitableWindow">
            <summary>
            終了(ウィンドウ右上の×ボタン)を有効するか否かを取得および設定します
            </summary>
        </member>
        <member name="P:BelicsClass.UI.BL_MainForm_Base.HideAtBoottime">
            <summary></summary>
        </member>
        <member name="P:BelicsClass.UI.BL_MainForm_Base.IsCompareTitleEnable">
            <summary>タイトル文字列でのサブフォーム識別を有効にするかどうかを取得または設定します。</summary>
        </member>
        <member name="P:BelicsClass.UI.BL_MainForm_Base.LogEnable">
            <summary>ログを有効かどうかを取得または設定します</summary>
        </member>
        <member name="P:BelicsClass.UI.BL_MainForm_Base.CreateParams">
            <summary>
            アプリケーション終了操作を無効にする
            </summary>
        </member>
        <member name="P:BelicsClass.UI.BL_MainForm_Base.SubForms_Count">
            <summary>
            
            </summary>
        </member>
        <member name="P:BelicsClass.UI.BL_MainForm_Base.SubForm_Size">
            <summary>
            
            </summary>
        </member>
        <member name="P:BelicsClass.UI.BL_MainForm_Base.ActiveSubForm">
            <summary>
            
            </summary>
        </member>
        <member name="P:BelicsClass.UI.BL_MainForm_Base.Title">
            <summary>
            サブフォームのタイトル変更
            </summary>
        </member>
        <member name="P:BelicsClass.UI.BL_MainForm_Base.IsMovableWindow">
            <summary>
            タイトル表示部分のドラッグでウィンドウ移動できるかどうかを取得または設定します。
            </summary>
        </member>
        <member name="T:BelicsClass.UI.BL_MainForm_Base.ViewResize">
            <summary>
            フォームの自動スケーリング機能を提供します
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.ViewResize.#ctor(System.Int32,System.Int32)">
            <summary>
            コンストラクタ
            </summary>
            <param name="frmWidth">フォーム幅初期値</param>
            <param name="frmHeight">フォーム高さ初期値</param>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.ViewResize.#ctor(System.Windows.Forms.Control,System.Boolean,System.Boolean)">
            <summary>
            コンストラクタ
            </summary>
            <param name="parent">対象のフォーム</param>
        </member>
        <member name="F:BelicsClass.UI.BL_MainForm_Base.ViewResize.FrmWidth">
            <summary>
            フォーム幅初期値
            </summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MainForm_Base.ViewResize.FrmHeight">
            <summary>
            フォーム高さ初期値
            </summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MainForm_Base.ViewResize.lastScaleWidth">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MainForm_Base.ViewResize.lastScaleHeight">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.ViewResize.Add(System.Windows.Forms.Control.ControlCollection)">
            <summary>
            サイズ調整をするコントロールを登録します
            </summary>
            <param name="controls">サイズ調整を行うコントロールコレクション</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.ViewResize.Add(System.Object)">
            <summary>
            サイズ調整をするコントロールを登録します
            </summary>
            <param name="control">サイズ調整を行うコントロール</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.ViewResize.Remove(System.Windows.Forms.Control.ControlCollection)">
            <summary>
            サイズ調整をするコントロールリストから削除します
            </summary>
            <param name="controls">削除するコントロールコレクション</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.ViewResize.Remove(System.Windows.Forms.Control)">
            <summary>
            サイズ調整をするコントロールリストから削除します
            </summary>
            <param name="control">削除するコントロール</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.ViewResize.Clear">
            <summary>
            サイズ調整登録したコントロールをクリアします
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.ViewResize.ScaleWidth(System.Int32)">
            <summary>
            横スケール率を取得します
            </summary>
            <param name="frmWidth"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.ViewResize.ScaleHeight(System.Int32)">
            <summary>
            縦スケール率を取得します
            </summary>
            <param name="frmHeight"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.ViewResize.Resize(System.Windows.Forms.Control)">
            <summary>
            コントロールのサイズ調整を行います
            </summary>
            <param name="parent"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.ViewResize.Resize(System.Int32,System.Int32)">
            <summary>
            コントロールのサイズ調整を行います
            </summary>
            <param name="frmWidth">変更後のフォーム幅</param>
            <param name="frmHeight">変更後のフォーム高さ</param>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.ViewResize.Get(System.Windows.Forms.Control)">
            <summary>
            コントロールの基準値を取得します
            </summary>
            <param name="ctr"></param>
            <returns></returns>
        </member>
        <member name="P:BelicsClass.UI.BL_MainForm_Base.ViewResize.BaseWidth">
            <summary>
            フォーム幅基準値を設定または取得します
            </summary>
        </member>
        <member name="P:BelicsClass.UI.BL_MainForm_Base.ViewResize.BaseHeight">
            <summary>
            フォーム高さ基準値を設定または取得します
            </summary>
        </member>
        <member name="P:BelicsClass.UI.BL_MainForm_Base.ViewResize.Count">
            <summary>
            制御対象のコントロール数を取得します
            </summary>
        </member>
        <member name="T:BelicsClass.UI.BL_MainForm_Base.ViewResize.ControlContainer">
            <summary>
            コントロールの基準値を保持します
            </summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MainForm_Base.ViewResize.ControlContainer.bounds">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MainForm_Base.ViewResize.ControlContainer.font">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MainForm_Base.ViewResize.ControlContainer.margin">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MainForm_Base.ViewResize.ControlContainer.padding">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MainForm_Base.ViewResize.ControlContainer.tabitemsize">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MainForm_Base.ViewResize.ControlContainer.columnsizes">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MainForm_Base.ViewResize.ControlContainer.columnheaderheight">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MainForm_Base.ViewResize.ControlContainer.rowheaderwidth">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MainForm_Base.ViewResize.ControlContainer.rowheight">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MainForm_Base.ViewResize.ControlContainer.splitwidth">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MainForm_Base.ViewResize.ControlContainer.splitdistance">
            <summary></summary>
        </member>
        <member name="T:BelicsClass.UI.BL_MainForm_Base.FormLogger">
            <summary>
            
            </summary>
        </member>
        <member name="T:BelicsClass.ProcessManage.BL_ThreadController_Base">
            <summary>
            スレッド制御の基本クラスです。
            </summary>
        </member>
        <member name="F:BelicsClass.ProcessManage.BL_ThreadController_Base.m_Sync">
            <summary>排他制御クラスインスタンス</summary>
        </member>
        <member name="F:BelicsClass.ProcessManage.BL_ThreadController_Base.m_ID">
            <summary>スレッド識別ID</summary>
        </member>
        <member name="F:BelicsClass.ProcessManage.BL_ThreadController_Base.m_Step">
            <summary>スレッド行程</summary>
        </member>
        <member name="F:BelicsClass.ProcessManage.BL_ThreadController_Base.m_Retry">
            <summary>リトライ回数</summary>
        </member>
        <member name="F:BelicsClass.ProcessManage.BL_ThreadController_Base.m_swTemp">
            <summary>汎用計測用</summary>
        </member>
        <member name="F:BelicsClass.ProcessManage.BL_ThreadController_Base.m_Ticks">
            <summary>経過時間計測タイマー</summary>
        </member>
        <member name="F:BelicsClass.ProcessManage.BL_ThreadController_Base.m_lPassedTimes">
            <summary>スレッド処理回数/s</summary>
        </member>
        <member name="F:BelicsClass.ProcessManage.BL_ThreadController_Base.m_lPassedCount_Temp">
            <summary>スレッド処理回数</summary>
        </member>
        <member name="F:BelicsClass.ProcessManage.BL_ThreadController_Base.m_lPassedCount">
            <summary>スレッド処理回数</summary>
        </member>
        <member name="F:BelicsClass.ProcessManage.BL_ThreadController_Base.m_Sleep">
            <summary>スリープ時間</summary>
        </member>
        <member name="F:BelicsClass.ProcessManage.BL_ThreadController_Base.m_bCanExit">
            <summary>スレッド終了可不可</summary>
        </member>
        <member name="F:BelicsClass.ProcessManage.BL_ThreadController_Base.m_bDoing">
            <summary>スレッド処理中</summary>
        </member>
        <member name="F:BelicsClass.ProcessManage.BL_ThreadController_Base.m_queLog">
            <summary>ログキュー</summary>
        </member>
        <member name="F:BelicsClass.ProcessManage.BL_ThreadController_Base.m_Log">
            <summary>ログ書き込みクラスのインスタンス</summary>
        </member>
        <member name="F:BelicsClass.ProcessManage.BL_ThreadController_Base.m_listView">
            <summary>
            ログ表示のためのリストビューへの参照
            表示の必要が無ければnull
            </summary>
        </member>
        <member name="F:BelicsClass.ProcessManage.BL_ThreadController_Base.owner">
            <summary>
            フォーム操作のための参照
            操作の必要が無ければnull
            </summary>
        </member>
        <member name="F:BelicsClass.ProcessManage.BL_ThreadController_Base.ScanTime">
            <summary>
            スレッドスキャンタイム
            </summary>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_ThreadController_Base.ResetStep">
            <summary>
            ステップ初期化
            </summary>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_ThreadController_Base.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_ThreadController_Base.GetInformation">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_ThreadController_Base.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_ThreadController_Base.#ctor(System.Object)">
            <summary>
            コンストラクタ
            </summary>
            <param name="id">自スレッド識別ID</param>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_ThreadController_Base.#ctor(System.Object,BelicsClass.UI.Controls.BL_VirtualListView)">
            <summary>
            コンストラクタ
            </summary>
            <param name="id">自スレッド識別ID</param>
            <param name="log">ログを表示するためのリストビュー</param>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_ThreadController_Base.#ctor(System.Object,System.Windows.Forms.Form)">
            <summary>
            コンストラクタ
            </summary>
            <param name="id">自スレッド識別ID</param>
            <param name="parent">スレッド内から操作を行う対象となるフォーム</param>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_ThreadController_Base.Finalize">
            <summary>デストラクタ</summary>
        </member>
        <member name="F:BelicsClass.ProcessManage.BL_ThreadController_Base.m_threadControl">
            <summary>
            スレッド関連インスタンス
            </summary>
        </member>
        <member name="F:BelicsClass.ProcessManage.BL_ThreadController_Base.m_bStop">
            <summary>
            自己終了フラグ
            </summary>
        </member>
        <member name="F:BelicsClass.ProcessManage.BL_ThreadController_Base.m_bSuspend">
            <summary>
            スレッドを一時停止するか否かを保持します
            </summary>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_ThreadController_Base.Log(System.String)">
            <summary>
            ログを追加します。発生日時は自動付加します。
            </summary>
            <param name="description">ログの内容</param>
            <returns>ログ書き込みに要した時間(ms)を返します。</returns>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_ThreadController_Base.Log(System.String,System.Int32)">
            <summary>
            ログを追加します。発生日時は自動付加します。
            同一内容のログは書き込みません。
            内容変化時に、直前までの同一内容のログ発生回数を書き込みます。
            </summary>
            <param name="description">ログの内容</param>
            <param name="level">見出し行とするための[.]を付加する個数</param>
            <returns>ログ書き込みに要した時間(ms)を返します。</returns>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_ThreadController_Base.LogGet">
            <summary>
            ログから1件取得します。
            </summary>
            <returns>ログが存在しない場合、nullを返します。</returns>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_ThreadController_Base.StartControl(System.Int32)">
            <summary>
            制御開始
            </summary>
            <param name="sleep">Sleep時間(ms)</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_ThreadController_Base.StartControl(System.Int32,System.Threading.ThreadPriority)">
            <summary>
            制御開始
            </summary>
            <param name="sleep">Sleep時間(ms)</param>
            <param name="priority">スレッド優先順位</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_ThreadController_Base.StopControl">
            <summary>
            制御終了
            </summary>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_ThreadController_Base.SuspendControl(System.Boolean)">
            <summary>
            スレッド内の処理を一時停止／再開
            </summary>
            <param name="suspend"></param>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_ThreadController_Base.SuspendWait">
            <summary>
            スレッドをサスペンドします。
            サスペンド状態になるまで待機します。
            </summary>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_ThreadController_Base.ResumeWait">
            <summary>
            スレッドをサスペンドから復帰します。
            復帰状態になるまで待機します。
            </summary>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_ThreadController_Base.WorkerThread">
            <summary>
            ワーカースレッド
            </summary>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_ThreadController_Base.DoControl(System.Object)">
            <summary>
            スレッド処理
            bool canexit = 終了可能状態;
            return canexit;
            </summary>
            <param name="message"></param>
            <returns>終了可の場合Trueを返す</returns>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_ThreadController_Base.Sleep(System.Int32)">
            <summary>
            スリープします
            </summary>
            <param name="millisecondsTimeout"></param>
        </member>
        <member name="E:BelicsClass.ProcessManage.BL_ThreadController_Base.EventChangeThreadState">
            <summary>
            スレッド実行状態変化イベント
            </summary>
        </member>
        <member name="P:BelicsClass.ProcessManage.BL_ThreadController_Base.CanExit">
            <summary>
            スレッド終了可不可
            </summary>
        </member>
        <member name="P:BelicsClass.ProcessManage.BL_ThreadController_Base.IsDoing">
            <summary>
            スレッド動作中
            </summary>
        </member>
        <member name="P:BelicsClass.ProcessManage.BL_ThreadController_Base.PassedCount">
            <summary>
            スレッド回転数/s
            </summary>
        </member>
        <member name="P:BelicsClass.ProcessManage.BL_ThreadController_Base.Step">
            <summary>
            スレッド工程ステップ
            </summary>
        </member>
        <member name="P:BelicsClass.ProcessManage.BL_ThreadController_Base.Retry">
            <summary>
            リトライ回数
            </summary>
        </member>
        <member name="P:BelicsClass.ProcessManage.BL_ThreadController_Base.IsSuspend">
            <summary>
            スレッドの一時停止状態を取得します
            </summary>
        </member>
        <member name="P:BelicsClass.ProcessManage.BL_ThreadController_Base.Interval">
            <summary>
            スレッドのスキャン周期を取得または設定します
            </summary>
        </member>
        <member name="T:BelicsClass.ProcessManage.BL_ThreadController_Base.ThreadState">
            <summary>スレッドの状態</summary>
        </member>
        <member name="F:BelicsClass.ProcessManage.BL_ThreadController_Base.ThreadState.Stop">
            <summary>停止</summary>
        </member>
        <member name="F:BelicsClass.ProcessManage.BL_ThreadController_Base.ThreadState.Run">
            <summary>実行中</summary>
        </member>
        <member name="F:BelicsClass.ProcessManage.BL_ThreadController_Base.ThreadState.Suspend">
            <summary>一時停止</summary>
        </member>
        <member name="T:BelicsClass.ProcessManage.BL_ThreadController_Base.Event_Handler_ChangeThreadState">
            <summary>
            スレッド実行状態変化イベント定義
            </summary>
            <param name="sender"></param>
            <param name="state"></param>
        </member>
        <member name="T:BelicsClass.ProcessManage.BL_ThreadController_Base.BL_Histories">
            <summary>
            スレッド内のログ１件を管理します
            </summary>
        </member>
        <member name="F:BelicsClass.ProcessManage.BL_ThreadController_Base.BL_Histories.timestamp">
            <summary>発生日時</summary>
        </member>
        <member name="F:BelicsClass.ProcessManage.BL_ThreadController_Base.BL_Histories.name">
            <summary>名前</summary>
        </member>
        <member name="F:BelicsClass.ProcessManage.BL_ThreadController_Base.BL_Histories.callfrom">
            <summary>呼出元</summary>
        </member>
        <member name="F:BelicsClass.ProcessManage.BL_ThreadController_Base.BL_Histories.description">
            <summary>内容</summary>
        </member>
        <member name="F:BelicsClass.ProcessManage.BL_ThreadController_Base.BL_Histories.level">
            <summary>ログレベル</summary>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_ThreadController_Base.BL_Histories.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_ThreadController_Base.BL_Histories.#ctor(System.String,System.String,System.String,System.Int32)">
            <summary>
            コンストラクタ
            </summary>
            <param name="name">名前</param>
            <param name="callfrom">呼出元</param>
            <param name="description">内容</param>
            <param name="level">レベル</param>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base.FormLogger.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="filename"></param>
        </member>
        <member name="T:BelicsClass.UI.BL_MainForm_Base.EdgeLocation">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MainForm_Base.EdgeLocation.TOP">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MainForm_Base.EdgeLocation.BOTTOM">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MainForm_Base.EdgeLocation.LEFT">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MainForm_Base.EdgeLocation.RIGHT">
            <summary></summary>
        </member>
        <member name="T:BelicsClass.UI.Report.BL_ReportView_Base">
            <summary>
            レポートビュークラス
            </summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportView_Base.components">
            <summary>必要なデザイナ変数です。 </summary>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportView_Base.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportView_Base.#ctor(BelicsClass.UI.Report.BL_ReportControl_Base,BelicsClass.UI.Report.BL_ReportData_Base.BL_ReportPageParam)">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportView_Base.Dispose(System.Boolean)">
            <summary> 使用されているリソースに後処理を実行します。</summary>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportView_Base.InitializeComponent">
            <summary> デザイナ サポートに必要なメソッドです。このメソッドの内容を コード エディタで変更しないでください。 </summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportView_Base.PdfScale">
            <summary>PDFの印刷スケール</summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportView_Base.Report_Data">
            <summary>
            レポートで利用するデータ構造本体
            </summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportView_Base.Report_controller">
            <summary>
            レポートコントローラーへの参照
            </summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportView_Base.Titles">
            <summary>
            列タイトル文字列
            </summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportView_Base.Headers">
            <summary>
            ヘッダーラベルコントロール
            </summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportView_Base.Rows">
            <summary>
            行列ラベルコントロール
            </summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportView_Base.Readed">
            <summary>
            データ読み込み済みフラグ
            </summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportView_Base.Report_PageNo">
            <summary>
            レポートページ
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportView_Base.Initialize(System.Int32,System.Int32)">
            <summary>
            グリッド形式レポート用に初期化処理を行います
            グリッドレポート用に行列分のコントロールを複製して生成します
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportView_Base.Initialize(System.Int32,System.Int32,System.String[])">
            <summary>
            グリッド形式レポート用に初期化処理を行います
            グリッドレポート用に行列分のコントロールを複製して生成します
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportView_Base.DuplicateLabel(System.Windows.Forms.Label,System.String,System.Int32)">
            <summary>
            コントロールの複製処理
            </summary>
            <param name="source">複製元となるラベルコントロール</param>
            <param name="name">複製後のコントロール名称</param>
            <param name="row">複製先の行番号</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportView_Base.DuplucatePanel(System.Windows.Forms.Panel,System.String,System.Int32)">
            <summary>
            コントロールの複製処理
            </summary>
            <param name="source">複製元となるパネルコントロール</param>
            <param name="name">複製後のコントロール名称</param>
            <param name="row">複製先の行番号</param>
            <returns></returns>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportView_Base.textBoxes">
            <summary>
            レポートが保持する編集用テキストコントロールのコレクション
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportView_Base.Initialize_ReportTextBox">
            <summary>
            編集用テキストボックスの初期化
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportView_Base.Update_ReportTextBox">
            <summary>
            編集用テキストボックスでの編集結果反映処理
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportView_Base.Cancel_ReportTextBox">
            <summary>
            編集用テキストボックスの編集キャンセル処理
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportView_Base.Report_DataSet">
            <summary>
            データインスタンスから画面データへの更新
            オーバーライドして処理を実装ください
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportView_Base.Report_DataGet">
            <summary>
            画面データからデータインスタンスへの更新
            オーバーライドして処理を実装ください
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportView_Base.DrawImage(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            イメージを描画します
            </summary>
            <param name="g"></param>
            <param name="targetBounds"></param>
            <param name="FixedRatio"></param>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportView_Base.DrawImage(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            イメージを描画します
            </summary>
            <param name="g"></param>
            <param name="targetBounds"></param>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportView_Base.DrawImage(System.Drawing.Graphics)">
            <summary>
            イメージを描画します
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportView_Base.PrintAllChildControls(System.Drawing.Size,System.Windows.Forms.Control,System.Drawing.Point,System.Drawing.Graphics,iTextSharp.text.pdf.PdfContentByte)">
            <summary>
            フォーム内の子コントロールを描画します
            </summary>
            <param name="docsize"></param>
            <param name="root"></param>
            <param name="offset"></param>
            <param name="g"></param>
            <param name="cb"></param>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportView_Base.Y(System.Single,iTextSharp.text.Document)">
            <summary>
            
            </summary>
            <param name="y"></param>
            <param name="doc"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportView_Base.X(System.Single,iTextSharp.text.Document)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="doc"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportView_Base.W(System.Single,iTextSharp.text.Document)">
            <summary>
            
            </summary>
            <param name="w"></param>
            <param name="doc"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportView_Base.H(System.Single,iTextSharp.text.Document)">
            <summary>
            
            </summary>
            <param name="h"></param>
            <param name="doc"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportView_Base.GetImage(System.Drawing.Rectangle,System.Boolean)">
            <summary>
            コントロールのイメージを取得します
            </summary>
            <param name="targetBounds">生成するイメージのサイズ</param>
            <param name="FixedRatio">拡大率</param>
            <returns>取得できたイメージ</returns>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportView_Base.GetImage(System.Drawing.Rectangle)">
            <summary>
            イメージを取得します
            </summary>
            <param name="targetBounds"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportView_Base.GetImage(System.Boolean)">
            <summary>
            イメージを取得します
            </summary>
            <param name="FixedRatio"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportView_Base.GetImage">
            <summary>
            イメージを取得します
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportView_Base.PrintOut">
            <summary>
            印刷します
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportView_Base.OnQueryPageSettings(System.Object,System.Drawing.Printing.QueryPageSettingsEventArgs)">
            <summary>
            印刷処理時に呼び出され、印刷準備を行います
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportView_Base.OnPrintPage(System.Object,System.Drawing.Printing.PrintPageEventArgs)">
            <summary>
            印刷処理時に呼び出され、印刷処理を行います
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportView_Base.Duplicate">
            <summary>
            リストビューなどの連続データによる自ページ増殖処理
            </summary>
            <returns></returns>
        </member>
        <member name="P:BelicsClass.UI.Report.BL_ReportView_Base.ScalingMode">
            <summary>スケーリングモード</summary>
        </member>
        <member name="P:BelicsClass.UI.Report.BL_ReportView_Base.PaperKind">
            <summary>用紙サイズ</summary>
        </member>
        <member name="P:BelicsClass.UI.Report.BL_ReportView_Base.AutoZoom">
            <summary>自動調整</summary>
        </member>
        <member name="P:BelicsClass.UI.Report.BL_ReportView_Base.Zoom">
            <summary>印刷プレビューのズームを取得または設定します</summary>
        </member>
        <member name="P:BelicsClass.UI.Report.BL_ReportView_Base.FixedDotPenStyle">
            <summary></summary>
        </member>
        <member name="P:BelicsClass.UI.Report.BL_ReportView_Base.FixedSinglePenStyle">
            <summary></summary>
        </member>
        <member name="P:BelicsClass.UI.Report.BL_ReportView_Base.Fixed3DPenStyle">
            <summary></summary>
        </member>
        <member name="P:BelicsClass.UI.Report.BL_ReportView_Base.PageEditable">
            <summary></summary>
        </member>
        <member name="P:BelicsClass.UI.Report.BL_ReportView_Base.Report_PageCount">
            <summary>
            レポートページ数
            </summary>
        </member>
        <member name="T:BelicsClass.UI.Report.BL_ReportView_Base.ScalingModes">
            <summary> スケーリングモード列挙体 </summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportView_Base.ScalingModes.Portrait">
            <summary>
            縦固定
            </summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportView_Base.ScalingModes.Landscape">
            <summary>
            横固定
            </summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportView_Base.ScalingModes.Auto">
            <summary>
            オートスケーリング
            入力されたコントロールの縦横比から用紙の縦横をオート選択
            </summary>
        </member>
        <member name="T:BelicsClass.UI.Controls.BL_FlatButton">
            <summary>
            フラットボタンクラス
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Controls.BL_FlatButton.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Controls.BL_FlatButton.OnClick(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.Controls.BL_FlatButton.OnEnabledChanged(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:BelicsClass.UI.Controls.BL_FlatButton.BackColorNormal">
            <summary></summary>
        </member>
        <member name="P:BelicsClass.UI.Controls.BL_FlatButton.ForeColorNormal">
            <summary></summary>
        </member>
        <member name="P:BelicsClass.UI.Controls.BL_FlatButton.BackColorON">
            <summary></summary>
        </member>
        <member name="P:BelicsClass.UI.Controls.BL_FlatButton.ForeColorON">
            <summary></summary>
        </member>
        <member name="P:BelicsClass.UI.Controls.BL_FlatButton.BackColorOFF">
            <summary></summary>
        </member>
        <member name="P:BelicsClass.UI.Controls.BL_FlatButton.ForeColorOFF">
            <summary></summary>
        </member>
        <member name="P:BelicsClass.UI.Controls.BL_FlatButton.CheckMode">
            <summary>
            
            </summary>
        </member>
        <member name="P:BelicsClass.UI.Controls.BL_FlatButton.Checked">
            <summary>
            
            </summary>
        </member>
        <member name="T:BelicsClass.UI.Controls.BL_CornerLabel">
            <summary>
            コーナー部分の丸みを再現するためのラベルクラス
            </summary>
        </member>
        <member name="F:BelicsClass.UI.Controls.BL_CornerLabel.components">
            <summary>
            必要なデザイナ変数です。
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Controls.BL_CornerLabel.Dispose(System.Boolean)">
            <summary>
            使用中のリソースをすべてクリーンアップします。
            </summary>
            <param name="disposing">マネージ リソースが破棄される場合 true、破棄されない場合は false です。</param>
        </member>
        <member name="M:BelicsClass.UI.Controls.BL_CornerLabel.InitializeComponent">
            <summary>
            デザイナ サポートに必要なメソッドです。このメソッドの内容を 
            コード エディタで変更しないでください。
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Controls.BL_CornerLabel.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Controls.BL_CornerLabel.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            
            </summary>
            <param name="pevent"></param>
        </member>
        <member name="M:BelicsClass.UI.Controls.BL_CornerLabel.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            
            </summary>
            <param name="pevent"></param>
        </member>
        <member name="M:BelicsClass.UI.Controls.BL_CornerLabel.DrawBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            コントロールの背景を描画する
            </summary>
            <param name="pevent">描画先のコントロールに関連する情報</param>
        </member>
        <member name="M:BelicsClass.UI.Controls.BL_CornerLabel.DrawBackgroundImage(System.Drawing.Graphics,System.Drawing.Image,System.Windows.Forms.ImageLayout)">
            <summary>
            コントロールの背景画像を描画する
            </summary>
            <param name="g">描画に使用するグラフィックス オブジェクト</param>
            <param name="img">描画する画像</param>
            <param name="layout">画像のレイアウト</param>
        </member>
        <member name="M:BelicsClass.UI.Controls.BL_CornerLabel.DrawParentWithBackControl(System.Windows.Forms.PaintEventArgs)">
            <summary>
            親コントロールと背面にあるコントロールを描画する
            </summary>
            <param name="pevent">描画先のコントロールに関連する情報</param>
        </member>
        <member name="M:BelicsClass.UI.Controls.BL_CornerLabel.DrawParentControl(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)">
            <summary>
            親コントロールを描画する
            </summary>
            <param name="c">親コントロール</param>
            <param name="pevent">描画先のコントロールに関連する情報</param>
        </member>
        <member name="M:BelicsClass.UI.Controls.BL_CornerLabel.DrawBackControl(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)">
            <summary>
            背面のコントロールを描画する
            </summary>
            <param name="c">背面のコントロール</param>
            <param name="pevent">描画先のコントロールに関連する情報</param>
        </member>
        <member name="M:BelicsClass.UI.Controls.BL_CornerLabel.DrawCornerLabel(System.Windows.Forms.PaintEventArgs)">
            <summary>
            CornerLabelを描画する
            </summary>
            <param name="pevent">描画先のコントロールに関連する情報</param>
        </member>
        <member name="M:BelicsClass.UI.Controls.BL_CornerLabel.GroupColorChange(System.Windows.Forms.Form,System.Int32,System.Drawing.Color)">
            <summary>
            指定したブロック番号の背景色を変更する
            </summary>
            <param name="form">コントロールのコレクション</param>
            <param name="block_no">ブロック</param>
            <param name="color">背景色</param>
        </member>
        <member name="P:BelicsClass.UI.Controls.BL_CornerLabel.Ex_BlockNo">
            <summary>
            ブロック番号
            </summary>
        </member>
        <member name="P:BelicsClass.UI.Controls.BL_CornerLabel.Ex_Monitor">
            <summary>
            モニタタイプ
            0:モニタ無し 1:モニタ有り
            </summary>
        </member>
        <member name="P:BelicsClass.UI.Controls.BL_CornerLabel.Ex_LabelShape">
            <summary>
            形状
            </summary>
        </member>
        <member name="P:BelicsClass.UI.Controls.BL_CornerLabel.Ex_Radius">
            <summary>
            内側円弧の内径
            </summary>
        </member>
        <member name="P:BelicsClass.UI.Controls.BL_CornerLabel.Ex_ShapeColor">
             <summary>
            形状塗りつぶし色 
             </summary>
        </member>
        <member name="P:BelicsClass.UI.Controls.BL_CornerLabel.Ex_LineWith">
            <summary>
            輪郭描画時の線幅
            </summary>
        </member>
        <member name="P:BelicsClass.UI.Controls.BL_CornerLabel.Ex_LineColor">
            <summary>
            輪郭描画時の線色
            </summary>
        </member>
        <member name="P:BelicsClass.UI.Controls.BL_CornerLabel.Ex_AllowTransparency">
            <summary>
            背景が透明な時、背面のコントロールを描画するか否か
            </summary>
        </member>
        <member name="T:BelicsClass.UI.Controls.BL_CornerLabel.LabelStyle">
            <summary>
            形状
            </summary>
        </member>
        <member name="F:BelicsClass.UI.Controls.BL_CornerLabel.LabelStyle.Flat">
            <summary>
            方形
            </summary>
        </member>
        <member name="F:BelicsClass.UI.Controls.BL_CornerLabel.LabelStyle.LeftTop">
            <summary>
            左上
            </summary>
        </member>
        <member name="F:BelicsClass.UI.Controls.BL_CornerLabel.LabelStyle.LeftBottom">
            <summary>
            左下
            </summary>
        </member>
        <member name="F:BelicsClass.UI.Controls.BL_CornerLabel.LabelStyle.RightTop">
            <summary>
            右上
            </summary>
        </member>
        <member name="F:BelicsClass.UI.Controls.BL_CornerLabel.LabelStyle.RightBottom">
            <summary>
            右下
            </summary>
        </member>
        <member name="T:BelicsClass.Rs232c.BL_Rs232c">
            <summary>
            RS-232Cクラス
            </summary>
        </member>
        <member name="M:BelicsClass.Rs232c.BL_Rs232c.#ctor">
            <summary>
            RS-232Cクラス
            </summary>
        </member>
        <member name="M:BelicsClass.Rs232c.BL_Rs232c.#ctor(System.Boolean)">
            <summary>
            RS-232Cクラス
            </summary>
            <param name="eventEnable">イベント型にする場合は true。それ以外の場合は false。</param>
        </member>
        <member name="M:BelicsClass.Rs232c.BL_Rs232c.Finalize">
            <summary>
             RS-232Cクラス
            </summary>
        </member>
        <member name="M:BelicsClass.Rs232c.BL_Rs232c.Open(BelicsClass.Rs232c.BL_Rs232c.PortNo,BelicsClass.Rs232c.BL_Rs232c.BaudRate,BelicsClass.Rs232c.BL_Rs232c.ByteSize,BelicsClass.Rs232c.BL_Rs232c.Parity,BelicsClass.Rs232c.BL_Rs232c.StopBits,BelicsClass.Rs232c.BL_Rs232c.FormatType)">
            <summary>
            デバイスをオープンします。
            </summary>
            <param name="portNo">オープンするデバイスのポート№。</param>
            <param name="baudRate">オープンするデバイスのボーレート。</param>
            <param name="byteSize">オープンするデバイスのデータビット長。</param>
            <param name="parity">オープンするデバイスのパリティビット。</param>
            <param name="stopBits">オープンするデバイスのストップビット。</param>
            <param name="formatType">オープンするデバイスのフォーマット。FormatType.NONE 以外は、書き込むデータに付加されます。また、読み込みはそのフォーマットの単位で行い、読み込みデータからその部分は排除されます。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Rs232c.BL_Rs232c.Close">
            <summary>
            デバイスをクローズします。
            </summary>
        </member>
        <member name="M:BelicsClass.Rs232c.BL_Rs232c.Send(System.String)">
            <summary>
            デバイスにデータを書き込みます。
            </summary>
            <param name="data">書き込むデータが格納されている文字列。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Rs232c.BL_Rs232c.Receive">
            <summary>
            デバイスからデータを読み込みます。　フォーマットコードを含めません
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Rs232c.BL_Rs232c.ReceiveAll">
            <summary>
            デバイスからデータを読み込みます。　フォーマットコードを含めます
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Rs232c.BL_Rs232c.SendBytes(System.Byte[])">
            <summary>
            デバイスにバイト配列のデータを書き込みます。
            </summary>
            <param name="data">書き込むデータが格納されているバイト配列。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Rs232c.BL_Rs232c.ReceiveBytes(System.Int32@)">
            <summary>
            デバイスからバイト配列でデータを読み込みます。フォーマットコードを含めません
            </summary>
            <param name="bytes_size">受信したバイト数。未受信のときは、-1。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Rs232c.BL_Rs232c.ReceiveBytesAll(System.Int32@)">
            <summary>
            デバイスからバイト配列でデータを読み込みます。フォーマットコードを含めます
            </summary>
            <param name="bytes_size">受信したバイト数。未受信のときは、-1。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Rs232c.BL_Rs232c.ReceiveBytes">
            <summary>
            デバイスからバイト配列でデータを読み込みます。フォーマットコードを含めません
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Rs232c.BL_Rs232c.ReceiveBytesAll">
            <summary>
            デバイスからバイト配列でデータを読み込みます。フォーマットコードを含めます
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Rs232c.BL_Rs232c.SendBytesDirect(System.Byte[])">
            <summary>
            デバイスに FormatType列挙型 の設定を付加せずにデータを書き込みます。
            </summary>
            <param name="data">書き込むデータが格納されているバイト配列。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Rs232c.BL_Rs232c.ReceiveBytesDirect">
            <summary>
            デバイスから FormatType列挙型 の設定を無視してバイト配列でデータを読み込みます。
            </summary>
            <returns></returns>
        </member>
        <member name="E:BelicsClass.Rs232c.BL_Rs232c.ReceiveEvent">
            <summary>
            受信すると発生します。
            </summary>
        </member>
        <member name="P:BelicsClass.Rs232c.BL_Rs232c.IsOpened">
            <summary>
            オープン中かどうかを取得します
            </summary>
        </member>
        <member name="P:BelicsClass.Rs232c.BL_Rs232c.OpeningPortNo">
            <summary>
            オープン中のポートNoを取得します(1～20)
            未オープンの場合は0を返します
            </summary>
        </member>
        <member name="P:BelicsClass.Rs232c.BL_Rs232c.FormatKindInclude">
            <summary>
            取得データにフォーマットコードを含めるかどうかを取得または設定します
            </summary>
        </member>
        <member name="P:BelicsClass.Rs232c.BL_Rs232c.ErrorCode">
            <summary>
            異常コードを取得します。
            </summary>
        </member>
        <member name="P:BelicsClass.Rs232c.BL_Rs232c.ErrorMessage">
            <summary>
            異常内容を取得します。
            </summary>
        </member>
        <member name="T:BelicsClass.Rs232c.BL_Rs232c.ReceiveEventHandler">
            <summary>
            イベントを処理するメソッドを表します。
            </summary>
        </member>
        <member name="T:BelicsClass.Rs232c.BL_Rs232c.ReceiveEventArgs">
            <summary>
            受信すると発生するイベントの引数。
            </summary>
        </member>
        <member name="P:BelicsClass.Rs232c.BL_Rs232c.ReceiveEventArgs.BytesData">
            <summary>
            受信したデータが格納されているバイト配列を取得します。
            </summary>
        </member>
        <member name="T:BelicsClass.Rs232c.BL_Rs232c.PortNo">
            <summary>
            ポート№
            </summary>
        </member>
        <member name="F:BelicsClass.Rs232c.BL_Rs232c.PortNo._01">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.Rs232c.BL_Rs232c.PortNo._02">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.Rs232c.BL_Rs232c.PortNo._03">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.Rs232c.BL_Rs232c.PortNo._04">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.Rs232c.BL_Rs232c.PortNo._05">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.Rs232c.BL_Rs232c.PortNo._06">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.Rs232c.BL_Rs232c.PortNo._07">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.Rs232c.BL_Rs232c.PortNo._08">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.Rs232c.BL_Rs232c.PortNo._09">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.Rs232c.BL_Rs232c.PortNo._10">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.Rs232c.BL_Rs232c.PortNo._11">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.Rs232c.BL_Rs232c.PortNo._12">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.Rs232c.BL_Rs232c.PortNo._13">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.Rs232c.BL_Rs232c.PortNo._14">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.Rs232c.BL_Rs232c.PortNo._15">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.Rs232c.BL_Rs232c.PortNo._16">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.Rs232c.BL_Rs232c.PortNo._17">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.Rs232c.BL_Rs232c.PortNo._18">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.Rs232c.BL_Rs232c.PortNo._19">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.Rs232c.BL_Rs232c.PortNo._20">
            <summary>
            
            </summary>
        </member>
        <member name="T:BelicsClass.Rs232c.BL_Rs232c.BaudRate">
            <summary>
            ボーレート
            </summary>
        </member>
        <member name="F:BelicsClass.Rs232c.BL_Rs232c.BaudRate._1200">
            <summary>
            1200bps
            </summary>
        </member>
        <member name="F:BelicsClass.Rs232c.BL_Rs232c.BaudRate._2400">
            <summary>
            2400bps
            </summary>
        </member>
        <member name="F:BelicsClass.Rs232c.BL_Rs232c.BaudRate._4800">
            <summary>
            4800bps
            </summary>
        </member>
        <member name="F:BelicsClass.Rs232c.BL_Rs232c.BaudRate._9600">
            <summary>
            9600bps
            </summary>
        </member>
        <member name="F:BelicsClass.Rs232c.BL_Rs232c.BaudRate._14400">
            <summary>
            14400bps
            </summary>
        </member>
        <member name="F:BelicsClass.Rs232c.BL_Rs232c.BaudRate._19200">
            <summary>
            19200bps
            </summary>
        </member>
        <member name="F:BelicsClass.Rs232c.BL_Rs232c.BaudRate._38400">
            <summary>
            38400bps
            </summary>
        </member>
        <member name="F:BelicsClass.Rs232c.BL_Rs232c.BaudRate._57600">
            <summary>
            57600bps
            </summary>
        </member>
        <member name="F:BelicsClass.Rs232c.BL_Rs232c.BaudRate._115200">
            <summary>
            115200bps
            </summary>
        </member>
        <member name="F:BelicsClass.Rs232c.BL_Rs232c.BaudRate._230400">
            <summary>
            230400bps
            </summary>
        </member>
        <member name="T:BelicsClass.Rs232c.BL_Rs232c.ByteSize">
            <summary>
            データ長
            </summary>
        </member>
        <member name="F:BelicsClass.Rs232c.BL_Rs232c.ByteSize._7">
            <summary>
            7ビット
            </summary>
        </member>
        <member name="F:BelicsClass.Rs232c.BL_Rs232c.ByteSize._8">
            <summary>
            7ビット
            </summary>
        </member>
        <member name="T:BelicsClass.Rs232c.BL_Rs232c.Parity">
            <summary>
            パリティ
            </summary>
        </member>
        <member name="F:BelicsClass.Rs232c.BL_Rs232c.Parity.None">
            <summary>
            なし
            </summary>
        </member>
        <member name="F:BelicsClass.Rs232c.BL_Rs232c.Parity.Odd">
            <summary>
            奇数
            </summary>
        </member>
        <member name="F:BelicsClass.Rs232c.BL_Rs232c.Parity.Even">
            <summary>
            偶数
            </summary>
        </member>
        <member name="T:BelicsClass.Rs232c.BL_Rs232c.StopBits">
            <summary>
            ストップビット
            </summary>
        </member>
        <member name="F:BelicsClass.Rs232c.BL_Rs232c.StopBits._1">
            <summary>
            1ビット
            </summary>
        </member>
        <member name="F:BelicsClass.Rs232c.BL_Rs232c.StopBits._2">
            <summary>
            2ビット
            </summary>
        </member>
        <member name="T:BelicsClass.Rs232c.BL_Rs232c.FormatType">
            <summary>
            フォーマット
            </summary>
        </member>
        <member name="F:BelicsClass.Rs232c.BL_Rs232c.FormatType.None">
            <summary>
            なし
            </summary>
        </member>
        <member name="F:BelicsClass.Rs232c.BL_Rs232c.FormatType.CR">
            <summary>
            ～CR
            </summary>
        </member>
        <member name="F:BelicsClass.Rs232c.BL_Rs232c.FormatType.CR_LF">
            <summary>
            ～CR+LF
            </summary>
        </member>
        <member name="F:BelicsClass.Rs232c.BL_Rs232c.FormatType.STX_ETX">
            <summary>
            STX～ETX
            </summary>
        </member>
        <member name="T:BelicsClass.Network.BL_TcpP2P">
            <summary>
            スタンダードプロトコルの送信/受信を行う仮想クラスです。
            このクラスにコネクション確立(Link)を実装することで、サーバ用とクライアント用を派生されます。
            </summary>
        </member>
        <member name="T:BelicsClass.Network.BL_IPeerToPeer">
            <summary>
            ソケットを使用したピア・ツー・ピア通信のinterfaceです。
            </summary>
        </member>
        <member name="M:BelicsClass.Network.BL_IPeerToPeer.Send(System.Byte[])">
            <summary>
            指定したデータを送信します。<b/>
            本メソッドは直ちに制御を返します。
            </summary>
            <param name="data">送信するデータを指定します。</param>
            <returns>通信相手とリンクできていない場合falseを返し、
            リンクできている場合trueを返します。<b/>
            送信ができたことを意味していません。</returns>
        </member>
        <member name="M:BelicsClass.Network.BL_IPeerToPeer.Send(System.Byte[],System.Int32,System.Int32)">
            <summary>
            指定したデータを送信します。<b/>
            本メソッドは直ちに制御を返します。
            </summary>
            <param name="data">送信するデータを指定します。</param>
            <param name="offset">dataの送信開始オフセットを指定します。</param>
            <param name="length">送信するデータ長(byte)を指定します。</param>
            <returns>
            通信相手に送信する準備が整っていない場合falseを返します。<b/>
            通信相手に送信する準備が整った場合trueを返します。<b/>
            戻り値は送信ができたことを意味しません。</returns>
        </member>
        <member name="M:BelicsClass.Network.BL_IPeerToPeer.Receive(System.Byte[]@)">
            <summary>
            受信データを取得します。<b/>
            本メソッドは直ちに制御を返します。
            </summary>
            <param name="data">受信データを返します。<b/>
            受信データが無い場合、nullを返します。</param>
            <returns>受信データがある場合trueを返し、無い場合falseを返します。</returns>
        </member>
        <member name="M:BelicsClass.Network.BL_IPeerToPeer.Receive">
            <summary>
            受信データを取得します。<b/>
            本メソッドは直ちに制御を返します。
            </summary>
            <returns>
            受信データを返します。<b/>
            受信データが無い場合、nullを返します。
            </returns>
        </member>
        <member name="M:BelicsClass.Network.BL_IPeerToPeer.StartLink">
            <summary>
            通信処理を開始します。<b/>
            相手装置と接続していない場合は、接続できるまで接続を試みます。
            相手装置と接続済みの場合は、接続を継続し何もしません。
            </summary>
        </member>
        <member name="M:BelicsClass.Network.BL_IPeerToPeer.EndLink">
            <summary>
            通信処理を終了します。<b/>
            相手装置と接続済みの場合は、接続を切断します。
            相手装置と接続していない場合は、何もしません。
            切断後、StartLinkをコールされるまで接続を行いません。
            </summary>
        </member>
        <member name="P:BelicsClass.Network.BL_IPeerToPeer.WaitHandle">
            <summary>
            受信イベントハンドルを取得します。
            </summary>
        </member>
        <member name="P:BelicsClass.Network.BL_IPeerToPeer.Connected">
            <summary>
            通信相手とのリンク状態を取得します。
            </summary>
        </member>
        <member name="P:BelicsClass.Network.BL_IPeerToPeer.Started">
            <summary>
            通信処理を開始しているか否かを取得します。<b/>
            本プロパティがtrueであっても接続が確立しているとは限りません。
            </summary>
        </member>
        <member name="P:BelicsClass.Network.BL_IPeerToPeer.LocalIPAddress">
            <summary>
            ローカルIPアドレスを取得します。
            </summary>
        </member>
        <member name="P:BelicsClass.Network.BL_IPeerToPeer.LocalPort">
            <summary>
            ローカルポート番号を取得します。
            </summary>
        </member>
        <member name="P:BelicsClass.Network.BL_IPeerToPeer.RemoteIPAddress">
            <summary>
            リモートIPアドレスを取得します。
            </summary>
        </member>
        <member name="P:BelicsClass.Network.BL_IPeerToPeer.RemotePort">
            <summary>
            リモートポート番号を取得します。
            </summary>
        </member>
        <member name="F:BelicsClass.Network.BL_TcpP2P.DEFAULT_BUFFER_COUNT">
            <summary>デフォルトの送受信データキューバッファ数です。</summary>
        </member>
        <member name="F:BelicsClass.Network.BL_TcpP2P.DATA_ID_SIZE">
            <summary>データIDとデータ数の長さです。</summary>
        </member>
        <member name="F:BelicsClass.Network.BL_TcpP2P.MAX_DATA_SIZE">
            <summary>データIDとデータ数を含んだ最大データ長です。</summary>
        </member>
        <member name="M:BelicsClass.Network.BL_TcpP2P.#ctor">
            <summary>
            デフォルトコンストラクタです。
            </summary>
        </member>
        <member name="M:BelicsClass.Network.BL_TcpP2P.#ctor(System.Int32,System.Int32)">
            <summary>
            コンストラクタです。<b/>
            通信は開始されません。
            </summary>
            <param name="sendBufferCount">送信バッファ数を指定します。</param>
            <param name="receiveBufferCount">受信バッファ数を指定します。</param>
        </member>
        <member name="M:BelicsClass.Network.BL_TcpP2P.#ctor(System.Int32,System.Int32,BelicsClass.Network.BL_TcpP2P.BL_FormatType)">
            <summary>
            コンストラクタです。
            通信は開始されません。
            電文フォーマット種別を変更できます。
            </summary>
            <param name="sendBufferCount">送信バッファ数を指定します。</param>
            <param name="receiveBufferCount">受信バッファ数を指定します。</param>
            <param name="formatType">フォーマット種別を指定します。</param>
        </member>
        <member name="M:BelicsClass.Network.BL_TcpP2P.Finalize">
            <summary>
            デストラクタです。<b/>
            スレッドを停止してソケットをクローズします。
            </summary>
        </member>
        <member name="F:BelicsClass.Network.BL_TcpP2P.m_SendQueue">
            <summary>送信データのキューバッファです。</summary>
        </member>
        <member name="F:BelicsClass.Network.BL_TcpP2P.m_ReceiveQueue">
            <summary>受信データのキューバッファです。</summary>
        </member>
        <member name="F:BelicsClass.Network.BL_TcpP2P.SEND_BUFFER_COUNT">
            <summary>送信データのキューバッファ数です。</summary>
        </member>
        <member name="F:BelicsClass.Network.BL_TcpP2P.RECEIVE_BUFFER_COUNT">
            <summary>受信データのキューバッファ数です。</summary>
        </member>
        <member name="F:BelicsClass.Network.BL_TcpP2P.m_Thread">
            <summary>同期通信を行うスレッドです。</summary>
        </member>
        <member name="F:BelicsClass.Network.BL_TcpP2P.m_Connected">
            <summary>内部でコネクション状態を保持しているフラグです。</summary>
        </member>
        <member name="F:BelicsClass.Network.BL_TcpP2P.LinkedSocket">
            <summary>接続済みソケット</summary>
        </member>
        <member name="M:BelicsClass.Network.BL_TcpP2P.SetConnect">
            <summary>コネクト状態を接続にします。</summary>
        </member>
        <member name="M:BelicsClass.Network.BL_TcpP2P.ResetConnect">
            <summary>コネクト状態を切断にします。</summary>
        </member>
        <member name="F:BelicsClass.Network.BL_TcpP2P.m_LocalEndPoint">
            <summary>ローカルエンドポイントです。</summary>
        </member>
        <member name="F:BelicsClass.Network.BL_TcpP2P.m_RemoteEndPoint">
            <summary>リモートエンドポイントです。</summary>
        </member>
        <member name="F:BelicsClass.Network.BL_TcpP2P.m_FormatType">
            <summary>電文フォーマット種別</summary>
        </member>
        <member name="M:BelicsClass.Network.BL_TcpP2P.Loop">
            <summary>
            同期IOを実現するループです。
            </summary>
        </member>
        <member name="M:BelicsClass.Network.BL_TcpP2P.Loop_Send(System.Net.Sockets.Socket)">
            <summary>
            送信処理です。
            </summary>
            <param name="socket">送信ソケットを指定します。</param>
        </member>
        <member name="F:BelicsClass.Network.BL_TcpP2P.m_ReceiveState">
            <summary>受信中のデータを記憶するエリアです。</summary>
        </member>
        <member name="M:BelicsClass.Network.BL_TcpP2P.Loop_Receive(System.Net.Sockets.Socket)">
            <summary>
            受信です。
            </summary>
            <param name="socket">受信ソケットを指定します。</param>
        </member>
        <member name="M:BelicsClass.Network.BL_TcpP2P.Send(System.Byte[])">
            <summary>
            指定したデータを送信します。<b/>
            本メソッドは直ちに制御を返します。
            </summary>
            <param name="datas">送信するデータを指定します。</param>
            <returns>通信相手とリンクできていない場合falseを返し、
            リンクできている場合trueを返します。<b/>
            送信ができたことを意味していません。</returns>
        </member>
        <member name="M:BelicsClass.Network.BL_TcpP2P.Send(System.Byte[],System.Int32,System.Int32)">
            <summary>
            指定したデータを送信します。<b/>
            本メソッドは直ちに制御を返します。
            </summary>
            <param name="datas">送信するデータを指定します。</param>
            <param name="offset">dataの送信開始オフセットを指定します。</param>
            <param name="length">送信するデータ長(byte)を指定します。</param>
            <returns>
            通信相手に送信する準備が整っていない場合falseを返します。<b/>
            通信相手に送信する準備が整った場合trueを返します。<b/>
            戻り値は送信ができたことを意味しません。</returns>
        </member>
        <member name="M:BelicsClass.Network.BL_TcpP2P.ChangeDataCount(System.Int32)">
            <summary>
            データIDとデータ数の相互変換を行います。
            </summary>
            <param name="count">変換する値を指定します。</param>
            <returns>変換された値を返します。</returns>
        </member>
        <member name="M:BelicsClass.Network.BL_TcpP2P.Receive(System.Byte[]@)">
            <summary>
            受信データを取得します。<b/>
            本メソッドは直ちに制御を返します。
            </summary>
            <param name="data">受信データを返します。<b/>
            受信データが無い場合、nullを返します。</param>
            <returns>受信データがある場合trueを返し、無い場合falseを返します。</returns>
        </member>
        <member name="M:BelicsClass.Network.BL_TcpP2P.Receive">
            <summary>
            受信データを取得します。<b/>
            本メソッドは直ちに制御を返します。
            </summary>
            <returns>
            受信データを返します。<b/>
            受信データが無い場合、nullを返します。
            </returns>
        </member>
        <member name="M:BelicsClass.Network.BL_TcpP2P.Link">
            <summary>
            サーバ/クライアントの特化処理です。
            本メソッドでコネクション確立を行います。<b/>
            </summary>
        </member>
        <member name="M:BelicsClass.Network.BL_TcpP2P.StartLink">
            <summary>
            通信を開始します。<b/>
            通信を開始している場合は何もしません。
            </summary>
        </member>
        <member name="M:BelicsClass.Network.BL_TcpP2P.EndLink">
            <summary>
            通信処理を停止します。<b/>
            通信相手とのコネクションが確立されている場合、切断します。
            </summary>
        </member>
        <member name="F:BelicsClass.Network.BL_TcpP2P.m_LoopNow">
            <summary>
            スレッド内のループ中フラグです。
            </summary>
        </member>
        <member name="M:BelicsClass.Network.BL_TcpP2P.Dispose">
            <summary>
            当該インスタンス
            </summary>
        </member>
        <member name="M:BelicsClass.Network.BL_TcpP2P.ToString">
            <summary>
            文字列を返します。
            </summary>
            <returns></returns>
        </member>
        <member name="E:BelicsClass.Network.BL_TcpP2P.EventConnected">
            <summary>接続された際に発生するイベントです</summary>
        </member>
        <member name="E:BelicsClass.Network.BL_TcpP2P.EventReceived">
            <summary>データを受信した際に発生するイベントです</summary>
        </member>
        <member name="E:BelicsClass.Network.BL_TcpP2P.EventClosed">
            <summary>切断された際に発生するイベントです</summary>
        </member>
        <member name="E:BelicsClass.Network.BL_TcpP2P.EventError">
            <summary>通信エラーの際に発生するイベントです</summary>
        </member>
        <member name="P:BelicsClass.Network.BL_TcpP2P.LocalEndPoint">
            <summary>ローカルエンドポイント文字列を取得します。</summary>
        </member>
        <member name="P:BelicsClass.Network.BL_TcpP2P.RemoteEndPoint">
            <summary>リモートエンドポイント文字列を取得します。</summary>
        </member>
        <member name="P:BelicsClass.Network.BL_TcpP2P.FormatType">
            <summary>電文フォーマット種別を取得します。</summary>
        </member>
        <member name="P:BelicsClass.Network.BL_TcpP2P.WaitHandle">
            <summary>
            受信イベントハンドルを取得します。
            </summary>
        </member>
        <member name="P:BelicsClass.Network.BL_TcpP2P.Connected">
            <summary>
            通信相手とのリンク状態を取得します。
            </summary>
        </member>
        <member name="P:BelicsClass.Network.BL_TcpP2P.Started">
            <summary>
            通信処理を開始しているかいなかを取得します。
            </summary>
        </member>
        <member name="P:BelicsClass.Network.BL_TcpP2P.LoopNow">
            <summary>
            スレッド内のループ中フラグです。
            </summary>
        </member>
        <member name="P:BelicsClass.Network.BL_TcpP2P.LocalIPAddress">
            <summary>
            ローカルIPアドレスを取得します。
            最後に接続した時の値になります。
            </summary>
        </member>
        <member name="P:BelicsClass.Network.BL_TcpP2P.LocalPort">
            <summary>
            ローカルポート番号を取得します。
            最後に接続した時の値になります。
            </summary>
        </member>
        <member name="P:BelicsClass.Network.BL_TcpP2P.RemoteIPAddress">
            <summary>
            リモートIPアドレスを取得します。
            最後に接続した時の値になります。
            </summary>
        </member>
        <member name="P:BelicsClass.Network.BL_TcpP2P.RemotePort">
            <summary>
            リモートポート番号を取得します。
            最後に接続した時の値になります。
            </summary>
        </member>
        <member name="T:BelicsClass.Network.BL_TcpP2P.Event_Handler_Connected">
            <summary>
            イベントハンドラーです。
            </summary>
            <param name="sender"></param>
        </member>
        <member name="T:BelicsClass.Network.BL_TcpP2P.Event_Handler_Received">
            <summary>
            イベントハンドラーです。
            </summary>
            <param name="sender"></param>
        </member>
        <member name="T:BelicsClass.Network.BL_TcpP2P.Event_Handler_Closed">
            <summary>
            イベントハンドラーです。
            </summary>
            <param name="sender"></param>
        </member>
        <member name="T:BelicsClass.Network.BL_TcpP2P.Event_Handler_Error">
            <summary>
            イベントハンドラーです。
            </summary>
            <param name="sender"></param>
            <param name="ex"></param>
        </member>
        <member name="T:BelicsClass.Network.BL_TcpP2P.BL_FormatType">
            <summary>
            フォーマット
            </summary>
        </member>
        <member name="F:BelicsClass.Network.BL_TcpP2P.BL_FormatType.NONE">
            <summary>
            NONE
            </summary>
        </member>
        <member name="F:BelicsClass.Network.BL_TcpP2P.BL_FormatType.CR">
            <summary>
            ～CR
            </summary>
        </member>
        <member name="F:BelicsClass.Network.BL_TcpP2P.BL_FormatType.CR_LF">
            <summary>
            ～CR+LF
            </summary>
        </member>
        <member name="F:BelicsClass.Network.BL_TcpP2P.BL_FormatType.STX_ETX">
            <summary>
            STX～ETX
            </summary>
        </member>
        <member name="F:BelicsClass.Network.BL_TcpP2P.BL_FormatType.BL_IDSIZE">
            <summary>
            特殊フォーマット
            </summary>
        </member>
        <member name="T:BelicsClass.Network.BL_TcpP2P.ReceiveState">
            <summary>
            受信状態を示します。
            </summary>
        </member>
        <member name="F:BelicsClass.Network.BL_TcpP2P.ReceiveState.Buffer">
            <summary>受信データの仮記憶バッファです。</summary>
        </member>
        <member name="F:BelicsClass.Network.BL_TcpP2P.ReceiveState.ReceivedLength">
            <summary>Bufferに格納されている受信済みのデータ長(byte)です。</summary>
        </member>
        <member name="F:BelicsClass.Network.BL_TcpP2P.ReceiveState.DataSize">
            <summary>受信中のデータサイズ(全データ長)を格納します。</summary>
        </member>
        <member name="F:BelicsClass.Network.BL_TcpP2P.ReceiveState.StxCheck">
            <summary>STX～ETXフォーマット受信時、STXが検出されたことを表します。</summary>
        </member>
        <member name="M:BelicsClass.Network.BL_TcpP2P.ReceiveState.#ctor">
            <summary>コンストラクタです。</summary>
        </member>
        <member name="M:BelicsClass.Network.BL_TcpP2P.ReceiveState.Clear">
            <summary>受信状態を初期化します。</summary>
        </member>
        <member name="T:BelicsClass.Database.BL_ExcelOle">
            <summary>
            ExcelOleクラス
            </summary>
        </member>
        <member name="M:BelicsClass.Database.BL_ExcelOle.#ctor(System.String)">
            <summary>
            コンストラクタ
            </summary>
            <param name="DataSoure">Excelファイル名</param>
        </member>
        <member name="M:BelicsClass.Database.BL_ExcelOle.#ctor(System.String,System.Boolean)">
            <summary>
            コンストラクタ
            </summary>
            <param name="DataSoure">Excelファイル名</param>
            <param name="Hdr">一行目を項目名:true,データ:false</param>
        </member>
        <member name="M:BelicsClass.Database.BL_ExcelOle.#ctor(System.String,System.String,System.String)">
            <summary>
            コンストラクタ
            </summary>
            <param name="Provider">プロバイダー名</param>
            <param name="DataSoure">Excelファイル名</param>
            <param name="ExtendedProperties">ユーザー情報</param>
        </member>
        <member name="F:BelicsClass.Database.BL_ExcelOle.FileName">
            <summary>
            Excelファイル名
            </summary>
        </member>
        <member name="F:BelicsClass.Database.BL_ExcelOle.ERR_EXCEL">
            <summary>
            EXCELのエラー
            </summary>
        </member>
        <member name="F:BelicsClass.Database.BL_ExcelOle.ERR_OTHERS">
            <summary>
            その他のエラー
            </summary>
        </member>
        <member name="F:BelicsClass.Database.BL_ExcelOle.Error_code">
            <summary>
            エラーコード
            </summary>
        </member>
        <member name="F:BelicsClass.Database.BL_ExcelOle.Error_message">
            <summary>
            エラー内容
            </summary>
        </member>
        <member name="M:BelicsClass.Database.BL_ExcelOle.Exists">
            <summary>
            存在確認
            </summary>
        </member>
        <member name="M:BelicsClass.Database.BL_ExcelOle.GetSheetNames(System.Collections.Generic.List{System.String}@)">
            <summary>
            シート名取得
            </summary>
            <param name="List">シート名</param>
        </member>
        <member name="M:BelicsClass.Database.BL_ExcelOle.Select(System.String,System.Data.DataTable@)">
            <summary>
            シート内容の読込
            </summary>
            <param name="SheetName">シート名</param>
            <param name="Dt">データテーブル</param>
        </member>
        <member name="M:BelicsClass.Database.BL_ExcelOle.errors(System.Int32,System.String)">
            <summary>
            エラー内容のセット
            </summary>
            <param name="Number">エラー№</param>
            <param name="Message">エラーメッセージ</param>
        </member>
        <member name="M:BelicsClass.Database.BL_ExcelOle.errors">
            <summary>
            エラー内容のリセット
            </summary>
        </member>
        <member name="P:BelicsClass.Database.BL_ExcelOle.ErrorCode">
            <summary>
            異常コードを取得します
            </summary>
        </member>
        <member name="P:BelicsClass.Database.BL_ExcelOle.ErrorMessage">
            <summary>
            異常メッセージを取得します
            </summary>
        </member>
        <member name="T:BelicsClass.Common.BL_CommaText">
            <summary>
            カンマ区切り文字列を操作します。<br/>
            引用符のエスケープ方法はExcelのCSV形式に準拠して、
            引用符(ダブルクォーテーション)を2つ連続して並べます。
            </summary>
        </member>
        <member name="M:BelicsClass.Common.BL_CommaText.#ctor">
            <summary>
            デフォルトコンストラクタです。
            </summary>
        </member>
        <member name="M:BelicsClass.Common.BL_CommaText.#ctor(System.Char,System.Char)">
            <summary>
            デリミタと引用符を指定できるコンストラクタです。
            </summary>
            <param name="delimiter">デリミタを指定します。</param>
            <param name="quoted">引用符を指定します。</param>
        </member>
        <member name="F:BelicsClass.Common.BL_CommaText.m_Quoted">
            <summary>引用符です。</summary>
        </member>
        <member name="F:BelicsClass.Common.BL_CommaText.m_Delimiter">
            <summary>デリミタです。</summary>
        </member>
        <member name="M:BelicsClass.Common.BL_CommaText.Trim">
            <summary>
            区切り文字列の最後尾が文字列無しの場合、削除します。
            </summary>
        </member>
        <member name="M:BelicsClass.Common.BL_CommaText.getCommaStr">
            <summary>保持している文字列をカンマ区切り文字列にして取得します。</summary>
            <returns>カンマ区切り文字列を返します。</returns>
        </member>
        <member name="M:BelicsClass.Common.BL_CommaText.setCommaStr(System.String)">
            <summary>カンマ区切り文字列を設定します。</summary>
            <param name="commaString">設定するカンマ区切り文字列を指定します。</param>
        </member>
        <member name="M:BelicsClass.Common.BL_CommaText.DivideTopText(System.String@,System.String@,System.Char,System.Char)">
            <summary>
            指定されたカンマ区切り文字列の先頭文字列を取得できます。
            </summary>
            <param name="baseString"></param>
            <param name="topString"></param>
            <param name="quoted"></param>
            <param name="delimiter"></param>
        </member>
        <member name="P:BelicsClass.Common.BL_CommaText.Text">
            <summary>
            カンマ区切り文字列の取得/設定を行います。<br/>
            取得した文字列は引用符でくくられた形式となります。<br/>
            設定する場合は、ExcelのCSV形式で保存した時の行と同等の
            フォーマットを設定してください。Excel互換で無い文字列を
            代入すると例外を投げます。
            </summary>
        </member>
        <member name="P:BelicsClass.Common.BL_CommaText.Quoted">
            <summary>
            引用符の取得します。<br/>
            デフォルトはダブルクォーテーション(半角)です。
            </summary>
        </member>
        <member name="P:BelicsClass.Common.BL_CommaText.Delimiter">
            <summary>
            デリミタ(カンマ)の取得します。<br/>
            デフォルトはカンマ(半角)です。
            </summary>
        </member>
        <member name="P:BelicsClass.Common.BL_CommaText.Item(System.Int32)">
            <summary>
            カンマで区切られた文字列を取得/設定します。<br/>
            indexは0から指定します。
            </summary>
        </member>
        <member name="T:BelicsClass.UI.Controls.BL_StripeListView">
            <summary>
            行毎に交互に背景色が異なるリストビュークラス
            </summary>
        </member>
        <member name="F:BelicsClass.UI.Controls.BL_StripeListView.StripeBackColor1">
            <summary>
            奇数行の背景色
            </summary>
        </member>
        <member name="F:BelicsClass.UI.Controls.BL_StripeListView.StripeBackColor2">
            <summary>
            偶数行の背景色
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Controls.BL_StripeListView.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Controls.BL_StripeListView.OnDrawColumnHeader(System.Windows.Forms.DrawListViewColumnHeaderEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.Controls.BL_StripeListView.OnDrawItem(System.Windows.Forms.DrawListViewItemEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:BelicsClass.ObjectSync.BL_TcpSocketSync">
            <summary>
            クラスインスタンスをTCPソケット通信で送受信するクラス
            共有メモリの変化を検出し、イベントを発生させます
            共有メモリを利用しない場合、イベントは発生しません
            
            本クラスから派生して、TCPソケット共有アクセスを行いたいフィールドが定義されたクラスを設計してください
            フィールドは本クラスのInitializeメソッドコールによって解析され、バイト配列とオブジェクト間の相互変換が行われます
            null値はフィールドの初期値として使用できません。必ずコンストラクタで初期値を設定してください
            stringフィールドは、必要文字数分の空白で初期化してください
            
            TCPサーバーとTCPクライアントの両機能を保有します
            TCPサーバーに接続されるとクライアントからのデータ変更を受け取り、本オブジェクトにデータが反映されます
            TCPサーバーはマルチクライアント接続を行い、複数のクライアントからのデータ変更を処理します
            TCPサーバーはクライアントからのデータ変更によってEventHandler_Updatedイベントを発生させます
            
            TCPクライアントを接続するとサーバー側へ本オブジェクトのデータ変更を送信することができます
            
            フィールドには「下記の組み込み型、および下記で構成されたクラス、配列」を使用することができます
            Boolean     4byte
            Int16       2byte
            Int32       4byte
            Int64       8byte
            UInt16      2byte
            UInt32      4byte
            UInt64      8byte
            Double      8byte
            Single      4byte
            Byte        1byte
            Char        1byte
            String      ??? byte
            
            </summary>
        </member>
        <member name="T:BelicsClass.ObjectSync.BL_FaceMemorySyncNotify">
            <summary>
            クラスインスタンスを共有メモリでアクセスを行うクラス
            共有メモリの変化を検出し、イベントを発生させます
            共有メモリを利用しない場合、イベントは発生しません
            
            本クラスから派生して、共有アクセスを行いたいフィールドが定義されたクラスを設計してください
            フィールドは本クラスのInitializeメソッドコールによって解析され、バイト配列とオブジェクト間の相互変換が行われます
            null値はフィールドの初期値として使用できません
            stringフィールドは、必要文字数分の空白で初期化してください
            
            フィールドには「下記の組み込み型、および下記で構成されたクラス、配列」を使用することができます
            Boolean     4byte
            Int16       2byte
            Int32       4byte
            Int64       8byte
            UInt16      2byte
            UInt32      4byte
            UInt64      8byte
            Double      8byte
            Single      4byte
            Byte        1byte
            Char        1byte
            String      ??? byte
            
            </summary>
        </member>
        <member name="T:BelicsClass.ObjectSync.BL_FaceMemorySync">
            <summary>
            クラスインスタンスを共有メモリでアクセスを行うクラス
            
            本クラスから派生して、共有アクセスを行いたいフィールドが定義されたクラスを設計してください
            フィールドは本クラスのInitializeメソッドコールによって解析され、バイト配列とオブジェクト間の相互変換が行われます
            null値はフィールドの初期値として使用できません
            stringフィールドは、必要文字数分の空白で初期化してください
            
            フィールドには「下記の組み込み型、および下記で構成されたクラス、配列」を使用することができます
            Boolean     4byte
            Int16       2byte
            Int32       4byte
            Int64       8byte
            UInt16      2byte
            UInt32      4byte
            UInt64      8byte
            Double      8byte
            Single      4byte
            Byte        1byte
            Char        1byte
            String      ??? byte
            
            </summary>
        </member>
        <member name="T:BelicsClass.ObjectSync.BL_XmlSync">
            <summary>
            XMLシリアライズ可能オブジェクトの基本クラス
            </summary>
        </member>
        <member name="T:BelicsClass.ObjectSync.BL_ObjectSync">
            <summary>
            クラスインスタンスとバイト配列データの相互自動変換を行うクラス
            
            自インスタンスが所持するprivate以外のフィールドを解析して、必要数分のバイト配列を生成するための準備が行われます
            フィールドは本クラスのInitializeメソッドコールによって解析され、バイト配列とオブジェクト間の相互変換が行われます
            null値はフィールドの初期値として使用できません
            stringフィールドは、必要文字数分の空白で初期化してください
            
            フィールドには「下記の組み込み型、および下記で構成されたクラス、配列」を使用することができます
            Boolean     4byte
            Int16       2byte
            Int32       4byte
            Int64       8byte
            UInt16      2byte
            UInt32      4byte
            UInt64      8byte
            Double      8byte
            Single      4byte
            Byte        1byte
            Char        1byte
            String      ??? byte
            DateTime    8byte(Int64 Ticks値で保持)
            TimeSpan    8byte(Int64 Ticks値で保持)
            
            </summary>
        </member>
        <member name="F:BelicsClass.ObjectSync.BL_ObjectSync.dictField">
            <summary>
            フィールド情報コレクション（ベタ）
            </summary>
        </member>
        <member name="F:BelicsClass.ObjectSync.BL_ObjectSync.dictClasses">
            <summary>
            フィールド情報コレクション（クラス・配列）
            </summary>
        </member>
        <member name="F:BelicsClass.ObjectSync.BL_ObjectSync.Offset">
            <summary>
            最終オフセット
            </summary>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_ObjectSync.GetFieldDictionary">
            <summary>
            フィールド情報コレクション（ベタ）を取得します
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_ObjectSync.GetClassesDictionary">
            <summary>
            フィールド情報コレクション（クラス・配列）を取得します
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_ObjectSync.GetAllFieldNames">
            <summary>
            全てのフィールド名を取得します
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_ObjectSync.InstanceReplacer(System.Object,System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="field_name"></param>
            <param name="index"></param>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_ObjectSync.ObjectAnalyze(System.Object,System.String,System.Int32)">
            <summary>
            クラス情報を解析してフィールドコレクションを生成します
            </summary>
            <param name="x">対象クラス</param>
            <param name="field_name">フィールド名</param>
            <param name="index">配列の場合はインデックス、通常[-1]</param>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_ObjectSync.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_ObjectSync.Finalize">
            <summary>
            デストラクタ
            </summary>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_ObjectSync.Dispose">
            <summary>
            オブジェクト破棄
            </summary>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_ObjectSync.Initialize">
            <summary>
            初期化します
            自オブジェクトが所持するprivate以外のフィールドを解析して、必要数分のバイト配列を生成するための準備が行われます
            本メソッド実行後、フィールド名文字列によるデータ操作が可能となります
            </summary>
            <returns>初期化成功でtrueを返します</returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_ObjectSync.Initialize(System.Object)">
            <summary>
            初期化します
            自オブジェクトが所持するprivate以外のフィールドを解析して、必要数分のバイト配列を生成するための準備が行われます
            指定オブジェクトの値が適用されます
            本メソッド実行後、フィールド名文字列によるデータ操作が可能となります
            </summary>
            <param name="x">指定オブジェクト</param>
            <returns>初期化成功でtrueを返します</returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_ObjectSync.ObjectAdjustment">
            <summary>
            自オブジェクトのフィールド情報を再構築します
            バイナリーシリアライズなどで、自オブジェクト情報と自インスタンスが保持する参照先が不一致となった時に使用します
            </summary>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_ObjectSync.GetBytes(System.String)">
            <summary>
            指定フィールドのバイト配列を取得します
            空文字を指定すると自オブジェクト全体のバイト配列を取得します
            </summary>
            <param name="field_name">指定フィールド</param>
            <returns>バイト配列</returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_ObjectSync.SetBytes(System.Byte[],System.String)">
            <summary>
            バイト配列を自オブジェクトの指定フィールドへ設定します
            空文字を指定すると自オブジェクト全体へバイト配列を設定します
            </summary>
            <param name="buffer">バイト配列</param>
            <param name="field_name">指定フィールド</param>
            <returns>設定が正常に行われた場合trueを返します</returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_ObjectSync.GetBytes">
            <summary>
            自オブジェクト全体のバイト配列を取得します
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_ObjectSync.SetBytes(System.Byte[])">
            <summary>
            バイト配列を自オブジェクト全体へ設定します
            </summary>
            <param name="buffer">バイト配列</param>
            <returns>設定が正常に行われた場合trueを返します</returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_ObjectSync.GetLength(System.String)">
            <summary>
            指定フォールドのバイト長を取得します
            空文字を指定すると自オブジェクト全体のバイト長を取得します
            </summary>
            <param name="field_name">指定フィールド</param>
            <returns>バイト長</returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_ObjectSync.GetData(System.String)">
            <summary>
            指定フィールドのフィールドデータを取得します
            クラスメンバーに直接アクセスするのと同じ結果を返しますが、名前文字列で対象のデータが取得できます
            </summary>
            <param name="field_name">指定フィールド</param>
            <returns></returns>
        </member>
        <member name="P:BelicsClass.ObjectSync.BL_ObjectSync.Length">
            <summary>
            バイト配列化した際のデータ長
            </summary>
        </member>
        <member name="T:BelicsClass.ObjectSync.BL_ObjectSync.BL_ObjectInformation">
            <summary>
            フィールドの情報を保持してデータ変換を行うクラス
            </summary>
        </member>
        <member name="F:BelicsClass.ObjectSync.BL_ObjectSync.BL_ObjectInformation.Key">
            <summary>
            フィールド名
            </summary>
        </member>
        <member name="F:BelicsClass.ObjectSync.BL_ObjectSync.BL_ObjectInformation.Object">
            <summary>
            フィールドオブジェクトが所属する親オブジェクトへの参照
            </summary>
        </member>
        <member name="F:BelicsClass.ObjectSync.BL_ObjectSync.BL_ObjectInformation.Field">
            <summary>
            フィールド情報
            </summary>
        </member>
        <member name="F:BelicsClass.ObjectSync.BL_ObjectSync.BL_ObjectInformation.Offset">
            <summary>
            バイト配列のオフセット位置
            </summary>
        </member>
        <member name="F:BelicsClass.ObjectSync.BL_ObjectSync.BL_ObjectInformation.Length">
            <summary>
            バイト配列のデータ長
            </summary>
        </member>
        <member name="F:BelicsClass.ObjectSync.BL_ObjectSync.BL_ObjectInformation.Index">
            <summary>
            配列の場合のインデックス
            </summary>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_ObjectSync.BL_ObjectInformation.#ctor(System.String,System.Object,System.Reflection.FieldInfo,System.Int32,System.Int32)">
            <summary>
            コンストラクタ
            </summary>
            <param name="key">フィールド名</param>
            <param name="obj">親オブジェクト</param>
            <param name="field">フィールド情報</param>
            <param name="offset">バイト配列のオフセット位置</param>
            <param name="length">バイト配列のデータ長</param>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_ObjectSync.BL_ObjectInformation.#ctor(System.String,System.Object,System.Reflection.FieldInfo,System.Int32,System.Int32,System.Int32)">
            <summary>
            コンストラクタ
            </summary>
            <param name="key">フィールド名</param>
            <param name="obj">親オブジェクト</param>
            <param name="field">フィールド情報</param>
            <param name="offset">バイト配列のオフセット位置</param>
            <param name="length">バイト配列のデータ長</param>
            <param name="index">配列の場合のインデックス</param>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_ObjectSync.BL_ObjectInformation.GetBuffer">
            <summary>
            バイト配列を取得します
            </summary>
            <returns>バイト配列</returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_ObjectSync.BL_ObjectInformation.GetBuffer(System.Object)">
            <summary>
            指定したオブジェクトのバイト配列を取得します
            </summary>
            <param name="val">指定オブジェクト</param>
            <returns>バイト配列</returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_ObjectSync.BL_ObjectInformation.SetBuffer(System.Byte[])">
            <summary>
            指定バイト配列でオブジェクトを設定します
            </summary>
            <param name="buffer">指定バイト配列</param>
            <returns>設定されたオブジェクト</returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_ObjectSync.BL_ObjectInformation.GetData">
            <summary>
            保持しているデータを取得します
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_ObjectSync.BL_ObjectInformation.SetData(System.Object)">
            <summary>
            データを設定します
            </summary>
            <param name="data">設定データ</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_XmlSync.XmlSerialize">
            <summary>
            XMLシリアライズ
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_XmlSync.XmlSerialize``1">
            <summary>
            XMLシリアライズ
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_XmlSync.XmlDeserialize(System.Byte[])">
            <summary>
            デシリアライズ
            </summary>
            <param name="buffer"></param>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_XmlSync.XmlDeserialize``1(System.Byte[])">
            <summary>
            デシリアライズ
            </summary>
            <param name="buffer"></param>
        </member>
        <member name="F:BelicsClass.ObjectSync.BL_FaceMemorySync.Ticks">
            <summary>
            共有メモリへの書き込みが行われた時間を表すTick値を保持します
            </summary>
        </member>
        <member name="F:BelicsClass.ObjectSync.BL_FaceMemorySync.mem">
            <summary>
            共有メモリ操作インスタンス
            </summary>
        </member>
        <member name="F:BelicsClass.ObjectSync.BL_FaceMemorySync.notrelease">
            <summary>
            インスタンスが破棄される際に共有メモリを破棄するかどうかを表します
            </summary>
        </member>
        <member name="F:BelicsClass.ObjectSync.BL_FaceMemorySync.nosharemem">
            <summary>
            共有メモリを明示的に使用しない場合trueになります
            </summary>
        </member>
        <member name="F:BelicsClass.ObjectSync.BL_FaceMemorySync.changedetector">
            <summary>
            変化比較用ローカルバッファ
            </summary>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FaceMemorySync.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FaceMemorySync.#ctor(System.Boolean)">
            <summary>
            コンストラクタ
            インスタンスの破棄によって共有メモリを破棄するかしないかを指定できます
            </summary>
            <param name="notrelease">共有メモリを破棄しない場合trueを指定してください</param>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FaceMemorySync.#ctor(System.Boolean,System.Boolean)">
            <summary>
            コンストラクタ
            </summary>
            <param name="nosharemem">共有メモリを明示的に利用しない場合trueを指定してください</param>
            <param name="notrelease">共有メモリを破棄しない場合trueを指定してください</param>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FaceMemorySync.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FaceMemorySync.Initialize(System.Object)">
            <summary>
            初期化します
            共有メモリは生成されません
            自インスタンスが所持するprivate以外のフィールドを解析して、必要数分のバイト配列を生成するための準備が行われます
            本メソッド実行後、フィールド名文字列によるデータ操作が可能となります
            </summary>
            <param name="x">自インスタンスの初期化時に反映させる初期化オブジェクト</param>
            <returns>初期化成功でtrueを返します</returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FaceMemorySync.Initialize(System.String)">
            <summary>
            初期化します
            名前を指定することによって共有メモリが生成されます
            同一名の共有メモリが既存の場合は、共有メモリからデータが読み出されて初期化されます
            自インスタンスが所持するprivate以外のフィールドを解析して、必要数分のバイト配列を生成するための準備が行われます
            本メソッド実行後、フィールド名文字列によるデータ操作が可能となります
            </summary>
            <param name="sharemem_name">共有メモリの名称</param>
            <returns>初期化成功でtrueを返します</returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FaceMemorySync.Initialize(System.Object,System.String)">
            <summary>
            初期化します
            名前を指定することによって共有メモリが生成されます
            同一名の共有メモリが既存の場合は、共有メモリからデータが読み出されて初期化されます
            自インスタンスが所持するprivate以外のフィールドを解析して、必要数分のバイト配列を生成するための準備が行われます
            本メソッド実行後、フィールド名文字列によるデータ操作が可能となります
            </summary>
            <param name="x">自インスタンスの初期化時に反映させる初期化オブジェクト</param>
            <param name="sharemem_name">共有メモリの名称</param>
            <returns>初期化成功でtrueを返します</returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FaceMemorySync.Dispose">
            <summary>
            自インスタンスが保持している情報を破棄します
            </summary>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FaceMemorySync.ReleaseMemory">
            <summary>
            共有メモリを破棄します
            </summary>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FaceMemorySync.IsExist(System.String)">
            <summary>
            指定された名称の共有メモリが存在するかをチェックします
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FaceMemorySync.WriteMemory">
            <summary>
            自インスタンスの全データを共有メモリへ書き込みます
            書き込み中はロックされます
            </summary>
            <returns>正常に書き込みできたらtrueを返します</returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FaceMemorySync.WriteMemory(System.Boolean)">
            <summary>
            自インスタンスの全データを共有メモリへ書き込みます
            ロック有無を指定できます
            </summary>
            <param name="lockFlag">ロック有無</param>
            <returns>正常に書き込みできたらtrueを返します</returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FaceMemorySync.WriteMemory(System.String)">
            <summary>
            自インスタンスの指定フィールドデータを共有メモリへ書き込みます
            書き込み中はロックされます
            </summary>
            <param name="field_name">指定フィールド</param>
            <returns>正常に書き込みできたらtrueを返します</returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FaceMemorySync.WriteMemory(System.String,System.Boolean)">
            <summary>
            自インスタンスの指定フィールドデータを共有メモリへ書き込みます
            ロック有無を指定できます
            </summary>
            <param name="field_name">指定フィールド</param>
            <param name="lockFlag">ロック有無</param>
            <returns>正常に書き込みできたらtrueを返します</returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FaceMemorySync.WriteMemory(System.String,System.Object)">
            <summary>
            指定フィールドデータを共有メモリへ書き込みます
            書き込みデータを指定できます
            書き込み中はロックされます
            </summary>
            <param name="field_name">指定フィールド</param>
            <param name="val">書き込みデータ</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FaceMemorySync.WriteMemory(System.String,System.Object,System.Boolean)">
            <summary>
            指定フィールドデータを共有メモリへ書き込みます
            書き込みデータを指定できます
            ロック有無を指定できます
            </summary>
            <param name="field_name">指定フィールド</param>
            <param name="val">書き込みデータ</param>
            <param name="lockFlag">ロック有無</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FaceMemorySync.ReadMemory">
            <summary>
            共有メモリから自インスタンスの全データを読み込みます
            読み込み中はロックされます
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FaceMemorySync.ReadMemory(System.Boolean)">
            <summary>
            共有メモリから自インスタンスの全データを読み込みます
            ロック有無を指定できます
            </summary>
            <param name="lockFlag">ロック有無</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FaceMemorySync.ReadMemory(System.String)">
            <summary>
            共有メモリから指定フィールドへデータを読み込みます
            読み込み中はロックされます
            </summary>
            <param name="field_name">指定フィールド</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FaceMemorySync.ReadMemory(System.String,System.Boolean)">
            <summary>
            共有メモリから指定フィールドへデータを読み込みます
            ロック有無を指定できます
            </summary>
            <param name="field_name">指定フィールド</param>
            <param name="lockFlag">ロック有無</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FaceMemorySync.ReadMemory``1(System.String)">
            <summary>
            共有メモリから指定フィールドへデータを読み込みます
            読み込んだ値は指定型の戻り値となります
            読み込み中はロックされます
            </summary>
            <typeparam name="U">指定型</typeparam>
            <param name="field_name">指定フィールド</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FaceMemorySync.ReadMemory``1(System.String,System.Boolean)">
            <summary>
            共有メモリから指定フィールドへデータを読み込みます
            読み込んだ値は指定型の戻り値となります
            ロック有無を指定できます
            </summary>
            <typeparam name="U">指定型</typeparam>
            <param name="field_name">指定フィールド</param>
            <param name="lockFlag">ロック有無</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FaceMemorySync.Lock">
            <summary>
            共有メモリを意図的にロックします
            </summary>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FaceMemorySync.Unlock">
            <summary>
            共有メモリを意図的にアンロックします
            </summary>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FaceMemorySync.IsModified">
            <summary>
            共有メモリ上のデータと自インスタンスデータが不一致かどうかをチェックします
            </summary>
            <returns>不一致の場合trueを返します</returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FaceMemorySync.IsModified(System.String)">
            <summary>
            共有メモリ上のデータと自インスタンスデータが不一致かどうかをチェックします
            不一致を検出した最初のフィールド名を取得できます
            </summary>
            <param name="field_name">指定した場合、指定フィールドのみ不一致チェックします。不一致が検出されたフィールド名で更新されます</param>
            <returns>不一致の場合trueを返します</returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FaceMemorySync.GetMemory">
            <summary>
            共有メモリ全体のバイト配列を取得します
            読み込み中はロックされます
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FaceMemorySync.GetMemory(System.Boolean)">
            <summary>
            共有メモリ全体のバイト配列を取得します
            ロック有無を指定できます
            </summary>
            <param name="lockFlag">ロック有無</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FaceMemorySync.GetMemory(System.String,System.Boolean)">
            <summary>
            指定されたフィールドのデータを共有メモリから読み込んでバイト配列を取得します
            ロック有無を指定できます
            </summary>
            <param name="field_name">指定フィールド</param>
            <param name="lockFlag">ロック有無</param>
            <returns></returns>
        </member>
        <member name="P:BelicsClass.ObjectSync.BL_FaceMemorySync.SharememName">
            <summary>
            共有メモリ名称を取得します
            </summary>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FaceMemorySyncNotify.StartNotify``1(System.Int32,System.Windows.Forms.Form)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="sleep_milliseconds"></param>
            <param name="owner"></param>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FaceMemorySyncNotify.StopNotify">
            <summary>
            
            </summary>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FaceMemorySyncNotify.ResumeNotify">
            <summary>
            
            </summary>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FaceMemorySyncNotify.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FaceMemorySyncNotify.#ctor(System.Boolean)">
            <summary>
            コンストラクタ
            オブジェクトの破棄によって共有メモリを破棄するかしないかを指定できます
            </summary>
            <param name="notrelease">共有メモリを破棄しない場合trueを指定してください</param>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FaceMemorySyncNotify.#ctor(System.Windows.Forms.Form)">
            <summary>
            コンストラクタ
            </summary>
            <param name="owner">フォームにアクセスする必要がある場合、フォームへの参照を指定してください</param>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FaceMemorySyncNotify.#ctor(System.Windows.Forms.Form,System.Boolean)">
            <summary>
            コンストラクタ
            オブジェクトの破棄によって共有メモリを破棄するかしないかを指定できます
            </summary>
            <param name="owner">フォームにアクセスする必要がある場合、フォームへの参照を指定してください</param>
            <param name="notrelease">共有メモリを破棄しない場合trueを指定してください</param>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FaceMemorySyncNotify.Initialize``1(System.Windows.Forms.Form,System.Int32,System.Object,System.String)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="owner"></param>
            <param name="sleep_millis"></param>
            <param name="x"></param>
            <param name="sharemem_name"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FaceMemorySyncNotify.Initialize``1(System.String)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="sharemem_name"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FaceMemorySyncNotify.Initialize``1(System.Object,System.String)">
            <summary>
            初期化します
            名前を指定することによって共有メモリが生成されます
            同一名の共有メモリが既存の場合は、共有メモリからデータが読み出されて初期化されます
            自オブジェクトが所持するprivate以外のフィールドを解析して、必要数分のバイト配列を生成するための準備が行われます
            本メソッド実行後、フィールド名文字列によるデータ操作が可能となります
            
            本メソッド実行前に、EnableNotifyをtrueに設定することによってイベントを発生させます
            共有メモリの監視インターバルは200msです。
            
            </summary>
            <param name="x">自インスタンスの初期化時に反映させる初期化オブジェクト</param>
            <param name="sharemem_name">共有メモリの名称</param>
            <returns>初期化成功でtrueを返します</returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FaceMemorySyncNotify.Initialize``1(System.Int32,System.Object,System.String)">
            <summary>
            初期化します
            名前を指定することによって共有メモリが生成されます
            同一名の共有メモリが既存の場合は、共有メモリからデータが読み出されて初期化されます
            自オブジェクトが所持するprivate以外のフィールドを解析して、必要数分のバイト配列を生成するための準備が行われます
            本メソッド実行後、フィールド名文字列によるデータ操作が可能となります
            
            共有メモリの監視インターバルを指定することができます
            
            </summary>
            <param name="sleep_milliseconds">共有メモリ監視インターバル</param>
            <param name="x">自インスタンスの初期化時に反映させる初期化オブジェクト</param>
            <param name="sharemem_name">共有メモリの名称</param>
            <returns>初期化成功でtrueを返します</returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FaceMemorySyncNotify.Dispose">
            <summary>
            自インスタンスの破棄
            監視スレッドを停止します
            </summary>
        </member>
        <member name="P:BelicsClass.ObjectSync.BL_FaceMemorySyncNotify.Owner">
            <summary>
            イベント通知先の事前登録
            登録しておくと、Invokeされます
            </summary>
        </member>
        <member name="P:BelicsClass.ObjectSync.BL_FaceMemorySyncNotify.EnableNotify">
            <summary>
            イベントの有効状態を取得します
            </summary>
        </member>
        <member name="E:BelicsClass.ObjectSync.BL_FaceMemorySyncNotify.EventModified">
            <summary>
            共有メモリ変化イベント
            </summary>
        </member>
        <member name="T:BelicsClass.ObjectSync.BL_FaceMemorySyncNotify.threadNotify">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.ObjectSync.BL_FaceMemorySyncNotify.threadNotify.source">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FaceMemorySyncNotify.threadNotify.#ctor(BelicsClass.ObjectSync.BL_FaceMemorySyncNotify,System.Windows.Forms.Form)">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FaceMemorySyncNotify.threadNotify.StartControl(System.Int32,System.Threading.ThreadPriority)">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FaceMemorySyncNotify.threadNotify.StartControl``1(System.Int32,System.Threading.ThreadPriority)">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FaceMemorySyncNotify.threadNotify.DoControl(System.Object)">
            <summary></summary>
        </member>
        <member name="E:BelicsClass.ObjectSync.BL_FaceMemorySyncNotify.threadNotify.EventModified">
            <summary></summary>
        </member>
        <member name="E:BelicsClass.ObjectSync.BL_FaceMemorySyncNotify.threadNotify.EventModifiedObject">
            <summary></summary>
        </member>
        <member name="T:BelicsClass.ObjectSync.BL_FaceMemorySyncNotify.threadNotify.Event_Handler_Modified">
            <summary></summary>
        </member>
        <member name="T:BelicsClass.ObjectSync.BL_FaceMemorySyncNotify.threadNotify.Event_Handler_ModifiedObject">
            <summary></summary>
        </member>
        <member name="T:BelicsClass.ObjectSync.BL_FaceMemorySyncNotify.Event_Handler_Modified">
            <summary>
            共有メモリ変化イベントデリゲート
            </summary>
            <param name="sender">イベント発生源</param>
            <param name="field_names">変化フィールド名</param>
        </member>
        <member name="F:BelicsClass.ObjectSync.BL_TcpSocketSync.connectedRemoteClients">
            <summary>
            サーバーに接続しているクライアント数を保持します
            </summary>
        </member>
        <member name="F:BelicsClass.ObjectSync.BL_TcpSocketSync.lastSendClients">
            <summary>
            最後に送信が行われた接続数
            </summary>
        </member>
        <member name="F:BelicsClass.ObjectSync.BL_TcpSocketSync.lastReceiveClients">
            <summary>
            最後に受信が行われた接続数
            </summary>
        </member>
        <member name="F:BelicsClass.ObjectSync.BL_TcpSocketSync.remoteLock">
            <summary>
            リモートロック状態
            </summary>
        </member>
        <member name="F:BelicsClass.ObjectSync.BL_TcpSocketSync.clientLock">
            <summary>
            自ロック状態
            </summary>
        </member>
        <member name="F:BelicsClass.ObjectSync.BL_TcpSocketSync.ErrorMessage">
            <summary>
            最後に発生したエラーのメッセージを保持します
            </summary>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TcpSocketSync.#ctor">
            <summary>
            コンストラクタ
            通信タイムアウトなし
            </summary>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TcpSocketSync.#ctor(System.Int32)">
            <summary>
            コンストラクタ
            指定時間で通信タイムアウトします
            </summary>
            <param name="millisecondsTimeout"></param>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TcpSocketSync.Finalize">
            <summary>
            デストラクタ
            </summary>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TcpSocketSync.Dispose">
            <summary>
            破棄
            クライアント・サーバーの切断と破棄を行います
            </summary>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TcpSocketSync.Initialize``1(System.Int32,System.Object,System.String)">
            <summary>
            初期化します
            名前を指定することによって共有メモリが生成されます
            同一名の共有メモリが既存の場合は、共有メモリからデータが読み出されて初期化されます
            自オブジェクトが所持するprivate以外のフィールドを解析して、必要数分のバイト配列を生成するための準備が行われます
            本メソッド実行後、フィールド名文字列によるデータ操作が可能となります
            
            本メソッド実行前に、EnableNotifyをtrueに設定することによってイベントが発生するようになります
            共有メモリの監視インターバルを指定することができます
            
            </summary>
            <param name="sleep_milliseconds">共有メモリ監視インターバル</param>
            <param name="x">自インスタンスの初期化時に反映させる初期化オブジェクト</param>
            <param name="sharemem_name">共有メモリの名称</param>
            <returns>初期化成功でtrueを返します</returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TcpSocketSync.Initialize(System.Object,System.String)">
            <summary>
            初期化します
            名前を指定することによって共有メモリが生成されます
            同一名の共有メモリが既存の場合は、共有メモリからデータが読み出されて初期化されます
            自オブジェクトが所持するprivate以外のフィールドを解析して、必要数分のバイト配列を生成するための準備が行われます
            本メソッド実行後、フィールド名文字列によるデータ操作が可能となります
            
            本メソッド実行前に、EnableNotifyをtrueに設定することによってイベントを発生させます
            共有メモリの監視インターバルは200msです。
            
            </summary>
            <param name="x">自インスタンスの初期化時に反映させる初期化オブジェクト</param>
            <param name="sharemem_name">共有メモリの名称</param>
            <returns>初期化成功でtrueを返します</returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TcpSocketSync.WriteMemory(System.String,System.Boolean)">
            <summary>
            自インスタンスの指定フィールドデータを共有メモリへ書き込みます
            ロック有無を指定できます
            自動送信有効な場合、データ変更を接続済みサーバーに書き込みます
            </summary>
            <param name="field_name">指定フィールド</param>
            <param name="lockFlag">ロック有無</param>
            <returns>正常に書き込みできたらtrueを返します</returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TcpSocketSync.ReadMemory(System.String,System.Boolean)">
            <summary>
            共有メモリから指定フィールドへデータを読み込みます
            ロック有無を指定できます
            自動受信が有効な場合、接続済みサーバーへデータ要求を行い、サーバー側のデータを読み込みます
            </summary>
            <param name="field_name">指定フィールド</param>
            <param name="lockFlag">ロック有無</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TcpSocketSync.Initialize_Listener(System.Int32)">
            <summary>
            リスナー（サーバー）初期化
            任意のIPアドレスで接続待機します
            
            接続待機ポートで待ち受けを行い、任意の空きポートでクライアントとの接続が行われます
            クライアント接続後、引き続き接続待機を行います
            </summary>
            <param name="portno">接続待機用ポートNo</param>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TcpSocketSync.Initialize_Listener(System.String,System.Int32)">
            <summary>
            リスナー（サーバー）初期化
            指定IPアドレスで接続待機します
            
            接続待機ポートで待ち受けを行い、任意の空きポートでクライアントとの接続が行われます
            クライアント接続後、引き続き接続待機を行います
            </summary>
            <param name="ipaddress">IPアドレス</param>
            <param name="portno">接続待機用ポートNo</param>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TcpSocketSync.Initialize_Listener(System.Net.IPAddress,System.Int32)">
            <summary>
            リスナー（サーバー）初期化
            指定IPアドレスで接続待機します
            
            接続待機ポートで待ち受けを行い、任意の空きポートでクライアントとの接続が行われます
            クライアント接続後、引き続き接続待機を行います
            </summary>
            <param name="ipaddress">IPアドレス</param>
            <param name="portno">接続待機用ポートNo</param>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TcpSocketSync.Destroy_Listener">
            <summary>
            リスナーを終了します
            </summary>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TcpSocketSync.listener_EventConnected(BelicsClass.Network.BL_TcpP2P)">
            <summary>
            リスナー接続イベント処理
            必要に応じてオーバーライドして処理を追加してください
            </summary>
            <param name="sender">接続TCPオブジェクト</param>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TcpSocketSync.listener_EventReceived(BelicsClass.Network.BL_TcpP2P)">
            <summary>
            リスナー受信イベント処理
            データ変更の受信処理
            データ要求の受信でのデータ送信処理
            リモートロック処理
            リモートアンロック処理
            </summary>
            <param name="sender">受信TCPオブジェクト</param>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TcpSocketSync.listener_EventClosed(BelicsClass.Network.BL_TcpP2P)">
            <summary>
            リスナー切断イベント処理
            リモートロック中のアンロック処理
            </summary>
            <param name="sender"></param>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TcpSocketSync.listener_EventError(BelicsClass.Network.BL_TcpP2P,System.Exception)">
            <summary>
            リスナー通信エラーイベント処理
            </summary>
            <param name="sender"></param>
            <param name="ex"></param>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TcpSocketSync.Add_Client(System.String,System.String,System.Int32)">
            <summary>
            クライアント初期化
            指定されたIPアドレス・ポートNoでサーバーへ接続を行います
            接続が確立しなくても本メソッドはブロッキングしません
            同一接続先が既存の場合は、何もしません
            </summary>
            <param name="name">クライアント識別名称</param>
            <param name="ipaddress">接続先IPアドレス</param>
            <param name="portno">接続先ポートNo</param>
            <returns>接続が確立された場合trueを返します</returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TcpSocketSync.Remove_Client(System.String)">
            <summary>
            指定された識別名称のクライアントを切断し、破棄します
            </summary>
            <param name="name">クライアント識別名称</param>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TcpSocketSync.Connect(System.Int32)">
            <summary>
            未接続クライアントの接続を行います
            指定時間でタイムアウトします。
            ０を指定するとすべてのクライアント接続が確立するまでブロッキングされます
            </summary>
            <param name="millisecondsTimeout">タイムアウト時間 msec</param>
            <returns>接続が確立されたクライアント数を返します</returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TcpSocketSync.Disconnect">
            <summary>
            すべてのクライアントを切断します
            </summary>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TcpSocketSync.client_EventConnected(BelicsClass.Network.BL_TcpP2P)">
            <summary>
            クライアント接続確立イベント処理
            </summary>
            <param name="sender"></param>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TcpSocketSync.client_EventReceived(BelicsClass.Network.BL_TcpP2P)">
            <summary>
            クライアント受信イベント処理
            </summary>
            <param name="sender">受信TCPオブジェクト</param>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TcpSocketSync.client_EventClosed(BelicsClass.Network.BL_TcpP2P)">
            <summary>
            クライアント切断イベント処理
            クライアントロックはアンロックされます
            </summary>
            <param name="sender">切断TCPオブジェクト</param>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TcpSocketSync.client_EventError(BelicsClass.Network.BL_TcpP2P,System.Exception)">
            <summary>
            クライアント通信エラーイベント処理
            </summary>
            <param name="sender">通信エラーTCPオブジェクト</param>
            <param name="ex">TCP例外</param>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TcpSocketSync.GetClientName(System.Net.IPEndPoint)">
            <summary>
            IPアドレスからクライアント識別名称を取得します
            </summary>
            <param name="remote_endpoint">クライアントのエンドポイント</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TcpSocketSync.SendMemory">
            <summary>
            自オブジェクト全体をサーバーへ送信します
            一連の送受信プロトコルが完了するまでブロッキングされません
            受信待機中にフォームのメッセージポンプを処理します
            データ送信前にクライアントの接続確立を再試行します
            </summary>
            <returns>送信成功接続数を返します</returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TcpSocketSync.SendMemory(System.Boolean)">
            <summary>
            自オブジェクトの指定フィールドをサーバーへ送信します
            一連の送受信プロトコルが完了するまでブロッキングするかどうかを指定できます
            受信待機中にフォームのメッセージポンプを処理します
            データ送信前にクライアントの接続確立を再試行します
            </summary>
            <param name="async">ブロッキングする場合falseを指定してください</param>
            <returns>送信成功接続数を返します</returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TcpSocketSync.SendMemory(System.Boolean,System.Boolean)">
            <summary>
            自オブジェクトの指定フィールドをサーバーへ送信します
            一連の送受信プロトコルが完了するまでブロッキングするかどうかを指定できます
            受信待機中にフォームのメッセージポンプを処理するかどうかを指定できます
            データ送信前にクライアントの接続確立を再試行します
            
            サーバーのデータ変更イベントによって画面更新を行う処理を行っている場合など
            メッセージポンプを処理しないとデッドロックしてしまう場合にdoevent=trueを指定してください
            
            </summary>
            <param name="async">ブロッキングする場合falseを指定してください</param>
            <param name="doevent">メッセージポンプを処理しない場合falseを指定してください</param>
            <returns>送信成功接続数を返します</returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TcpSocketSync.SendMemory(System.String)">
            <summary>
            自オブジェクトの指定フィールドをサーバーへ送信します
            一連の送受信プロトコルが完了するまでブロッキングされません
            受信待機中にフォームのメッセージポンプを処理します
            データ送信前にクライアントの接続確立を再試行します
            </summary>
            <param name="field_name">指定フィールド</param>
            <returns>送信成功接続数を返します</returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TcpSocketSync.SendMemory(System.String,System.Boolean)">
            <summary>
            自オブジェクトの指定フィールドをサーバーへ送信します
            一連の送受信プロトコルが完了するまでブロッキングするかどうかを指定できます
            受信待機中にフォームのメッセージポンプを処理します
            データ送信前にクライアントの接続確立を再試行します
            </summary>
            <param name="field_name">指定フィールド</param>
            <param name="async">ブロッキングする場合falseを指定してください</param>
            <returns>送信成功接続数を返します</returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TcpSocketSync.SendMemory(System.String,System.Boolean,System.Boolean)">
            <summary>
            自オブジェクトの指定フィールドをサーバーへ送信します
            一連の送受信プロトコルが完了するまでブロッキングするかどうかを指定できます
            受信待機中にフォームのメッセージポンプを処理するかどうかを指定できます
            データ送信前にクライアントの接続確立を再試行します
            
            サーバーのデータ変更イベントによって画面更新を行う処理を行っている場合など
            メッセージポンプを処理しないとデッドロックしてしまう場合にdoevent=trueを指定してください
            
            </summary>
            <param name="field_name">指定フィールド</param>
            <param name="async">ブロッキングする場合falseを指定してください</param>
            <param name="doevent">メッセージポンプを処理しない場合falseを指定してください</param>
            <returns>送信成功接続数を返します</returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TcpSocketSync.SendMemory(System.String,System.Boolean,System.Boolean,System.Boolean,System.Net.IPEndPoint)">
            <summary>
            自オブジェクトの指定フィールドをサーバーへ送信します
            一連の送受信プロトコルが完了するまでブロッキングするかどうかを指定できます
            受信待機中にフォームのメッセージポンプを処理するかどうかを指定できます
            データ送信前にクライアントの接続確立を再試行するかどうかを指定できます
            
            サーバーのデータ変更イベントによって画面更新を行う処理を行っている場合など
            メッセージポンプを処理しないとデッドロックしてしまう場合にdoevent=trueを指定してください
            
            </summary>
            <param name="field_name">指定フィールド</param>
            <param name="async">ブロッキングする場合falseを指定してください</param>
            <param name="doevent">メッセージポンプを処理しない場合falseを指定してください</param>
            <param name="tryconnect">未接続のクライアントの接続を再試行する場合trueを指定してください</param>
            <param name="target_ipendpoint">送信先を限定する場合、対象IPEndPoint</param>
            <returns>送信成功接続数を返します</returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TcpSocketSync.ReceiveMemory">
            <summary>
            サーバー側のデータを取得して自オブジェクトを更新します
            取得先のサーバーは全サーバーです
            取得対象は自オブジェクト全体です
            一連の通信プロトコルが完了するまでブロッキングしません
            受信待機中にフォームのメッセージポンプを処理します
            
            取得先のサーバーに空文字を指定した場合、すべてのサーバーからデータを順次取得します
            
            </summary>
            <returns>取得したサーバー数</returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TcpSocketSync.ReceiveMemory(System.String)">
            <summary>
            サーバー側のデータを取得して自オブジェクトを更新します
            取得先のサーバーを指定できます
            取得対象は自オブジェクト全体です
            一連の通信プロトコルが完了するまでブロッキングしません
            受信待機中にフォームのメッセージポンプを処理します
            
            取得先のサーバーに空文字を指定した場合、すべてのサーバーからデータを順次取得します
            
            </summary>
            <param name="from">取得先クライアント識別名称</param>
            <returns>取得したサーバー数</returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TcpSocketSync.ReceiveMemory(System.String,System.String)">
            <summary>
            サーバー側のデータを取得して自オブジェクトを更新します
            取得先のサーバーを指定できます
            取得対象のフィールドを指定できます
            一連の通信プロトコルが完了するまでブロッキングしません
            受信待機中にフォームのメッセージポンプを処理します
            
            取得先のサーバーに空文字を指定した場合、すべてのサーバーからデータを順次取得します
            取得対象のフィールド名に空文字を指定した場合、自オブジェクトの全データを取得します
            
            </summary>
            <param name="from">取得先クライアント識別名称</param>
            <param name="field_name">取得対象のフィールド名</param>
            <returns>取得したサーバー数</returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TcpSocketSync.ReceiveMemory(System.String,System.String,System.Boolean)">
            <summary>
            サーバー側のデータを取得して自オブジェクトを更新します
            取得先のサーバーを指定できます
            取得対象のフィールドを指定できます
            一連の通信プロトコルが完了するまでブロッキングするかどうかを指定できます
            受信待機中にフォームのメッセージポンプを処理します
            
            取得先のサーバーに空文字を指定した場合、すべてのサーバーからデータを順次取得します
            取得対象のフィールド名に空文字を指定した場合、自オブジェクトの全データを取得します
            
            </summary>
            <param name="from">取得先クライアント識別名称</param>
            <param name="field_name">取得対象のフィールド名</param>
            <param name="async">ブロッキングする場合falseを指定してください</param>
            <returns>取得したサーバー数</returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TcpSocketSync.ReceiveMemory(System.Boolean)">
            <summary>
            サーバー側のデータを取得して自オブジェクトを更新します
            取得先のサーバーを指定できます
            取得対象のフィールドを指定できます
            一連の通信プロトコルが完了するまでブロッキングするかどうかを指定できます
            受信待機中にフォームのメッセージポンプを処理します
            
            取得先のサーバーに空文字を指定した場合、すべてのサーバーからデータを順次取得します
            取得対象のフィールド名に空文字を指定した場合、自オブジェクトの全データを取得します
            
            </summary>
            <param name="async">ブロッキングする場合falseを指定してください</param>
            <returns>取得したサーバー数</returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TcpSocketSync.ReceiveMemory(System.Boolean,System.Boolean)">
            <summary>
            サーバー側のデータを取得して自オブジェクトを更新します
            取得先のサーバーを指定できます
            取得対象のフィールドを指定できます
            一連の通信プロトコルが完了するまでブロッキングするかどうかを指定できます
            受信待機中にフォームのメッセージポンプを処理するかどうかを指定できます
            
            取得先のサーバーに空文字を指定した場合、すべてのサーバーからデータを順次取得します
            取得対象のフィールド名に空文字を指定した場合、自オブジェクトの全データを取得します
            
            </summary>
            <param name="async">ブロッキングする場合falseを指定してください</param>
            <param name="doevent">メッセージポンプを処理しない場合falseを指定してください</param>
            <returns>取得したサーバー数</returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TcpSocketSync.ReceiveMemory(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            サーバー側のデータを取得して自オブジェクトを更新します
            取得先のサーバーを指定できます
            取得対象のフィールドを指定できます
            一連の通信プロトコルが完了するまでブロッキングするかどうかを指定できます
            受信待機中にフォームのメッセージポンプを処理するかどうかを指定できます
            
            取得先のサーバーに空文字を指定した場合、すべてのサーバーからデータを順次取得します
            取得対象のフィールド名に空文字を指定した場合、自オブジェクトの全データを取得します
            
            </summary>
            <param name="async">ブロッキングする場合falseを指定してください</param>
            <param name="doevent">メッセージポンプを処理しない場合falseを指定してください</param>
            <param name="tryconnect">未接続のクライアントの再接続を行い場合trueを指定してください</param>
            <returns>取得したサーバー数</returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TcpSocketSync.ReceiveMemory(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            サーバー側のデータを取得して自オブジェクトを更新します
            取得先のサーバーを指定できます
            取得対象のフィールドを指定できます
            一連の通信プロトコルが完了するまでブロッキングするかどうかを指定できます
            受信待機中にフォームのメッセージポンプを処理するかどうかを指定できます
            
            取得先のサーバーに空文字を指定した場合、すべてのサーバーからデータを順次取得します
            取得対象のフィールド名に空文字を指定した場合、自オブジェクトの全データを取得します
            
            </summary>
            <param name="from">取得先クライアント識別名称</param>
            <param name="field_name">取得対象のフィールド名</param>
            <param name="async">ブロッキングする場合falseを指定してください</param>
            <param name="doevent">メッセージポンプを処理しない場合falseを指定してください</param>
            <returns>取得したサーバー数</returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TcpSocketSync.ReceiveMemory(System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            サーバー側のデータを取得して自オブジェクトを更新します
            取得先のサーバーを指定できます
            取得対象のフィールドを指定できます
            一連の通信プロトコルが完了するまでブロッキングするかどうかを指定できます
            受信待機中にフォームのメッセージポンプを処理するかどうかを指定できます
            
            取得先のサーバーに空文字を指定した場合、すべてのサーバーからデータを順次取得します
            取得対象のフィールド名に空文字を指定した場合、自オブジェクトの全データを取得します
            
            </summary>
            <param name="from">取得先クライアント識別名称</param>
            <param name="field_name">取得対象のフィールド名</param>
            <param name="async">ブロッキングする場合falseを指定してください</param>
            <param name="doevent">メッセージポンプを処理しない場合falseを指定してください</param>
            <param name="tryconnect">未接続のクライアントの再接続を行い場合trueを指定してください</param>
            <returns>取得したサーバー数</returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TcpSocketSync.WaitSyncronized">
            <summary>
            直前の通信プロトコル完了を待機します
            自オブジェクト既定のタイムアウト時間でタイムアウトします
            受信待機中にフォームのメッセージポンプを処理しません
            </summary>
            <returns>未完了のプロトコル数</returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TcpSocketSync.WaitSyncronized(System.Int32)">
            <summary>
            直前の通信プロトコル完了を待機します
            指定時間でタイムアウトします
            受信待機中にフォームのメッセージポンプを処理しません
            </summary>
            <param name="millisecondsTimeout">タイムアウト指定時間</param>
            <returns>未完了のプロトコル数</returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TcpSocketSync.WaitSyncronized(System.Int32,System.Boolean)">
            <summary>
            直前の通信プロトコル完了を待機します
            指定時間でタイムアウトします
            受信待機中にフォームのメッセージポンプを処理するかどうかを指定できます
            </summary>
            <param name="millisecondsTimeout">タイムアウト指定時間</param>
            <param name="doevent">メッセージポンプを処理しない場合falseを指定してください</param>
            <returns>未完了のプロトコル数</returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TcpSocketSync.RemoteLock">
            <summary>
            サーバーをリモートロックします
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TcpSocketSync.RemoteUnlock">
            <summary>
            サーバーをリモートアンロックします
            </summary>
            <returns></returns>
        </member>
        <member name="P:BelicsClass.ObjectSync.BL_TcpSocketSync.Id">
            <summary>
            通信IDを取得します
            </summary>
        </member>
        <member name="E:BelicsClass.ObjectSync.BL_TcpSocketSync.EventHandler_ListenerUpdated">
            <summary>
            サーバー受信によってフィールが更新されたことを通知するイベント
            </summary>
        </member>
        <member name="E:BelicsClass.ObjectSync.BL_TcpSocketSync.EventHandler_ClientUpdated">
            <summary>
            サーバー受信によってフィールが更新されたことを通知するイベント
            </summary>
        </member>
        <member name="E:BelicsClass.ObjectSync.BL_TcpSocketSync.EventHandler_LoopbackUpdated">
            <summary>
            サーバー受信によってフィールが更新されたことを通知するイベント
            </summary>
        </member>
        <member name="E:BelicsClass.ObjectSync.BL_TcpSocketSync.EventHandler_ListenerConnected">
            <summary>
            本クラスのサーバーにクライアントが接続されたことを通知するイベント
            </summary>
        </member>
        <member name="E:BelicsClass.ObjectSync.BL_TcpSocketSync.EventHandler_ListenerLoopbackConnected">
            <summary>
            本クラスのサーバーにクライアントが接続されたことを通知するイベント
            </summary>
        </member>
        <member name="E:BelicsClass.ObjectSync.BL_TcpSocketSync.EventHandler_ListenerClosed">
            <summary>
            本クラスのサーバーにクライアントが接続されたことを通知するイベント
            </summary>
        </member>
        <member name="E:BelicsClass.ObjectSync.BL_TcpSocketSync.EventHandler_ListenerError">
            <summary>
            通信異常が発生したことを通知するイベント
            </summary>
        </member>
        <member name="E:BelicsClass.ObjectSync.BL_TcpSocketSync.EventHandler_ClientConnected">
            <summary>
            本クラスのサーバーにクライアントが接続されたことを通知するイベント
            </summary>
        </member>
        <member name="E:BelicsClass.ObjectSync.BL_TcpSocketSync.EventHandler_ClientClosed">
            <summary>
            本クラスのサーバーにクライアントが接続されたことを通知するイベント
            </summary>
        </member>
        <member name="E:BelicsClass.ObjectSync.BL_TcpSocketSync.EventHandler_ClientError">
            <summary>
            通信異常が発生したことを通知するイベント
            </summary>
        </member>
        <member name="P:BelicsClass.ObjectSync.BL_TcpSocketSync.IsServer">
            <summary>
            全接続を管理するサーバー自身であるかどうかを取得します
            </summary>
        </member>
        <member name="P:BelicsClass.ObjectSync.BL_TcpSocketSync.ConnectedRemoteClients">
            <summary>
            サーバーに接続しているクライアント数を取得します
            </summary>
        </member>
        <member name="P:BelicsClass.ObjectSync.BL_TcpSocketSync.Clients">
            <summary>
            接続準備が行われているクライアント数を取得します
            接続数ではありません
            </summary>
        </member>
        <member name="P:BelicsClass.ObjectSync.BL_TcpSocketSync.ConnectedListeners">
            <summary>
            サーバーに接続しているクライアント数を取得します
            </summary>
        </member>
        <member name="P:BelicsClass.ObjectSync.BL_TcpSocketSync.IsInitializedListener">
            <summary>
            リスナーの初期化済み状態を取得します
            </summary>
        </member>
        <member name="P:BelicsClass.ObjectSync.BL_TcpSocketSync.ConnectedLocalClients">
            <summary>
            接続しているクライアント数を取得します
            </summary>
        </member>
        <member name="P:BelicsClass.ObjectSync.BL_TcpSocketSync.IsRemoteLock">
            <summary>
            リモートロック状態を取得します
            </summary>
        </member>
        <member name="P:BelicsClass.ObjectSync.BL_TcpSocketSync.IsClientLock">
            <summary>
            クライアントロック状態を取得します
            </summary>
        </member>
        <member name="P:BelicsClass.ObjectSync.BL_TcpSocketSync.LastSendClients">
            <summary>
            最後に送信が行われた接続数を取得します
            </summary>
        </member>
        <member name="P:BelicsClass.ObjectSync.BL_TcpSocketSync.LastReceiveClients">
            <summary>
            最後に受信が行われた接続数
            </summary>
        </member>
        <member name="P:BelicsClass.ObjectSync.BL_TcpSocketSync.AutoSend">
            <summary>
            自動送信状態を取得または設定します
            </summary>
        </member>
        <member name="P:BelicsClass.ObjectSync.BL_TcpSocketSync.AutoReceive">
            <summary>
            自動受信状態を取得または設定します
            </summary>
        </member>
        <member name="T:BelicsClass.ObjectSync.BL_TcpSocketSync.TcpSocketSyncException">
            <summary>
            TCP例外情報をカプセル化します
            </summary>
        </member>
        <member name="F:BelicsClass.ObjectSync.BL_TcpSocketSync.TcpSocketSyncException.sender">
            <summary>
            発生源
            </summary>
        </member>
        <member name="F:BelicsClass.ObjectSync.BL_TcpSocketSync.TcpSocketSyncException.ex">
            <summary>
            例外
            </summary>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TcpSocketSync.TcpSocketSyncException.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TcpSocketSync.TcpSocketSyncException.#ctor(BelicsClass.Network.BL_TcpP2P,System.Exception)">
            <summary>
            コンストラクタ
            </summary>
            <param name="sender">発生源</param>
            <param name="ex">例外</param>
        </member>
        <member name="T:BelicsClass.ObjectSync.BL_TcpSocketSync.TcpTransportHeader">
            <summary>
            TCP通信ヘッダーをカプセル化します
            </summary>
        </member>
        <member name="F:BelicsClass.ObjectSync.BL_TcpSocketSync.TcpTransportHeader.Id">
            <summary>
            通信ID
            通信ごとにインクリメントされます
            </summary>
        </member>
        <member name="F:BelicsClass.ObjectSync.BL_TcpSocketSync.TcpTransportHeader.TargetField">
            <summary>
            更新対象フィールド名
            </summary>
        </member>
        <member name="F:BelicsClass.ObjectSync.BL_TcpSocketSync.TcpTransportHeader.Send">
            <summary>
            送信操作フラグ
            </summary>
        </member>
        <member name="F:BelicsClass.ObjectSync.BL_TcpSocketSync.TcpTransportHeader.Receive">
            <summary>
            受信操作フラグ
            </summary>
        </member>
        <member name="F:BelicsClass.ObjectSync.BL_TcpSocketSync.TcpTransportHeader.Lock">
            <summary>
            ロック操作フラグ
            </summary>
        </member>
        <member name="F:BelicsClass.ObjectSync.BL_TcpSocketSync.TcpTransportHeader.Unlock">
            <summary>
            アンロック操作フラグ
            </summary>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TcpSocketSync.TcpTransportHeader.make_senddata(System.Byte[])">
            <summary>
            本体データを元に通信データ全体を生成します
            </summary>
            <param name="bodydata"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TcpSocketSync.TcpTransportHeader.get_bodydata(System.Byte[])">
            <summary>
            通信データ全体を元に本体データを取得します
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="P:BelicsClass.ObjectSync.BL_TcpSocketSync.TcpTransportHeader.prevBodyData">
            <summary>
            直前の本体データを取得または設定します
            </summary>
        </member>
        <member name="T:BelicsClass.ObjectSync.BL_TcpSocketSync.Event_Handler_Updated">
            <summary>
            サーバー受信によってフィールが更新されたことを通知するイベントデリゲート
            </summary>
            <param name="sender">発生源</param>
            <param name="remote_endpoint">更新通知元のエンドポイント</param>
            <param name="field_name">更新フィールド名</param>
        </member>
        <member name="T:BelicsClass.ObjectSync.BL_TcpSocketSync.Event_Handler_ListenerConnected">
            <summary>
            本クラスのサーバーにクライアントが接続されたことを通知するイベント
            </summary>
            <param name="sender">発生源</param>
            <param name="remote_endpoint">接続されたエンドポイント</param>
        </member>
        <member name="T:BelicsClass.ObjectSync.BL_TcpSocketSync.Event_Handler_ListenerClosed">
            <summary>
            本クラスのサーバーにクライアントが接続されたことを通知するイベント
            </summary>
            <param name="sender">発生源</param>
            <param name="remote_endpoint">切断されたエンドポイント</param>
        </member>
        <member name="T:BelicsClass.ObjectSync.BL_TcpSocketSync.Event_Handler_Error">
            <summary>
            通信異常が発生したことを通知するイベントデリゲート
            </summary>
            <param name="sender">発生源</param>
            <param name="error">TCP例外情報</param>
        </member>
        <member name="T:BelicsClass.ObjectSync.BL_TcpSocketSync.Event_Handler_ClientConnected">
            <summary>
            本クラスのサーバーにクライアントが接続されたことを通知するイベント
            </summary>
            <param name="sender">発生源</param>
            <param name="remote_endpoint">接続されたエンドポイント</param>
        </member>
        <member name="T:BelicsClass.ObjectSync.BL_TcpSocketSync.Event_Handler_ClientClosed">
            <summary>
            本クラスのサーバーにクライアントが接続されたことを通知するイベント
            </summary>
            <param name="sender">発生源</param>
            <param name="remote_endpoint">切断されたエンドポイント</param>
        </member>
        <member name="T:BelicsClass.Network.BL_WCFServer`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:BelicsClass.Network.BL_WCFContract`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:BelicsClass.Network.BL_WCFContract`1.GetInstanceType">
            <summary>
            抽象クラス T のインスタンス型を取得します
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Network.BL_WCFContract`1.Get">
            <summary>
            データを取得するためのメソッドを実装してください
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Network.BL_WCFContract`1.Put(`0)">
            <summary>
            データを設定するためのメソッドを実装してください
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Network.BL_WCFContract`1.Lock">
            <summary>
            更新をロックするためのメソッドを実装してください
            </summary>
        </member>
        <member name="M:BelicsClass.Network.BL_WCFContract`1.Unlock">
            <summary>
            更新をロック解除するためのメソッドを実装してください
            </summary>
        </member>
        <member name="F:BelicsClass.Network.BL_WCFServer`1.Data">
            <summary>
            データインスタンス
            別途定義された取り扱いデータ用クラスのインスタンスです。
            </summary>
        </member>
        <member name="F:BelicsClass.Network.BL_WCFServer`1.IsLocked">
            <summary>データ更新をロックしているフラグ</summary>
        </member>
        <member name="M:BelicsClass.Network.BL_WCFServer`1.StartNamedPipe(System.String,System.String)">
            <summary>
            サーバー機能を開始します。
            </summary>
            <param name="uri"></param>
            <param name="contactname"></param>
        </member>
        <member name="M:BelicsClass.Network.BL_WCFServer`1.StartTcp(System.String,System.String)">
            <summary>
            サーバー機能を開始します。
            </summary>
            <param name="uri"></param>
            <param name="contactname"></param>
        </member>
        <member name="M:BelicsClass.Network.BL_WCFServer`1.GetInstanceType">
            <summary>
            抽象クラス T のインスタンス型を取得します
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Network.BL_WCFServer`1.Get">
            <summary>
            データ取得メソッド
            クライアントがサーバーからデータを取得する際に呼び出されます。
            オーバーライドして、データの取得処理を行うサーバー機能を実装してください。
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Network.BL_WCFServer`1.Put(`0)">
            <summary>
            データ送信メソッド
            クライアントがサーバーのデータを更新する際に呼び出されます。
            オーバーライドして、データの設定処理を行うサーバー機能を実装してください。
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Network.BL_WCFServer`1.Lock">
            <summary>
            更新をロックします
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Network.BL_WCFServer`1.Unlock">
            <summary>
            更新をロック解除します
            </summary>
            <returns></returns>
        </member>
        <member name="T:BelicsClass.File.BL_CsvFile">
            <summary>
            CSVファイルを扱うクラス
            </summary>
        </member>
        <member name="F:BelicsClass.File.BL_CsvFile.filepath">
            <summary>ファイルの保存先を保持します。</summary>
        </member>
        <member name="F:BelicsClass.File.BL_CsvFile.list">
            <summary>ファイルの内容を保持します。</summary>
        </member>
        <member name="F:BelicsClass.File.BL_CsvFile.m_Quoted">
            <summary>引用符です。</summary>
        </member>
        <member name="F:BelicsClass.File.BL_CsvFile.m_Delimiter">
            <summary>デリミタです。</summary>
        </member>
        <member name="M:BelicsClass.File.BL_CsvFile.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:BelicsClass.File.BL_CsvFile.#ctor(System.Char,System.Char)">
            <summary>
            
            </summary>
            <param name="delimiter"></param>
            <param name="quoted"></param>
        </member>
        <member name="M:BelicsClass.File.BL_CsvFile.#ctor(System.String,System.Char,System.Char)">
            <summary>
            
            </summary>
            <param name="filepath"></param>
            <param name="delimiter"></param>
            <param name="quoted"></param>
        </member>
        <member name="M:BelicsClass.File.BL_CsvFile.Open(System.String)">
            <summary>
            
            </summary>
            <param name="filepath"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.File.BL_CsvFile.Load(System.String)">
            <summary>
            
            </summary>
            <param name="filepath"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.File.BL_CsvFile.Save(System.String)">
            <summary>
            
            </summary>
            <param name="filepath"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.File.BL_CsvFile.Save_Append(System.String)">
            <summary>
            
            </summary>
            <param name="filepath"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.File.BL_CsvFile.Add(BelicsClass.Common.BL_CommaText)">
            <summary>
            
            </summary>
            <param name="commatext"></param>
        </member>
        <member name="M:BelicsClass.File.BL_CsvFile.RemoveAt(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:BelicsClass.File.BL_CsvFile.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="P:BelicsClass.File.BL_CsvFile.FilePath">
            <summary>ファイルパスを取得します</summary>
        </member>
        <member name="P:BelicsClass.File.BL_CsvFile.Item(System.Int32)">
            <summary>
            読み込んだCSVファイルのデータを取得します
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:BelicsClass.File.BL_CsvFile.Count">
            <summary>
            読み込んだCSVファイルのレコード数を取得します
            </summary>
        </member>
        <member name="T:BelicsClass.Common.BL_Certification">
            <summary>
            暗号化処理クラス
            </summary>
        </member>
        <member name="M:BelicsClass.Common.BL_Certification.#ctor">
            <summary>
            コンストラクタ
            暗号鍵を設定します
            </summary>
        </member>
        <member name="M:BelicsClass.Common.BL_Certification.CreateKeys(System.String@,System.String@)">
            <summary>
            公開鍵と秘密鍵を作成して返す
            </summary>
            <param name="publicKey">作成された公開鍵(XML形式)</param>
            <param name="privateKey">作成された秘密鍵(XML形式)</param>
        </member>
        <member name="M:BelicsClass.Common.BL_Certification.Encrypt(System.String)">
            <summary>
            秘密鍵を使って文字列を暗号化する
            </summary>
            <param name="str">暗号化を行う文字列</param>
            <returns>暗号化された文字列</returns>
        </member>
        <member name="M:BelicsClass.Common.BL_Certification.Decrypt(System.String)">
            <summary>
            秘密鍵を使って文字列を復号化する
            </summary>
            <param name="str">Encryptメソッドにより暗号化された文字列</param>
            <returns>復号化された文字列</returns>
        </member>
        <member name="M:BelicsClass.Common.BL_Certification.Encrypt64(System.String)">
            <summary>
            文字列を暗号化する
            </summary>
        </member>
        <member name="M:BelicsClass.Common.BL_Certification.Decrypt64(System.String)">
            <summary>
            文字列を復号化する
            </summary>
        </member>
        <member name="T:BelicsClass.Common.BL_BinarySerializableDictionary`2">
            <summary>
            Dictionaryをシリアライズ可能にするためのラッパークラス
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="M:BelicsClass.Common.BL_BinarySerializableDictionary`2.GetSchema">
            <summary>
            スキーマ取得
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Common.BL_BinarySerializableDictionary`2.ReadXml(System.Xml.XmlReader)">
            <summary>
            XMLを読み込む
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:BelicsClass.Common.BL_BinarySerializableDictionary`2.WriteXml(System.Xml.XmlWriter)">
            <summary>
            XMLで書き込みます
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:BelicsClass.Common.BL_BinarySerializableDictionary`2.Write(System.String)">
            <summary>
            ファイルへ書き出します
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Common.BL_BinarySerializableDictionary`2.Read(System.String)">
            <summary>
            ファイルから読み込みます
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="T:BelicsClass.UI.BL_SubForm_MonitorLog">
            <summary>
            
            </summary>
        </member>
        <member name="T:BelicsClass.UI.BL_SubForm_Base">
            <summary>
            サブフォームの基本クラスです。
            </summary>
            <summary>
            BLUIフレームワークのサブフォーム基本クラスです
            BL_MainForm_Baseのサブフォームパネル内に組み込み表示を行います
            
            </summary>
        </member>
        <member name="F:BelicsClass.UI.BL_SubForm_Base.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:BelicsClass.UI.BL_SubForm_Base.timerClock">
            <summary>タイマー</summary>        
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.FunctionStrings">
            <summary>
            ファンクションキー文字列をMainFormに取得させるために必要です。
            派生サブフォームでは、virtual を override に変更してください。
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.TitleString">
            <summary>
            ウィンドウタイトル文字列をMainFormに取得させるために必要です。
            サブフォームでは、virtual を override に変更してください。
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.SetTitleString(System.String)">
            <summary>
            ウィンドウタイトル文字列をMainFormに取得させるために必要です。
            サブフォームでは、virtual を override に変更してください。
            </summary>
            <returns></returns>
        </member>
        <member name="F:BelicsClass.UI.BL_SubForm_Base.ViewResizer">
            <summary>
            自動スケーリングオブジェクト
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.SubForm_Base_Load(System.Object,System.EventArgs)">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.SubForm_Base_FunctionESC_Clicked(System.Object)">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.SubForm_Base_Function01_Clicked(System.Object)">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.SubForm_Base_Function02_Clicked(System.Object)">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.SubForm_Base_Function03_Clicked(System.Object)">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.SubForm_Base_Function04_Clicked(System.Object)">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.SubForm_Base_Function05_Clicked(System.Object)">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.SubForm_Base_Function06_Clicked(System.Object)">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.SubForm_Base_Function07_Clicked(System.Object)">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.SubForm_Base_Function08_Clicked(System.Object)">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.SubForm_Base_Function09_Clicked(System.Object)">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.SubForm_Base_Function10_Clicked(System.Object)">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.SubForm_Base_Function11_Clicked(System.Object)">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.SubForm_Base_Function12_Clicked(System.Object)">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.SubForm_Base_FunctionElse_Clicked(System.Object)">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.SubForm_Base_FunctionESC_MouseDown(System.Object)">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.SubForm_Base_Function01_MouseDown(System.Object)">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.SubForm_Base_Function02_MouseDown(System.Object)">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.SubForm_Base_Function03_MouseDown(System.Object)">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.SubForm_Base_Function04_MouseDown(System.Object)">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.SubForm_Base_Function05_MouseDown(System.Object)">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.SubForm_Base_Function06_MouseDown(System.Object)">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.SubForm_Base_Function07_MouseDown(System.Object)">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.SubForm_Base_Function08_MouseDown(System.Object)">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.SubForm_Base_Function09_MouseDown(System.Object)">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.SubForm_Base_Function10_MouseDown(System.Object)">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.SubForm_Base_Function11_MouseDown(System.Object)">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.SubForm_Base_Function12_MouseDown(System.Object)">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.SubForm_Base_FunctionElse_MouseDown(System.Object)">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.SubForm_Base_FunctionESC_MouseUp(System.Object)">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.SubForm_Base_Function01_MouseUp(System.Object)">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.SubForm_Base_Function02_MouseUp(System.Object)">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.SubForm_Base_Function03_MouseUp(System.Object)">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.SubForm_Base_Function04_MouseUp(System.Object)">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.SubForm_Base_Function05_MouseUp(System.Object)">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.SubForm_Base_Function06_MouseUp(System.Object)">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.SubForm_Base_Function07_MouseUp(System.Object)">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.SubForm_Base_Function08_MouseUp(System.Object)">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.SubForm_Base_Function09_MouseUp(System.Object)">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.SubForm_Base_Function10_MouseUp(System.Object)">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.SubForm_Base_Function11_MouseUp(System.Object)">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.SubForm_Base_Function12_MouseUp(System.Object)">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.SubForm_Base_FunctionElse_MouseUp(System.Object)">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.SubForm_Base_MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.SubForm_Base_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.SubForm_Base_KeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.SubForm_Base_KeyUp(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.timerClock_Tick(System.Object,System.EventArgs)">
            <summary>
            デフォルト500msの定周期タイマーです。
            サブフォームがアクティブな間、自動的に駆動します。
            サブフォームが非アクティブになると、自動的に停止します。
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.SubForm_Base_Activated(System.Object,System.EventArgs)">
            <summary>
            サブフォームがアクティブになった時に呼び出されます。
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.SubForm_Base_Deactivate(System.Object,System.EventArgs)">
            <summary>
            サブフォームが非アクティブになった時に呼び出されます。
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.SubForm_Base_MainformActivated(System.Object,System.EventArgs)">
            <summary>
            メインフォームがアクティブになった時に呼び出されます。
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.SubForm_Base_MainformDeactivate(System.Object,System.EventArgs)">
            <summary>
            メインフォームが非アクティブになった時に呼び出されます。
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.SubForm_Base_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            必要に応じて終了できないメッセージを表示します。
            メッセージが不要の場合、オーバーロード処理前に呼び出してください。
            （この場合、timerClock.Enabled = falseに変更されます。）
            メッセージが必要な場合、オーバーロード処理後に呼び出してください。
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.SubForm_Base_FormClosed(System.Object,System.Windows.Forms.FormClosedEventArgs)">
            <summary>
            クローズ時の処理（オーバーロード処理後、呼び出してください）
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:BelicsClass.UI.BL_SubForm_Base.m_Mainform">
            <summary>
            メインフォームへの参照を保持します。
            </summary>
        </member>
        <member name="F:BelicsClass.UI.BL_SubForm_Base.m_Functions">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.UI.BL_SubForm_Base.m_swElapsed">
            <summary>
            経過時間を計測します。
            </summary>
        </member>
        <member name="F:BelicsClass.UI.BL_SubForm_Base.m_bLoadCancel">
            <summary>
            フォームのロードをキャンセルして閉じます。
            フォームロードのタイミングでフォームを閉じたい時に、
            trueに設定することでフォームを開かずに閉じることができます。
            </summary>
        </member>
        <member name="F:BelicsClass.UI.BL_SubForm_Base.m_bLoaded">
            <summary>
            Load処理が行われたかどうかをあらわします
            </summary>
        </member>
        <member name="F:BelicsClass.UI.BL_SubForm_Base.key_input_accept">
            <summary>
            連続キー入力制御フラグ
            </summary>
        </member>
        <member name="F:BelicsClass.UI.BL_SubForm_Base.dictFunctions">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.UI.BL_SubForm_Base.isExitableWindow">
            <summary>
            終了(ウィンドウ右上の×ボタン)を有効するか否かを保持します
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.ShowMeModal(BelicsClass.UI.BL_MainForm_Base)">
            <summary>
            子画面表示を行います。
            子画面が閉じられるまで、他のフォームの動作は原則として停止します。
            </summary>
            <param name="main"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.ShowMe(BelicsClass.UI.BL_SubForm_Base)">
            <summary>
            子画面表示を行います。
            </summary>
            <param name="sub">既存のサブフォーム</param>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.ShowMe(BelicsClass.UI.BL_SubForm_Base,System.Boolean)">
            <summary>
            子画面表示を行います。
            </summary>
            <param name="sub">既存のサブフォーム</param>
            <param name="activated">バックグラウンドで動作させる場合、falseを指定します。</param>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.ShowMe(BelicsClass.UI.BL_MainForm_Base)">
            <summary>
            子画面表示を行います。
            </summary>
            <param name="main">既存のメインフォーム</param>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.ShowMe">
            <summary>
            子画面の分離表示を行います。
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.ShowMe(BelicsClass.UI.BL_MainForm_Base,System.Boolean)">
            <summary>
            子画面表示を行います。
            </summary>
            <param name="main">既存のメインフォーム</param>
            <param name="activated">バックグラウンドで動作させる場合、falseを指定します。</param>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.btnFunctions_Click(System.Object,System.EventArgs)">
            <summary>
            ファンクションキー押し下げ時の処理
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.btnFunctions_MouseDown(System.Object,System.EventArgs)">
            <summary>
            ファンクションキー押し下げ時の処理
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.btnFunctions_MouseUp(System.Object,System.EventArgs)">
            <summary>
            ファンクションキー押し下げ時の処理
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.AttachButton_to_Functions(System.Windows.Forms.Button,System.Int32)">
            <summary>
            子フォーム上のボタンをファンクションに割り当てます。
            任意のボタンとファンクション操作を共通化する際に呼び出します。
            </summary>
            <param name="button">ボタン</param>
            <param name="functionno">ファンクション番号 0:ESC/F1～F12</param>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.Function_Enabled(System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <param name="functionno"></param>
            <param name="enabled"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.SubForm_Base_Enter(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.SubForm_Base_Leave(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.SetWindowBounds(System.Drawing.Rectangle)">
            <summary>
            ウィンドウの位置とサイズを変更する
            </summary>
            <param name="rect">変更後のウィンドウの位置とサイズ</param>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.Resizer_Initialize">
            <summary>
            サブフォームの自動スケーリング機能を開始します
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.Resizer_Initialize(System.Boolean,System.Boolean)">
            <summary>
            サブフォームの自動スケーリング機能を開始します
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.Resizer_Finalize">
            <summary>
            サブフォームの自動スケーリング機能を終了します
            スケーリング状態は現在のままで終了されます
            </summary>
        </member>
        <member name="F:BelicsClass.UI.BL_SubForm_Base.isResizing">
            <summary>
            リサイズ中
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.SubForm_Base_Resize(System.Object,System.EventArgs)">
            <summary>
            サブフォームのサイズが変更された時に呼び出されます。
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.ExitApplication">
            <summary>
            アプリケーションを終了します。
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.ExitApplication(System.String)">
            <summary>
            アプリケーションを終了します。
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.ExitApplication(System.String,System.String)">
            <summary>
            アプリケーションを終了します。
            パスワード確認機能付き
            </summary>
            <param name="message"></param>
            <param name="password"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.GetControlFromName(System.String)">
            <summary>
            コントロール名を指定して対象コントロールを取得します
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.GetControlFromName(System.Windows.Forms.Control,System.String)">
            <summary>
            コントロール名を指定して対象コントロールを取得します
            </summary>
            <param name="source"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.Log(System.String)">
            <summary>
            ログを追加します
            </summary>
            <param name="description"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_Base.Log(System.String,System.Int32)">
            <summary>
            ログを追加します
            </summary>
            <param name="description"></param>
            <param name="level"></param>
        </member>
        <member name="P:BelicsClass.UI.BL_SubForm_Base._TitleString">
            <summary>
            ウィンドウタイトル文字列をMainFormに取得させるために必要です。
            サブフォームでは、virtual を override に変更してください。
            </summary>
            <returns></returns>
        </member>
        <member name="P:BelicsClass.UI.BL_SubForm_Base.CanExit">
            <summary>
            スレッドコレクションを捜査して終了可能かどうかを返します。
            </summary>
        </member>
        <member name="P:BelicsClass.UI.BL_SubForm_Base.CreateParams">
            <summary>
            アプリケーション終了操作を無効にする
            </summary>
        </member>
        <member name="P:BelicsClass.UI.BL_SubForm_Base.TitleText">
            <summary>
            メインフォームのタイトル文字列を取得・設定します。
            </summary>
        </member>
        <member name="P:BelicsClass.UI.BL_SubForm_Base.EnableSeparation">
            <summary>
            サブフォームをメインフォームから切り離す操作を有効にするかどうかを取得または設定します
            </summary>
        </member>
        <member name="P:BelicsClass.UI.BL_SubForm_Base.IsExitableWindow">
            <summary>
            終了(ウィンドウ右上の×ボタン)を有効するか否かを取得および設定します
            </summary>
        </member>
        <member name="P:BelicsClass.UI.BL_SubForm_Base.Resizer_LastScaleWidth">
            <summary></summary>
        </member>
        <member name="P:BelicsClass.UI.BL_SubForm_Base.Resizer_LastScaleHeight">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_SubForm_MonitorLog.components">
            <summary>
            必要なデザイナー変数です。
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_MonitorLog.Dispose(System.Boolean)">
            <summary>
            使用中のリソースをすべてクリーンアップします。
            </summary>
            <param name="disposing">マネージ リソースが破棄される場合 true、破棄されない場合は false です。</param>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_MonitorLog.InitializeComponent">
            <summary>
            デザイナー サポートに必要なメソッドです。このメソッドの内容を
            コード エディターで変更しないでください。
            </summary>
        </member>
        <member name="F:BelicsClass.UI.BL_SubForm_MonitorLog.mem">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_MonitorLog.FunctionStrings">
            <summary>
            ファンクションキー文字列をMainFormに取得させるために必要です。
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_MonitorLog.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_MonitorLog.#ctor(BelicsClass.ObjectSync.BL_FaceMemorySyncNotify)">
            <summary>
            
            </summary>
            <param name="mem"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_MonitorLog.#ctor(BelicsClass.ObjectSync.BL_FaceMemorySyncNotify,System.Boolean)">
            <summary>
            
            </summary>
            <param name="mem"></param>
            <param name="noreadmemory"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_MonitorLog.SubForm_Base_Load(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_MonitorLog.timerClock_Tick(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_MonitorLog.SubForm_Base_Function01_Clicked(System.Object)">
            <summary>
            
            </summary>
            <param name="sender"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_MonitorLog.SubForm_Base_Function08_Clicked(System.Object)">
            <summary>
            
            </summary>
            <param name="sender"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_MonitorLog.SubForm_Base_Function09_Clicked(System.Object)">
            <summary>
            
            </summary>
            <param name="sender"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_MonitorLog.SubForm_Base_Function12_Clicked(System.Object)">
            <summary>
            
            </summary>
            <param name="sender"></param>
        </member>
        <member name="P:BelicsClass.UI.BL_SubForm_MonitorLog._TitleString">
            <summary>
            ウィンドウタイトル文字列をMainFormに取得させるために必要です。
            </summary>
            <returns></returns>
        </member>
        <member name="T:BelicsClass.UI.BL_MessageBox">
            <summary>
            標準メッセージボックスクラスです
            </summary>
        </member>
        <member name="T:BelicsClass.UI.BL_MessageBox_Base">
            <summary>
            メッセージボックスの基本クラスです。
            </summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MessageBox_Base.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_MessageBox_Base.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:BelicsClass.UI.BL_MessageBox_Base.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MessageBox_Base.panel1">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MessageBox_Base.panel2">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MessageBox_Base.labelTitle">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MessageBox_Base.m_Filter">
            <summary>スクリーンフィルター</summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MessageBox_Base.m_Result">
            <summary>選択結果を保持します。</summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MessageBox_Base.m_Owner">
            <summary>自画面の親となる子画面への参照を保持します。</summary>
        </member>
        <member name="M:BelicsClass.UI.BL_MessageBox_Base.#ctor">
            <summary>
            コンストラクタ(使用不可)
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_MessageBox_Base.#ctor(BelicsClass.UI.BL_SubForm_Base)">
            <summary>
            コンストラクタ
            </summary>
            <param name="owner">自画面の親となる子画面(無ければnull)</param>
        </member>
        <member name="M:BelicsClass.UI.BL_MessageBox_Base.#ctor(BelicsClass.UI.BL_MainForm_Base)">
            <summary>
            コンストラクタ
            </summary>
            <param name="mainform">自画面の親となる親画面(無ければnull)</param>
        </member>
        <member name="M:BelicsClass.UI.BL_MessageBox_Base.ShowMessage">
            <summary>
            メッセージボックスを表示します。
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.BL_MessageBox_Base.ShowProgress">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.BL_MessageBox_Base.ShowMessage(System.Boolean)">
            <summary>
            
            </summary>
            <param name="bModal"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.BL_MessageBox_Base.ShowMessage(System.Int32)">
            <summary>
            
            </summary>
            <param name="interval"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.BL_MessageBox_Base.ShowMessage(System.Boolean,System.Int32)">
            <summary>
            メッセージボックスを表示します。
            </summary>
            <param name="bModal"></param>
            <param name="interval"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.BL_MessageBox_Base.MessageBox_Base_KeyUp(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_MessageBox_Base.MessageBox_Base_MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_MessageBox_Base.panel1_MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_MessageBox_Base.panel2_MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_MessageBox_Base.SubForm_Base_FormClosed_Func(System.Object,System.Windows.Forms.FormClosedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_MessageBox_Base.SubForm_Base_FormClosed(System.Object,System.Windows.Forms.FormClosedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:BelicsClass.UI.BL_MessageBox.components">
            <summary>
            必要なデザイナー変数です。
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_MessageBox.Dispose(System.Boolean)">
            <summary>
            使用中のリソースをすべてクリーンアップします。
            </summary>
            <param name="disposing">マネージ リソースが破棄される場合 true、破棄されない場合は false です。</param>
        </member>
        <member name="M:BelicsClass.UI.BL_MessageBox.InitializeComponent">
            <summary>
            デザイナー サポートに必要なメソッドです。このメソッドの内容を
            コード エディターで変更しないでください。
            </summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MessageBox.labelMessage">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MessageBox.progressBar1">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MessageBox.buttonCANCEL">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MessageBox.buttonYES">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MessageBox.buttonOK">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.BL_MessageBox.Show(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.BL_MessageBox.Show(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="title"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.BL_MessageBox.Show(BelicsClass.UI.BL_SubForm_Base,System.String)">
            <summary>
            
            </summary>
            <param name="sub"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.BL_MessageBox.Show(BelicsClass.UI.BL_SubForm_Base,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="sub"></param>
            <param name="message"></param>
            <param name="title"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.BL_MessageBox.Show(BelicsClass.UI.BL_SubForm_Base,System.String,System.String,System.Windows.Forms.MessageBoxButtons)">
            <summary>
            
            </summary>
            <param name="sub"></param>
            <param name="message"></param>
            <param name="title"></param>
            <param name="buttons"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.BL_MessageBox.Show(BelicsClass.UI.BL_MainForm_Base,System.String)">
            <summary>
            
            </summary>
            <param name="main"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.BL_MessageBox.Show(BelicsClass.UI.BL_MainForm_Base,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="main"></param>
            <param name="message"></param>
            <param name="title"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.BL_MessageBox.Show(BelicsClass.UI.BL_MainForm_Base,System.String,System.String,System.Windows.Forms.MessageBoxButtons)">
            <summary>
            
            </summary>
            <param name="main"></param>
            <param name="message"></param>
            <param name="title"></param>
            <param name="buttons"></param>
            <returns></returns>
        </member>
        <member name="F:BelicsClass.UI.BL_MessageBox.cYesNo">
            <summary>
            YES/NOのボタンを生成します
            </summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MessageBox.cContinueAbort">
            <summary>
            続行/中止ボタンを生成します
            </summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MessageBox.m_bModal">
            <summary>
            モーダルモードで実行中フラグ
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_MessageBox.#ctor(BelicsClass.UI.BL_SubForm_Base)">
            <summary>
            コンストラクタ
            </summary>
            <param name="owner">表示元子画面への参照(null禁止)</param>
        </member>
        <member name="M:BelicsClass.UI.BL_MessageBox.#ctor(BelicsClass.UI.BL_MainForm_Base)">
            <summary>
            コンストラクタ
            </summary>
            <param name="mainform">メインフォームへの参照</param>
        </member>
        <member name="M:BelicsClass.UI.BL_MessageBox.#ctor">
            <summary>
            デフォルトコンストラクタ
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_MessageBox.ShowMessage(System.String,System.String,System.String[])">
            <summary>
            メッセージボックスを表示します。
            </summary>
            <param name="message">メッセージ</param>
            <param name="title">タイトル</param>
            <param name="buttons">ボタン文字列の配列 [YES][OK][NO]</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.BL_MessageBox.ShowProgress(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="title"></param>
            <param name="cancel"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.BL_MessageBox.ShowAutoClose(System.String,System.String,System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="title"></param>
            <param name="cancel"></param>
            <param name="interval"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.BL_MessageBox.ShowMessage(System.String,System.String,System.String[],System.Boolean)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="title"></param>
            <param name="buttons"></param>
            <param name="bModal"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.BL_MessageBox.ShowMessage(System.String,System.String,System.String[],System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="title"></param>
            <param name="buttons"></param>
            <param name="bModal"></param>
            <param name="progress"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.BL_MessageBox.ShowMessage(System.String,System.String,System.String[],System.Boolean,System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="title"></param>
            <param name="buttons"></param>
            <param name="bModal"></param>
            <param name="interval"></param>
            <param name="progress"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.BL_MessageBox.buttonYES_Click(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_MessageBox.buttonOK_Click(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_MessageBox.buttonCANCEL_Click(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_MessageBox.MessageBox_Base_KeyUp(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            キー押し下げリリース時の処理
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_MessageBox.ProgressRefresh">
            <summary>
            
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_MessageBox.ProgressRefresh(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="P:BelicsClass.UI.BL_MessageBox.ProgressStyle">
            <summary>
            プログレスバーのスタイルを取得または設定します
            </summary>
        </member>
        <member name="P:BelicsClass.UI.BL_MessageBox.ProgressBarVisible">
            <summary>
            プログレスバーのスタイルを取得または設定します
            </summary>
        </member>
        <member name="P:BelicsClass.UI.BL_MessageBox.ProgressMaximum">
            <summary>
            
            </summary>
        </member>
        <member name="P:BelicsClass.UI.BL_MessageBox.ProgressValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:BelicsClass.UI.BL_MessageBox.ProgressMinimum">
            <summary>
            
            </summary>
        </member>
        <member name="T:BelicsClass.ObjectSync.BL_TypedFaceMemorySync`1">
            <summary>
            クラスインスタンスを共有メモリでアクセスを行うクラス
            派生クラスではなく、ランタイムで任意のオブジェクトを対象にする場合、本クラスを利用します
            抽象クラスTは公開デフォルトコンストラクタが定義されていなければなりません
            
            抽象クラスTのフィールドは本クラスのInitializeメソッドコールによって解析され、バイト配列とオブジェクト間の相互変換が行えるようになります
            抽象クラスTでnull値はフィールドの初期値として使用できません
            抽象クラスTでstringフィールドは、必要文字数分の空白で初期化してください
            
            抽象クラスTのフィールドには「下記の組み込み型、および下記で構成されたクラス、配列」を使用することができます
            Boolean     4byte
            Int16       2byte
            Int32       4byte
            Int64       8byte
            UInt16      2byte
            UInt32      4byte
            UInt64      8byte
            Double      8byte
            Single      4byte
            Byte        1byte
            Char        1byte
            String      ??? byte
            
            </summary>
        </member>
        <member name="F:BelicsClass.ObjectSync.BL_TypedFaceMemorySync`1.Obj">
            <summary>
            対象オブジェクト
            </summary>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TypedFaceMemorySync`1.#ctor">
            <summary>
            コンストラクタ
            デフォルトコンストラクタでオブジェクトが生成されます
            共有メモリは生成されません
            </summary>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TypedFaceMemorySync`1.#ctor(`0)">
            <summary>
            コンストラクタ
            指定オブジェクトで初期化します
            共有メモリは生成されません
            </summary>
            <param name="obj">指定オブジェクト</param>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TypedFaceMemorySync`1.#ctor(System.String)">
            <summary>
            コンストラクタ
            デフォルトコンストラクタでオブジェクトが生成されます
            指定名で共有メモリを生成します
            </summary>
            <param name="sharemem_name">共有メモリ名</param>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TypedFaceMemorySync`1.#ctor(`0,System.String)">
            <summary>
            コンストラクタ
            指定オブジェクトで初期化します
            指定名で共有メモリを生成します
            </summary>
            <param name="obj">指定オブジェクト</param>
            <param name="sharemem_name">共有メモリ名</param>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TypedFaceMemorySync`1.#ctor(`0,System.String,System.Boolean)">
            <summary>
            コンストラクタ
            指定オブジェクトで初期化します
            指定名で共有メモリを生成します
            インスタンスの破棄によって共有メモリを破棄するかしないかを指定できます
            </summary>
            <param name="obj">指定オブジェクト</param>
            <param name="sharemem_name">共有メモリ名</param>
            <param name="notrelease">共有メモリを破棄しない場合trueを指定してください</param>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TypedFaceMemorySync`1.Initialize">
            <summary>
            初期化します
            共有メモリは生成されません
            自インスタンスが所持するprivate以外のフィールドを解析して、必要数分のバイト配列を生成するための準備が行われます
            本メソッド実行後、フィールド名文字列によるデータ操作が可能となります
            </summary>
            <returns>初期化成功でtrueを返します</returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TypedFaceMemorySync`1.Initialize(System.String)">
            <summary>
            初期化します
            名前を指定することによって共有メモリが生成されます
            同一名の共有メモリが既存の場合は、共有メモリからデータが読み出されて初期化されます
            自インスタンスが所持するprivate以外のフィールドを解析して、必要数分のバイト配列を生成するための準備が行われます
            本メソッド実行後、フィールド名文字列によるデータ操作が可能となります
            </summary>
            <param name="sharemem_name">共有メモリの名称</param>
            <returns>初期化成功でtrueを返します</returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TypedFaceMemorySync`1.Initialize(System.Object)">
            <summary>
            初期化します
            共有メモリは生成されません
            自インスタンスが所持するprivate以外のフィールドを解析して、必要数分のバイト配列を生成するための準備が行われます
            本メソッド実行後、フィールド名文字列によるデータ操作が可能となります
            </summary>
            <param name="x">自インスタンスの初期化時に反映させる初期化オブジェクト</param>
            <returns>初期化成功でtrueを返します</returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TypedFaceMemorySync`1.ReadMemory">
            <summary>
            共有メモリから自インスタンスの全データを読み込みます
            読み込み中はロックされます
            </summary>
            <returns>対象オブジェクト</returns>
        </member>
        <member name="T:BelicsClass.File.BL_PrivateProfile">
            <summary>
            設定ファイルクラス
            </summary>
        </member>
        <member name="M:BelicsClass.File.BL_PrivateProfile.Get(System.String,System.String,System.String,System.String)">
            <summary>
            指定したセクションから文字列を取得します。
            </summary>
            <param name="Section">セクションの名前を示す文字列を指定します。</param>
            <param name="Key">キーの名前を示す文字列を指定します。</param>
            <param name="Default">キーがファイル内に見つからないときのデフォルト値を示す文字列を指定します。</param>
            <param name="FileName">ファイルの名前を示す文字列を指定します。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.File.BL_PrivateProfile.Set(System.String,System.String,System.String,System.String)">
            <summary>
            指定したセクションに文字列を設定します。
            </summary>
            <param name="Section">セクションの名前を示す文字列を指定します。</param>
            <param name="Key">キーの名前を示す文字列を指定します。</param>
            <param name="EntryString">値を示す文字列を指定します。</param>
            <param name="FileName">ファイルの名前を示す文字列を指定します。</param>
            <returns></returns>
        </member>
        <member name="T:BelicsClass.Common.BL_SerializableDateTime">
            <summary>
            シリアライズ可能なDateTime型クラスです
            シリアライズされるデータはTick値です
            </summary>
        </member>
        <member name="F:BelicsClass.Common.BL_SerializableDateTime.Ticks">
            <summary>
            チック値
            </summary>
        </member>
        <member name="M:BelicsClass.Common.BL_SerializableDateTime.#ctor">
            <summary>
            コンストラクタ
            Tick値は0で初期化されます
            </summary>
        </member>
        <member name="M:BelicsClass.Common.BL_SerializableDateTime.#ctor(System.DateTime)">
            <summary>
            コンストラクタ
            指定されたDateTime値で初期化されます
            </summary>
            <param name="datetime">指定値</param>
        </member>
        <member name="M:BelicsClass.Common.BL_SerializableDateTime.#ctor(System.Int64)">
            <summary>
            コンストラクタ
            指定したTick値で初期化されます
            </summary>
            <param name="ticks">指定値</param>
        </member>
        <member name="M:BelicsClass.Common.BL_SerializableDateTime.Parse(System.String)">
            <summary>
            日時を表す文字列からBL_DateTime型へ変換します
            変換できない場合、Tick値0のBL_DateTime型が生成されます
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Common.BL_SerializableDateTime.ToString">
            <summary>
            日時を表す文字列を取得します
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Common.BL_SerializableDateTime.ToString(System.String)">
            <summary>
            指定されたフォーマットで日時を表す文字列を取得します
            </summary>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="P:BelicsClass.Common.BL_SerializableDateTime.ToDateTime">
            <summary>
            DateTime型として取得または設定します
            </summary>
        </member>
        <member name="P:BelicsClass.Common.BL_SerializableDateTime.Year">
            <summary>
            年部分を取得します
            </summary>
        </member>
        <member name="P:BelicsClass.Common.BL_SerializableDateTime.Month">
            <summary>
            月部分を取得します
            </summary>
        </member>
        <member name="P:BelicsClass.Common.BL_SerializableDateTime.Day">
            <summary>
            日部分を取得します
            </summary>
        </member>
        <member name="P:BelicsClass.Common.BL_SerializableDateTime.Hour">
            <summary>
            時部分を取得します
            </summary>
        </member>
        <member name="P:BelicsClass.Common.BL_SerializableDateTime.Minute">
            <summary>
            分部分を取得します
            </summary>
        </member>
        <member name="P:BelicsClass.Common.BL_SerializableDateTime.Second">
            <summary>
            秒部分を取得します
            </summary>
        </member>
        <member name="P:BelicsClass.Common.BL_SerializableDateTime.Millisecond">
            <summary>
            ミリ秒部分を取得します
            </summary>
        </member>
        <member name="P:BelicsClass.Common.BL_SerializableDateTime.Date">
            <summary>
            日付部分を取得します
            </summary>
        </member>
        <member name="P:BelicsClass.Common.BL_SerializableDateTime.Now">
            <summary>
            現在日時を取得します
            </summary>
        </member>
        <member name="T:BelicsClass.Common.BL_EventQueue">
            <summary>
            EventQueueはFIFOとイベントを持ちます。
            イベントはFIFOにデータがある場合にシグナル状態になり、
            データがない場合にノンシグナル状態になります。
            イベントはGetWaitHandleにより取得でき、System.Threading.WaitHandleクラスの
            Wait*メソッドによりイベント発生を待つことが可能です。
            </summary>
            <remarks>
            メンバは全てスレッドセーフです。<br/>
            排他状態でキューを操作したい場合は、インスタンスに対してlockを行ってください。
            </remarks>
        </member>
        <member name="F:BelicsClass.Common.BL_EventQueue.LimitCount">
            <summary>
            キュー登録制限数です。
            これを超えてキュー登録できません。
            0の場合、無制限です。
            </summary>
        </member>
        <member name="M:BelicsClass.Common.BL_EventQueue.#ctor">
            <summary>
            デフォルトコンストラクタです。
            </summary>
        </member>
        <member name="M:BelicsClass.Common.BL_EventQueue.#ctor(System.Int32)">
            <summary>
            デフォルトコンストラクタです。
            </summary>
        </member>
        <member name="M:BelicsClass.Common.BL_EventQueue.GetWaitHandle">
            <summary>
            イベントハンドル取得を取得します。
            </summary>
            <returns>イベントハンドルを返します。</returns>
        </member>
        <member name="M:BelicsClass.Common.BL_EventQueue.Enqueue(System.Object)">
            <summary>キューへ登録します。</summary>
            <param name="obj">登録するオブジェクトを指定します。</param>
            <returns>登録成功=true/登録失敗=false(キュー登録数制限)</returns>
        </member>
        <member name="M:BelicsClass.Common.BL_EventQueue.Dequeue">
            <summary>
            キューから読み出します。
            </summary>
            <returns>読み出したオブジェクトを返します。
            キューが空の場合はnullを返します。</returns>
        </member>
        <member name="M:BelicsClass.Common.BL_EventQueue.Clear">
            <summary>
            キューをクリアします。
            </summary>
        </member>
        <member name="M:BelicsClass.Common.BL_EventQueue.WaitOne">
            <summary>
            キューにオブジェクトが登録されるまで待機します。
            </summary>
            <returns>キューにオブジェクトが登録された場合true、登録されなかった場合falseを返します。</returns>
        </member>
        <member name="M:BelicsClass.Common.BL_EventQueue.WaitOne(System.Int32)">
            <summary>
            キューにオブジェクトが登録されるまで待機します。
            </summary>
            <param name="millisecondsTimeout">待機する時間(ミリ秒)を指定します。</param>
            <returns>キューにオブジェクトが登録された場合true、登録されなかった場合falseを返します。</returns>
        </member>
        <member name="M:BelicsClass.Common.BL_EventQueue.WaitOne(System.Int32,System.Boolean)">
            <summary>
            キューにオブジェクトが登録されるまで待機します。
            </summary>
            <param name="millisecondsTimeout">待機する時間(ミリ秒)を指定します。</param>
            <param name="exitContext"></param>
            <returns>キューにオブジェクトが登録された場合true、登録されなかった場合falseを返します。</returns>
        </member>
        <member name="F:BelicsClass.Common.BL_EventQueue.m_Event">
            <summary>キューにオブジェクトが登録されている場合にシグナル状態となるイベントです。</summary>
        </member>
        <member name="F:BelicsClass.Common.BL_EventQueue.m_Queue">
            <summary>キューです。</summary>
        </member>
        <member name="P:BelicsClass.Common.BL_EventQueue.Count">
            <summary>
            キューの登録数を取得します。
            </summary>
        </member>
        <member name="T:BelicsClass.UI.BL_InputBox">
            <summary>
            標準メッセージボックスクラスです
            </summary>
        </member>
        <member name="F:BelicsClass.UI.BL_InputBox.components">
            <summary>
            必要なデザイナー変数です。
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_InputBox.Dispose(System.Boolean)">
            <summary>
            使用中のリソースをすべてクリーンアップします。
            </summary>
            <param name="disposing">マネージ リソースが破棄される場合 true、破棄されない場合は false です。</param>
        </member>
        <member name="M:BelicsClass.UI.BL_InputBox.InitializeComponent">
            <summary>
            デザイナー サポートに必要なメソッドです。このメソッドの内容を
            コード エディターで変更しないでください。
            </summary>
        </member>
        <member name="F:BelicsClass.UI.BL_InputBox.textBoxInput">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.UI.BL_InputBox.sInputText">
            <summary>
            入力されたテキスト
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_InputBox.#ctor(BelicsClass.UI.BL_SubForm_Base)">
            <summary>
            コンストラクタ
            </summary>
            <param name="owner">表示元子画面への参照(null禁止)</param>
        </member>
        <member name="M:BelicsClass.UI.BL_InputBox.#ctor(BelicsClass.UI.BL_MainForm_Base)">
            <summary>
            コンストラクタ
            </summary>
            <param name="main">メインフォームへの参照</param>
        </member>
        <member name="M:BelicsClass.UI.BL_InputBox.#ctor">
            <summary>
            デフォルトコンストラクタ
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_InputBox.ShowCheckPassword(System.String)">
            <summary>
            パスワード確認メッセージボックスを表示します。
            </summary>
            <param name="password"></param>
            <returns>
            パスワード一致の場合:DialogResult.Yes
            不一致の場合:DialogResult.Abort
            キャンセルの場合:DialogResult.Cancel
            </returns>
        </member>
        <member name="M:BelicsClass.UI.BL_InputBox.ShowCheckPassword(System.String,System.String)">
            <summary>
            パスワード確認メッセージボックスを表示します。
            </summary>
            <param name="message"></param>
            <param name="password"></param>
            <returns>
            パスワード一致の場合:DialogResult.Yes
            不一致の場合:DialogResult.Abort
            キャンセルの場合:DialogResult.Cancel
            </returns>
        </member>
        <member name="M:BelicsClass.UI.BL_InputBox.ShowCheckPassword(System.String,System.String,System.String)">
            <summary>
            パスワード確認メッセージボックスを表示します。
            </summary>
            <param name="message"></param>
            <param name="title"></param>
            <param name="password"></param>
            <returns>
            パスワード一致の場合:DialogResult.Yes
            不一致の場合:DialogResult.Abort
            キャンセルの場合:DialogResult.Cancel
            </returns>
        </member>
        <member name="M:BelicsClass.UI.BL_InputBox.ShowCheckPassword(System.String,System.String,System.String[],System.String)">
            <summary>
            パスワード確認メッセージボックスを表示します。
            </summary>
            <param name="message"></param>
            <param name="title"></param>
            <param name="buttons"></param>
            <param name="password"></param>
            <returns>
            パスワード一致の場合:DialogResult.Yes
            不一致の場合:DialogResult.Abort
            キャンセルの場合:DialogResult.Cancel
            </returns>
        </member>
        <member name="M:BelicsClass.UI.BL_InputBox.buttonYES_Click(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_InputBox.MessageBox_Base_KeyUp(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            キー押し下げリリース時の処理
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:BelicsClass.UI.Report.BL_ReportLabel">
            <summary>
            レポート用のラベルクラス
            </summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportLabel.textBox">
            <summary>
            編集時テキストボックス
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportLabel.#ctor">
            <summary>
            コンストラクタ
            編集不可・変更時青・エラー時赤・初期データnull で初期化されます
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportLabel.Initialize">
            <summary>
            初期化処理
            初期データnull・表示色コントロール標準で初期化されます
            </summary>
        </member>
        <member name="P:BelicsClass.UI.Report.BL_ReportLabel.InitialText">
            <summary>
            初期データ
            </summary>
        </member>
        <member name="P:BelicsClass.UI.Report.BL_ReportLabel.Multiline">
            <summary>
            複数行編集の可不可
            </summary>
        </member>
        <member name="P:BelicsClass.UI.Report.BL_ReportLabel.FormatKind">
            <summary>
            フォーマット種別
            </summary>
        </member>
        <member name="P:BelicsClass.UI.Report.BL_ReportLabel.DataKind">
            <summary>
            編集種別
            </summary>
        </member>
        <member name="P:BelicsClass.UI.Report.BL_ReportLabel.ChangedColor">
            <summary>
            データ変更時の表示色
            </summary>
        </member>
        <member name="P:BelicsClass.UI.Report.BL_ReportLabel.NormalColor">
            <summary>
            データ通常時の表示色
            </summary>
        </member>
        <member name="P:BelicsClass.UI.Report.BL_ReportLabel.ErrorColor">
            <summary>
            不正データ入力時の表示色
            </summary>
        </member>
        <member name="T:BelicsClass.UI.Report.BL_ReportLabel._DataKind">
            <summary>
            編集種別
            </summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportLabel._DataKind.Label">
            <summary>編集不可</summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportLabel._DataKind.Free">
            <summary>任意編集</summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportLabel._DataKind.Data">
            <summary>フォーマット編集(未実装)</summary>
        </member>
        <member name="T:BelicsClass.UI.Report.BL_ReportLabel._FormatKind">
            <summary>
            編集フォーマット種別
            </summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportLabel._FormatKind.Any">
            <summary>任意</summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportLabel._FormatKind.Integer">
            <summary>±整数</summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportLabel._FormatKind.PositiveInteger">
            <summary>＋整数</summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportLabel._FormatKind.NegativeInteger">
            <summary>－整数</summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportLabel._FormatKind.Decimal">
            <summary>±数値</summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportLabel._FormatKind.PositiveDecimal">
            <summary>＋数値</summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportLabel._FormatKind.NegativeDecimal">
            <summary>－数値</summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportLabel._FormatKind.DateTime">
            <summary>日時</summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportLabel._FormatKind.Date">
            <summary>日付</summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportLabel._FormatKind.Time">
            <summary>時刻</summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportLabel._FormatKind.Year">
            <summary>年</summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportLabel._FormatKind.Month">
            <summary>月</summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportLabel._FormatKind.Day">
            <summary>日</summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportLabel._FormatKind.Hour">
            <summary>時</summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportLabel._FormatKind.Minutes">
            <summary>分</summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportLabel._FormatKind.Seconds">
            <summary>秒</summary>
        </member>
        <member name="T:BelicsClass.UI.Controls.BL_DoubleBufferPanel">
            <summary>
            ダブルバッファーパネルを設定するパネルクラスです。
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Controls.BL_DoubleBufferPanel.#ctor">
            <summary>
            コンストラクタです。
            </summary>
        </member>
        <member name="T:BelicsClass.UI.Controls.BL_DoubleBufferListView">
            <summary>
            ダブルバッファリングを有効にするためのリストビュー継承クラス。
            ダブルバッファリングを実現できる点を除き、通常のListView機能に違いはありません。
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Controls.BL_DoubleBufferListView.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="T:BelicsClass.PLC.BL_PLCDataAccesser">
            <summary>
            PLCデータメモリと同期している共有メモリにアクセスするためのクラスです
            </summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_PLCDataAccesser.Mem">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataAccesser.#ctor">
            <summary>
            デフォルトコンストラクタ
            </summary>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataAccesser.#ctor(System.String)">
            <summary>
            デフォルトコンストラクタ
            </summary>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataAccesser.AddDevice(System.String,System.Int32)">
            <summary>
            DMメモリ定義を追加します
            </summary>
            <param name="name"></param>
            <param name="wordcount"></param>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataAccesser.RemoveDevice(System.String)">
            <summary>
            DMメモリ定義を削除します
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataAccesser.Dispose">
            <summary>
            DM定義を全て破棄します
            </summary>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataAccesser.Wait_Initialized">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataAccesser.SetWriteDataReady(System.Int32)">
            <summary>
            書き込みデータの準備完了をセットします
            </summary>
            <param name="device_address"></param>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataAccesser.GetReaderMemory(System.Int32)">
            <summary>
            
            </summary>
            <param name="device_address"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataAccesser.GetWriterMemory(System.Int32)">
            <summary>
            
            </summary>
            <param name="device_address"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataAccesser.ToInt16(System.Int32)">
            <summary>
            デバイスアドレス同期用共有メモリから符号付き１６ビット値を取得します。
            </summary>
            <param name="device_address">デバイスアドレス</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataAccesser.ToInt16(System.Int32,System.Int16)">
            <summary>
            デバイスアドレス同期用共有メモリへ符号付き１６ビット値を設定します。
            </summary>
            <param name="device_address">デバイスアドレス</param>
            <param name="value">設定値</param>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataAccesser.ToInt32(System.Int32)">
            <summary>
            デバイスアドレス同期用共有メモリから符号付き３２ビット値を取得します。
            </summary>
            <param name="device_address">デバイスアドレス</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataAccesser.ToInt32(System.Int32,System.Int32)">
            <summary>
            デバイスアドレス同期用共有メモリへ符号付き３２ビット値を設定します。
            </summary>
            <param name="device_address">デバイスアドレス</param>
            <param name="value">設定値</param>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataAccesser.ToInt64(System.Int32)">
            <summary>
            デバイスアドレス同期用共有メモリから符号付き６４ビット値を取得します。
            </summary>
            <param name="device_address">デバイスアドレス</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataAccesser.ToInt64(System.Int32,System.Int64)">
            <summary>
            デバイスアドレス同期用共有メモリへ符号付き６４ビット値を設定します。
            </summary>
            <param name="device_address">デバイスアドレス</param>
            <param name="value">設定値</param>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataAccesser.ToUInt16(System.Int32)">
            <summary>
            デバイスアドレス同期用共有メモリから符号無し１６ビット値を取得します。
            </summary>
            <param name="device_address">デバイスアドレス</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataAccesser.ToUInt16(System.Int32,System.UInt16)">
            <summary>
            デバイスアドレス同期用共有メモリへ符号無し１６ビット値を設定します。
            </summary>
            <param name="device_address">デバイスアドレス</param>
            <param name="value">設定値</param>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataAccesser.ToUInt32(System.Int32)">
            <summary>
            デバイスアドレス同期用共有メモリから符号無し３２ビット値を取得します。
            </summary>
            <param name="device_address">デバイスアドレス</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataAccesser.ToUInt32(System.Int32,System.UInt32)">
            <summary>
            デバイスアドレス同期用共有メモリへ符号無し３２ビット値を設定します。
            </summary>
            <param name="device_address">デバイスアドレス</param>
            <param name="value">設定値</param>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataAccesser.ToUInt64(System.Int32)">
            <summary>
            デバイスアドレス同期用共有メモリから符号無し６４ビット値を取得します。
            </summary>
            <param name="device_address">デバイスアドレス</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataAccesser.ToUInt64(System.Int32,System.UInt64)">
            <summary>
            デバイスアドレス同期用共有メモリへ符号無し６４ビット値を設定します。
            </summary>
            <param name="device_address">デバイスアドレス</param>
            <param name="value">設定値</param>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataAccesser.ToString(System.Int32,System.Int32)">
            <summary>
            デバイスアドレス同期用共有メモリから文字列を取得します。
            </summary>
            <param name="device_address">デバイスアドレス</param>
            <param name="length">文字列長</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataAccesser.ToString(System.Int32,System.Int32,System.String)">
            <summary>
            デバイスアドレス同期用共有メモリへ文字列を設定します。
            </summary>
            <param name="device_address">デバイスアドレス</param>
            <param name="length">文字列長</param>
            <param name="value">設定文字列</param>
            <returns></returns>
        </member>
        <member name="P:BelicsClass.PLC.BL_PLCDataAccesser.Initialized">
            <summary></summary>
        </member>
        <member name="P:BelicsClass.PLC.BL_PLCDataAccesser.IsExitRequest">
            <summary>終了要求を取得または設定します</summary>
        </member>
        <member name="P:BelicsClass.PLC.BL_PLCDataAccesser.IsConnected">
            <summary>接続中であるかどうかを取得します</summary>
        </member>
        <member name="P:BelicsClass.PLC.BL_PLCDataAccesser.Item(System.Int32)">
            <summary>
            DMメモリ定義を取得します
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:BelicsClass.Network.BL_RawSocketServer">
            <summary>
            ソケットクラス(複数接続可)
            </summary>
        </member>
        <member name="T:BelicsClass.Network.BL_RawSocketBase">
            <summary>
            ソケットインターフェース
            </summary>
        </member>
        <member name="F:BelicsClass.Network.BL_RawSocketBase.PREFIX">
            <summary>
            プリフィックス（特殊フォーマット）
            </summary>
        </member>
        <member name="F:BelicsClass.Network.BL_RawSocketBase.SUFFIX">
            <summary>
            サフィックス（特殊フォーマット）
            </summary>
        </member>
        <member name="M:BelicsClass.Network.BL_RawSocketServer.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            ソケットクラス
            </summary>
            <param name="ip_address">使用するソケットのIPアドレス。</param>
            <param name="port">使用するソケットのポート№。</param>
            <param name="connect_max">最大接続数</param>
        </member>
        <member name="M:BelicsClass.Network.BL_RawSocketServer.#ctor(System.Int32,System.Int32)">
            <summary>
            ソケットクラス
            </summary>
            <param name="port">使用するソケットのポート№。</param>
            <param name="connect_max">最大接続数</param>
        </member>
        <member name="M:BelicsClass.Network.BL_RawSocketServer.#ctor(System.Int32)">
            <summary>
            ソケットクラス
            </summary>
            <param name="port">使用するソケットのポート№。</param>
        </member>
        <member name="M:BelicsClass.Network.BL_RawSocketServer.Open(BelicsClass.Network.BL_RawSocketServer.FormatType)">
            <summary>
            ソケットのオープンをします。
            </summary>
            <param name="formatType">オープンするソケットのフォーマット。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Network.BL_RawSocketServer.Close">
            <summary>
            ソケットのクローズをします。
            </summary>
        </member>
        <member name="M:BelicsClass.Network.BL_RawSocketServer.OnAccept(System.IAsyncResult)">
            <summary>
            
            </summary>
            <param name="ar"></param>
        </member>
        <member name="E:BelicsClass.Network.BL_RawSocketServer.ConnectEvent">
            <summary>
            接続すると発生します。
            </summary>
        </member>
        <member name="P:BelicsClass.Network.BL_RawSocketServer.Item(System.Int32)">
            <summary>
            接続したソケットの情報
            </summary>
        </member>
        <member name="P:BelicsClass.Network.BL_RawSocketServer.KeepAliveTimer">
            <summary>
            ソケットの生存確認時間を設定します。単位はミリ秒。※接続する前に設定して下さい。
            </summary>
        </member>
        <member name="P:BelicsClass.Network.BL_RawSocketServer.ErrorCode">
            <summary>
            異常コードを取得します。
            </summary>
        </member>
        <member name="P:BelicsClass.Network.BL_RawSocketServer.ErrorMessage">
            <summary>
            異常内容を取得します。
            </summary>
        </member>
        <member name="T:BelicsClass.Network.BL_RawSocketServer.ConnectEventHandler">
            <summary>
            イベントを処理するメソッドを表します。
            </summary>
        </member>
        <member name="T:BelicsClass.Network.BL_RawSocketServer.ConnectEventArgs">
            <summary>
            接続すると発生するイベントの引数。
            </summary>
        </member>
        <member name="P:BelicsClass.Network.BL_RawSocketServer.ConnectEventArgs.ConnectNo">
            <summary>
            接続したソケットの接続№を取得します。
            </summary>
        </member>
        <member name="T:BelicsClass.Network.BL_RawSocketServer.FormatType">
            <summary>
            フォーマット
            </summary>
        </member>
        <member name="F:BelicsClass.Network.BL_RawSocketServer.FormatType.None">
            <summary>
            なし
            </summary>
        </member>
        <member name="F:BelicsClass.Network.BL_RawSocketServer.FormatType.CR">
            <summary>
            ～CR
            </summary>
        </member>
        <member name="F:BelicsClass.Network.BL_RawSocketServer.FormatType.CR_LF">
            <summary>
            ～CR+LF
            </summary>
        </member>
        <member name="F:BelicsClass.Network.BL_RawSocketServer.FormatType.STX_ETX">
            <summary>
            STX～ETX
            </summary>
        </member>
        <member name="F:BelicsClass.Network.BL_RawSocketServer.FormatType.BL_FORMAT">
            <summary>
            特殊フォーマット
            </summary>
        </member>
        <member name="T:BelicsClass.Network.BL_RawSocketServer.Connected">
            <summary>
            ソケット接続クラス
            </summary>
        </member>
        <member name="M:BelicsClass.Network.BL_RawSocketServer.Connected.Dispose">
            <summary>
            リソースを解放します。
            </summary>
        </member>
        <member name="M:BelicsClass.Network.BL_RawSocketServer.Connected.Release">
            <summary>
            予約を解放します。
            </summary>
        </member>
        <member name="M:BelicsClass.Network.BL_RawSocketServer.Connected.Send(System.String)">
            <summary>
            ソケットにデータを書き込みます。
            </summary>
            <param name="data">書き込むデータが格納されている文字列。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Network.BL_RawSocketServer.Connected.Receive">
            <summary>
            ソケットからデータを読み込みます。
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Network.BL_RawSocketServer.Connected.SendBytes(System.Byte[])">
            <summary>
            ソケットにバイト配列のデータを書き込みます。
            </summary>
            <param name="data">書き込むデータが格納されているバイト配列。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Network.BL_RawSocketServer.Connected.ReceiveBytes(System.Int32@)">
            <summary>
            ソケットからバイト配列でデータを読み込みます。
            </summary>
            <param name="bytes_size">受信したバイト数。未受信のときは、-1。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Network.BL_RawSocketServer.Connected.ReceiveBytes">
            <summary>
            ソケットからバイト配列でデータを読み込みます。
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Network.BL_RawSocketServer.Connected.ReceiveBytes(System.Int32)">
            <summary>
            ソケットからバイト配列でデータを読み込みます。
            </summary>
            <param name="timeOut">タイムアウト値。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Network.BL_RawSocketServer.Connected.ReceiveBytes(System.Int32@,System.Int32)">
            <summary>
            ソケットからバイト配列でデータを読み込みます。
            </summary>
            <param name="bytes_size">受信したバイト数。未受信のときは、-1。</param>
            <param name="timeOut">タイムアウト値。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Network.BL_RawSocketServer.Connected.SendBytesDirect(System.Byte[])">
            <summary>
            ソケットに FormatType列挙型 の設定を付加せずにデータを書き込みます。
            </summary>
            <param name="data">書き込むデータが格納されているバイト配列。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Network.BL_RawSocketServer.Connected.ReceiveBytesDirect">
            <summary>
            ソケットから FormatType列挙型 の設定を無視してバイト配列でデータを読み込みます。
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Network.BL_RawSocketServer.Connected.OnReceive(System.IAsyncResult)">
            <summary>
            
            </summary>
            <param name="ar"></param>
        </member>
        <member name="E:BelicsClass.Network.BL_RawSocketServer.Connected.ReceiveEvent">
            <summary>
            受信すると発生します。
            </summary>
        </member>
        <member name="E:BelicsClass.Network.BL_RawSocketServer.Connected.DisconnectEvent">
            <summary>
            切断すると発生します。
            </summary>
        </member>
        <member name="P:BelicsClass.Network.BL_RawSocketServer.Connected.IsConnected">
            <summary>
            ソケットの接続状態を取得します。接続している場合は true。それ以外の場合は false。
            </summary>
        </member>
        <member name="P:BelicsClass.Network.BL_RawSocketServer.Connected.IsReserved">
            <summary>
            ソケットの予約状態を取得します。予約されている場合は true。それ以外の場合は false。
            </summary>
        </member>
        <member name="P:BelicsClass.Network.BL_RawSocketServer.Connected.ErrorCode">
            <summary>
            異常コードを取得します。
            </summary>
        </member>
        <member name="P:BelicsClass.Network.BL_RawSocketServer.Connected.ErrorMessage">
            <summary>
            異常内容を取得します。
            </summary>
        </member>
        <member name="T:BelicsClass.Network.BL_RawSocketServer.Connected.ReceiveEventHandler">
            <summary>
            イベントを処理するメソッドを表します。
            </summary>
        </member>
        <member name="T:BelicsClass.Network.BL_RawSocketServer.Connected.ReceiveEventArgs">
            <summary>
            受信すると発生するイベントの引数。
            </summary>
        </member>
        <member name="P:BelicsClass.Network.BL_RawSocketServer.Connected.ReceiveEventArgs.ConnectNo">
            <summary>
            接続したソケットの接続№を取得します。
            </summary>
        </member>
        <member name="P:BelicsClass.Network.BL_RawSocketServer.Connected.ReceiveEventArgs.BytesData">
            <summary>
            受信したデータが格納されているバイト配列を取得します。
            </summary>
        </member>
        <member name="T:BelicsClass.Network.BL_RawSocketServer.Connected.DisconnectEventHandler">
            <summary>
            イベントを処理するメソッドを表します。
            </summary>
        </member>
        <member name="T:BelicsClass.Network.BL_RawSocketServer.Connected.DisconnectEventArgs">
            <summary>
            切断すると発生するイベントの引数。
            </summary>
        </member>
        <member name="P:BelicsClass.Network.BL_RawSocketServer.Connected.DisconnectEventArgs.ConnectNo">
            <summary>
            切断したソケットの接続№を取得します。
            </summary>
        </member>
        <member name="P:BelicsClass.Network.BL_RawSocketServer.Connected.DisconnectEventArgs.ErrorCode">
            <summary>
            異常コード
            </summary>
        </member>
        <member name="P:BelicsClass.Network.BL_RawSocketServer.Connected.DisconnectEventArgs.ErrorMessage">
            <summary>
            異常内容
            </summary>
        </member>
        <member name="T:BelicsClass.ProcessManage.BL_Only">
            <summary>
            プロセスの起動をチェックします。
            </summary>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_Only.#ctor(System.String)">
            <summary>
            プロセスの起動をチェックします。
            </summary>
            <param name="mutexName">プロセスを判断するときに使用するユニーク名を指定します。</param>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_Only.Finalize">
            <summary>
            
            </summary>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_Only.Release">
            <summary>
            プロセスの起動チェック用ミューテックスを廃棄します。 
            </summary>
        </member>
        <member name="P:BelicsClass.ProcessManage.BL_Only.IsOnly">
            <summary>
            プロセスの起動を取得します。起動していない場合は true。それ以外の場合は false。 
            </summary>
        </member>
        <member name="T:BelicsClass.Network.BL_RawSocketUDP">
            <summary>
            ソケットクラス(UDP)
            </summary>
        </member>
        <member name="M:BelicsClass.Network.BL_RawSocketUDP.#ctor(System.Int32)">
            <summary>
            ソケットクラス
            </summary>
            <param name="port">使用するソケットのポート№。</param>
        </member>
        <member name="M:BelicsClass.Network.BL_RawSocketUDP.Open(BelicsClass.Network.BL_RawSocketUDP.FormatType)">
            <summary>
            ソケットのオープンをします。
            </summary>
            <param name="formatType">オープンするソケットのフォーマット。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Network.BL_RawSocketUDP.Close">
            <summary>
            ソケットのクローズをします。
            </summary>
        </member>
        <member name="M:BelicsClass.Network.BL_RawSocketUDP.Send(System.String,System.Net.IPEndPoint)">
            <summary>
            ソケットにデータを書き込みます。
            </summary>
            <param name="data">書き込むデータが格納されている文字列。</param>
            <param name="remoteEP"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Network.BL_RawSocketUDP.Receive">
            <summary>
            ソケットからデータを読み込みます。
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Network.BL_RawSocketUDP.Receive(System.Int32)">
            <summary>
            ソケットからデータを読み込みます。
            </summary>
            <param name="timeOut">タイムアウト値。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Network.BL_RawSocketUDP.SendBytes(System.Byte[],System.Net.IPEndPoint)">
            <summary>
            ソケットにバイト配列のデータを書き込みます。
            </summary>
            <param name="data">書き込むデータが格納されているバイト配列。</param>
            <param name="remoteEP"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Network.BL_RawSocketUDP.ReceiveBytes(System.Int32@)">
            <summary>
            ソケットからバイト配列でデータを読み込みます。
            </summary>
            <param name="bytes_size">受信したバイト数。未受信のときは、-1。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Network.BL_RawSocketUDP.ReceiveBytes">
            <summary>
            ソケットからバイト配列でデータを読み込みます。
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Network.BL_RawSocketUDP.ReceiveBytes(System.Int32)">
            <summary>
            ソケットからバイト配列でデータを読み込みます。
            </summary>
            <param name="timeOut">タイムアウト値。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Network.BL_RawSocketUDP.ReceiveBytes(System.Int32@,System.Int32)">
            <summary>
            ソケットからバイト配列でデータを読み込みます。
            </summary>
            <param name="bytes_size">受信したバイト数。未受信のときは、-1。</param>
            <param name="timeOut">タイムアウト値。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Network.BL_RawSocketUDP.SendBytesDirect(System.Byte[],System.Net.IPEndPoint)">
            <summary>
            ソケットに FormatType列挙型 の設定を付加せずにデータを書き込みます。
            </summary>
            <param name="data">書き込むデータが格納されているバイト配列。</param>
            <param name="remoteEP"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Network.BL_RawSocketUDP.ReceiveBytesDirect">
            <summary>
            ソケットから FormatType列挙型 の設定を無視してバイト配列でデータを読み込みます。
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Network.BL_RawSocketUDP.OnSend(System.IAsyncResult)">
            <summary>
            
            </summary>
            <param name="ar"></param>
        </member>
        <member name="M:BelicsClass.Network.BL_RawSocketUDP.OnReceive(System.IAsyncResult)">
            <summary>
            
            </summary>
            <param name="ar"></param>
        </member>
        <member name="E:BelicsClass.Network.BL_RawSocketUDP.ReceiveEvent">
            <summary>
            受信すると発生します。
            </summary>
        </member>
        <member name="P:BelicsClass.Network.BL_RawSocketUDP.RemoteIpAddress">
            <summary>
            接続先のIPアドレスを取得します。
            </summary>
        </member>
        <member name="P:BelicsClass.Network.BL_RawSocketUDP.RemotePort">
            <summary>
            接続先のポート№を取得します。
            </summary>
        </member>
        <member name="P:BelicsClass.Network.BL_RawSocketUDP.ErrorCode">
            <summary>
            異常コードを取得します。
            </summary>
        </member>
        <member name="P:BelicsClass.Network.BL_RawSocketUDP.ErrorMessage">
            <summary>
            異常内容を取得します。
            </summary>
        </member>
        <member name="T:BelicsClass.Network.BL_RawSocketUDP.ReceiveEventHandler">
            <summary>
            イベントを処理するメソッドを表します。
            </summary>
        </member>
        <member name="T:BelicsClass.Network.BL_RawSocketUDP.ReceiveEventArgs">
            <summary>
            受信すると発生するイベントの引数。
            </summary>
        </member>
        <member name="P:BelicsClass.Network.BL_RawSocketUDP.ReceiveEventArgs.BytesData">
            <summary>
            受信したデータが格納されているバイト配列を取得します。
            </summary>
        </member>
        <member name="T:BelicsClass.Network.BL_RawSocketUDP.FormatType">
            <summary>
            フォーマット
            </summary>
        </member>
        <member name="F:BelicsClass.Network.BL_RawSocketUDP.FormatType.None">
            <summary>
            なし
            </summary>
        </member>
        <member name="F:BelicsClass.Network.BL_RawSocketUDP.FormatType.CR">
            <summary>
            ～CR
            </summary>
        </member>
        <member name="F:BelicsClass.Network.BL_RawSocketUDP.FormatType.CR_LF">
            <summary>
            ～CR+LF
            </summary>
        </member>
        <member name="F:BelicsClass.Network.BL_RawSocketUDP.FormatType.STX_ETX">
            <summary>
            STX～ETX
            </summary>
        </member>
        <member name="F:BelicsClass.Network.BL_RawSocketUDP.FormatType.BL_FORMAT">
            <summary>
            特殊フォーマット
            </summary>
        </member>
        <member name="T:BelicsClass.File.BL_IniFile">
            <summary>
            IniFileを操作します。
            </summary>
        </member>
        <member name="F:BelicsClass.File.BL_IniFile.readValueSizeCapacity">
            <summary>
            キー値を取得する際のの最大サイズを示します。<br/>
            </summary>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.#ctor(System.String)">
            <summary>
            コンストラクタです。<br/>
            </summary>
            <param name="iniFileName">
            iniファイル名を指定します。<br/>
            相対パス、絶対パスのいずれでもOKです。
            </param>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.ExistsKey(System.String,System.String)">
            <summary>
            指定されたセクション、キーの項目が存在するか調査します。
            </summary>
            <param name="section">存在を確認するセクションを指定します。</param>
            <param name="key">存在を確認するキーを指定します。</param>
            <returns>
            指定されたセクション、キーが存在する場合、trueを返します。
            指定されたセクション、キーが存在しない場合、falseを返します。
            </returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Read(System.String,System.String,System.String)">
            <summary>
            指定されたセクション、キーの値を、文字列で取得します。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="defaultValue">指定されたセクション、キーの値がな場合に返却する値を指定します。</param>
            <returns>文字列を返します。</returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Read(System.String,System.String,System.SByte)">
            <summary>
            指定されたセクション、キーの値を、sbyteで取得します。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="defaultValue">指定されたセクション、キーの値がな場合に返却する値を指定します。</param>
            <returns>sbyteを返します。</returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Read(System.String,System.String,System.Int16)">
            <summary>
            指定されたセクション、キーの値を、shortで取得します。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="defaultValue">指定されたセクション、キーの値がな場合に返却する値を指定します。</param>
            <returns>shortを返します。</returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Read(System.String,System.String,System.Int32)">
            <summary>
            指定されたセクション、キーの値を、intで取得します。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="defaultValue">指定されたセクション、キーの値がな場合に返却する値を指定します。</param>
            <returns>intを返します。</returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Read(System.String,System.String,System.Int64)">
            <summary>
            指定されたセクション、キーの値を、longで取得します。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="defaultValue">指定されたセクション、キーの値がな場合に返却する値を指定します。</param>
            <returns>longを返します。</returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Read(System.String,System.String,System.Byte)">
            <summary>
            指定されたセクション、キーの値を、byteで取得します。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="defaultValue">指定されたセクション、キーの値がな場合に返却する値を指定します。</param>
            <returns>byteを返します。</returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Read(System.String,System.String,System.UInt16)">
            <summary>
            指定されたセクション、キーの値を、ushortで取得します。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="defaultValue">指定されたセクション、キーの値がな場合に返却する値を指定します。</param>
            <returns>ushortを返します。</returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Read(System.String,System.String,System.UInt32)">
            <summary>
            指定されたセクション、キーの値を、uintで取得します。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="defaultValue">指定されたセクション、キーの値がな場合に返却する値を指定します。</param>
            <returns>uintを返します。</returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Read(System.String,System.String,System.UInt64)">
            <summary>
            指定されたセクション、キーの値を、ulongで取得します。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="defaultValue">指定されたセクション、キーの値がな場合に返却する値を指定します。</param>
            <returns>ulongを返します。</returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Read(System.String,System.String,System.Single)">
            <summary>
            指定されたセクション、キーの値を、floatで取得します。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="defaultValue">指定されたセクション、キーの値がな場合に返却する値を指定します。</param>
            <returns>文字列を返します。</returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Read(System.String,System.String,System.Double)">
            <summary>
            指定されたセクション、キーの値を、doubleで取得します。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="defaultValue">指定されたセクション、キーの値がな場合に返却する値を指定します。</param>
            <returns>doubleを返します。</returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Read(System.String,System.String,System.Decimal)">
            <summary>
            指定されたセクション、キーの値を、decimalで取得します。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="defaultValue">指定されたセクション、キーの値がな場合に返却する値を指定します。</param>
            <returns>decimalを返します。</returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Read(System.String,System.String,System.Char)">
            <summary>
            指定されたセクション、キーの値を、charで取得します。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="defaultValue">指定されたセクション、キーの値がな場合に返却する値を指定します。</param>
            <returns>charを返します。</returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Read(System.String,System.String,System.Boolean)">
            <summary>
            指定されたセクション、キーの値を、boolで取得します。
            "0"=true/"1"=false もしく "true"/"false"
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="defaultValue">指定されたセクション、キーの値がな場合に返却する値を指定します。</param>
            <returns>boolを返します。</returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Read(System.String,System.String,System.Net.IPAddress)">
            <summary>
            指定されたセクション、キーの値を、IPAddressで取得します。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="defaultValue">指定されたセクション、キーの値がな場合に返却する値を指定します。</param>
            <returns>IPAddressを返します。</returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Read(System.String,System.String,System.DateTime)">
            <summary>
            指定されたセクション、キーの値を、DateTimeで取得します。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="defaultValue">指定されたセクション、キーの値がな場合に返却する値を指定します。</param>
            <returns>DateTimeを返します。</returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Read(System.String,System.String,System.Drawing.Color)">
            <summary>
            指定されたセクション、キーの値を、Colorで取得します。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="defaultValue">指定されたセクション、キーの値がな場合に返却する値を指定します。</param>
            <returns>DateTimeを返します。</returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Get(System.String,System.String,System.String)">
            <summary>
            指定されたセクション、キーの値を、文字列で取得します。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="defaultValue">指定されたセクション、キーの値がな場合に返却する値を指定します。</param>
            <returns>文字列を返します。</returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Get(System.String,System.String,System.SByte)">
            <summary>
            指定されたセクション、キーの値を、sbyteで取得します。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="defaultValue">指定されたセクション、キーの値がな場合に返却する値を指定します。</param>
            <returns>sbyteを返します。</returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Get(System.String,System.String,System.Int16)">
            <summary>
            指定されたセクション、キーの値を、shortで取得します。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="defaultValue">指定されたセクション、キーの値がな場合に返却する値を指定します。</param>
            <returns>shortを返します。</returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Get(System.String,System.String,System.Int32)">
            <summary>
            指定されたセクション、キーの値を、intで取得します。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="defaultValue">指定されたセクション、キーの値がな場合に返却する値を指定します。</param>
            <returns>intを返します。</returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Get(System.String,System.String,System.Int64)">
            <summary>
            指定されたセクション、キーの値を、longで取得します。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="defaultValue">指定されたセクション、キーの値がな場合に返却する値を指定します。</param>
            <returns>longを返します。</returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Get(System.String,System.String,System.Byte)">
            <summary>
            指定されたセクション、キーの値を、byteで取得します。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="defaultValue">指定されたセクション、キーの値がな場合に返却する値を指定します。</param>
            <returns>byteを返します。</returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Get(System.String,System.String,System.UInt16)">
            <summary>
            指定されたセクション、キーの値を、ushortで取得します。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="defaultValue">指定されたセクション、キーの値がな場合に返却する値を指定します。</param>
            <returns>ushortを返します。</returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Get(System.String,System.String,System.UInt32)">
            <summary>
            指定されたセクション、キーの値を、uintで取得します。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="defaultValue">指定されたセクション、キーの値がな場合に返却する値を指定します。</param>
            <returns>uintを返します。</returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Get(System.String,System.String,System.UInt64)">
            <summary>
            指定されたセクション、キーの値を、ulongで取得します。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="defaultValue">指定されたセクション、キーの値がな場合に返却する値を指定します。</param>
            <returns>ulongを返します。</returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Get(System.String,System.String,System.Single)">
            <summary>
            指定されたセクション、キーの値を、floatで取得します。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="defaultValue">指定されたセクション、キーの値がな場合に返却する値を指定します。</param>
            <returns>文字列を返します。</returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Get(System.String,System.String,System.Double)">
            <summary>
            指定されたセクション、キーの値を、doubleで取得します。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="defaultValue">指定されたセクション、キーの値がな場合に返却する値を指定します。</param>
            <returns>doubleを返します。</returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Get(System.String,System.String,System.Decimal)">
            <summary>
            指定されたセクション、キーの値を、decimalで取得します。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="defaultValue">指定されたセクション、キーの値がな場合に返却する値を指定します。</param>
            <returns>decimalを返します。</returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Get(System.String,System.String,System.Char)">
            <summary>
            指定されたセクション、キーの値を、charで取得します。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="defaultValue">指定されたセクション、キーの値がな場合に返却する値を指定します。</param>
            <returns>charを返します。</returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Get(System.String,System.String,System.Boolean)">
            <summary>
            指定されたセクション、キーの値を、boolで取得します。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="defaultValue">指定されたセクション、キーの値がな場合に返却する値を指定します。</param>
            <returns>boolを返します。</returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Get(System.String,System.String,System.Net.IPAddress)">
            <summary>
            指定されたセクション、キーの値を、IPAddressで取得します。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="defaultValue">指定されたセクション、キーの値がな場合に返却する値を指定します。</param>
            <returns>IPAddressを返します。</returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Get(System.String,System.String,System.DateTime)">
            <summary>
            指定されたセクション、キーの値を、DateTimeで取得します。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="defaultValue">指定されたセクション、キーの値がな場合に返却する値を指定します。</param>
            <returns>DateTimeを返します。</returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Get(System.String,System.String,System.Drawing.Color)">
            <summary>
            指定されたセクション、キーの値を、Colorで取得します。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="defaultValue">指定されたセクション、キーの値がな場合に返却する値を指定します。</param>
            <returns>DateTimeを返します。</returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Write(System.String,System.String,System.String)">
            <summary>
            指定されたセクション、キーに指定された文字列を書き込みます。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="writeValue">書き込む値を指定します。</param>
            <returns>
            書き込みに成功した場合、trueを返します。<br/>
            書き込みに失敗した場合、falseを返します。
            </returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Write(System.String,System.String,System.SByte)">
            <summary>
            指定されたセクション、キーに指定されたsbyteを書き込みます。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="writeValue">書き込む値を指定します。</param>
            <returns>
            書き込みに成功した場合、trueを返します。<br/>
            書き込みに失敗した場合、falseを返します。
            </returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Write(System.String,System.String,System.Int16)">
            <summary>
            指定されたセクション、キーに指定されたshortを書き込みます。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="writeValue">書き込む値を指定します。</param>
            <returns>
            書き込みに成功した場合、trueを返します。<br/>
            書き込みに失敗した場合、falseを返します。
            </returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Write(System.String,System.String,System.Int32)">
            <summary>
            指定されたセクション、キーに指定されたintを書き込みます。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="writeValue">書き込む値を指定します。</param>
            <returns>
            書き込みに成功した場合、trueを返します。<br/>
            書き込みに失敗した場合、falseを返します。
            </returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Write(System.String,System.String,System.Int64)">
            <summary>
            指定されたセクション、キーに指定されたlongを書き込みます。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="writeValue">書き込む値を指定します。</param>
            <returns>
            書き込みに成功した場合、trueを返します。<br/>
            書き込みに失敗した場合、falseを返します。
            </returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Write(System.String,System.String,System.Byte)">
            <summary>
            指定されたセクション、キーに指定されたbyteを書き込みます。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="writeValue">書き込む値を指定します。</param>
            <returns>
            書き込みに成功した場合、trueを返します。<br/>
            書き込みに失敗した場合、falseを返します。
            </returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Write(System.String,System.String,System.UInt16)">
            <summary>
            指定されたセクション、キーに指定されたushortを書き込みます。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="writeValue">書き込む値を指定します。</param>
            <returns>
            書き込みに成功した場合、trueを返します。<br/>
            書き込みに失敗した場合、falseを返します。
            </returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Write(System.String,System.String,System.UInt32)">
            <summary>
            指定されたセクション、キーに指定されたuintを書き込みます。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="writeValue">書き込む値を指定します。</param>
            <returns>
            書き込みに成功した場合、trueを返します。<br/>
            書き込みに失敗した場合、falseを返します。
            </returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Write(System.String,System.String,System.UInt64)">
            <summary>
            指定されたセクション、キーに指定されたulongを書き込みます。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="writeValue">書き込む値を指定します。</param>
            <returns>
            書き込みに成功した場合、trueを返します。<br/>
            書き込みに失敗した場合、falseを返します。
            </returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Write(System.String,System.String,System.Single)">
            <summary>
            指定されたセクション、キーに指定されたfloatを書き込みます。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="writeValue">書き込む値を指定します。</param>
            <returns>
            書き込みに成功した場合、trueを返します。<br/>
            書き込みに失敗した場合、falseを返します。
            </returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Write(System.String,System.String,System.Double)">
            <summary>
            指定されたセクション、キーに指定されたdoubleを書き込みます。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="writeValue">書き込む値を指定します。</param>
            <returns>
            書き込みに成功した場合、trueを返します。<br/>
            書き込みに失敗した場合、falseを返します。
            </returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Write(System.String,System.String,System.Decimal)">
            <summary>
            指定されたセクション、キーに指定されたdecimalを書き込みます。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="writeValue">書き込む値を指定します。</param>
            <returns>
            書き込みに成功した場合、trueを返します。<br/>
            書き込みに失敗した場合、falseを返します。
            </returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Write(System.String,System.String,System.Char)">
            <summary>
            指定されたセクション、キーに指定されたcharを書き込みます。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="writeValue">書き込む値を指定します。</param>
            <returns>
            書き込みに成功した場合、trueを返します。<br/>
            書き込みに失敗した場合、falseを返します。
            </returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Write(System.String,System.String,System.Boolean)">
            <summary>
            指定されたセクション、キーに指定されたboolを書き込みます。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="writeValue">書き込む値を指定します。</param>
            <returns>
            書き込みに成功した場合、trueを返します。<br/>
            書き込みに失敗した場合、falseを返します。
            </returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Write(System.String,System.String,System.Net.IPAddress)">
            <summary>
            指定されたセクション、キーに指定されたIPAddressを書き込みます。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="writeValue">書き込む値を指定します。</param>
            <returns>
            書き込みに成功した場合、trueを返します。<br/>
            書き込みに失敗した場合、falseを返します。
            </returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Write(System.String,System.String,System.DateTime)">
            <summary>
            指定されたセクション、キーに指定されたDateTimeを書き込みます。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="writeValue">書き込む値を指定します。</param>
            <returns>
            書き込みに成功した場合、trueを返します。<br/>
            書き込みに失敗した場合、falseを返します。
            </returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Set(System.String,System.String,System.String)">
            <summary>
            指定されたセクション、キーに指定された文字列を書き込みます。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="writeValue">書き込む値を指定します。</param>
            <returns>
            書き込みに成功した場合、trueを返します。<br/>
            書き込みに失敗した場合、falseを返します。
            </returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Set(System.String,System.String,System.SByte)">
            <summary>
            指定されたセクション、キーに指定されたsbyteを書き込みます。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="writeValue">書き込む値を指定します。</param>
            <returns>
            書き込みに成功した場合、trueを返します。<br/>
            書き込みに失敗した場合、falseを返します。
            </returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Set(System.String,System.String,System.Int16)">
            <summary>
            指定されたセクション、キーに指定されたshortを書き込みます。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="writeValue">書き込む値を指定します。</param>
            <returns>
            書き込みに成功した場合、trueを返します。<br/>
            書き込みに失敗した場合、falseを返します。
            </returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Set(System.String,System.String,System.Int32)">
            <summary>
            指定されたセクション、キーに指定されたintを書き込みます。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="writeValue">書き込む値を指定します。</param>
            <returns>
            書き込みに成功した場合、trueを返します。<br/>
            書き込みに失敗した場合、falseを返します。
            </returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Set(System.String,System.String,System.Int64)">
            <summary>
            指定されたセクション、キーに指定されたlongを書き込みます。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="writeValue">書き込む値を指定します。</param>
            <returns>
            書き込みに成功した場合、trueを返します。<br/>
            書き込みに失敗した場合、falseを返します。
            </returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Set(System.String,System.String,System.Byte)">
            <summary>
            指定されたセクション、キーに指定されたbyteを書き込みます。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="writeValue">書き込む値を指定します。</param>
            <returns>
            書き込みに成功した場合、trueを返します。<br/>
            書き込みに失敗した場合、falseを返します。
            </returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Set(System.String,System.String,System.UInt16)">
            <summary>
            指定されたセクション、キーに指定されたushortを書き込みます。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="writeValue">書き込む値を指定します。</param>
            <returns>
            書き込みに成功した場合、trueを返します。<br/>
            書き込みに失敗した場合、falseを返します。
            </returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Set(System.String,System.String,System.UInt32)">
            <summary>
            指定されたセクション、キーに指定されたuintを書き込みます。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="writeValue">書き込む値を指定します。</param>
            <returns>
            書き込みに成功した場合、trueを返します。<br/>
            書き込みに失敗した場合、falseを返します。
            </returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Set(System.String,System.String,System.UInt64)">
            <summary>
            指定されたセクション、キーに指定されたulongを書き込みます。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="writeValue">書き込む値を指定します。</param>
            <returns>
            書き込みに成功した場合、trueを返します。<br/>
            書き込みに失敗した場合、falseを返します。
            </returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Set(System.String,System.String,System.Single)">
            <summary>
            指定されたセクション、キーに指定されたfloatを書き込みます。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="writeValue">書き込む値を指定します。</param>
            <returns>
            書き込みに成功した場合、trueを返します。<br/>
            書き込みに失敗した場合、falseを返します。
            </returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Set(System.String,System.String,System.Double)">
            <summary>
            指定されたセクション、キーに指定されたdoubleを書き込みます。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="writeValue">書き込む値を指定します。</param>
            <returns>
            書き込みに成功した場合、trueを返します。<br/>
            書き込みに失敗した場合、falseを返します。
            </returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Set(System.String,System.String,System.Decimal)">
            <summary>
            指定されたセクション、キーに指定されたdecimalを書き込みます。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="writeValue">書き込む値を指定します。</param>
            <returns>
            書き込みに成功した場合、trueを返します。<br/>
            書き込みに失敗した場合、falseを返します。
            </returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Set(System.String,System.String,System.Char)">
            <summary>
            指定されたセクション、キーに指定されたcharを書き込みます。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="writeValue">書き込む値を指定します。</param>
            <returns>
            書き込みに成功した場合、trueを返します。<br/>
            書き込みに失敗した場合、falseを返します。
            </returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Set(System.String,System.String,System.Boolean)">
            <summary>
            指定されたセクション、キーに指定されたboolを書き込みます。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="writeValue">書き込む値を指定します。</param>
            <returns>
            書き込みに成功した場合、trueを返します。<br/>
            書き込みに失敗した場合、falseを返します。
            </returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Set(System.String,System.String,System.Net.IPAddress)">
            <summary>
            指定されたセクション、キーに指定されたIPAddressを書き込みます。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="writeValue">書き込む値を指定します。</param>
            <returns>
            書き込みに成功した場合、trueを返します。<br/>
            書き込みに失敗した場合、falseを返します。
            </returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.Set(System.String,System.String,System.DateTime)">
            <summary>
            指定されたセクション、キーに指定されたDateTimeを書き込みます。
            </summary>
            <param name="section">セクションを指定します。</param>
            <param name="key">キーを指定します。</param>
            <param name="writeValue">書き込む値を指定します。</param>
            <returns>
            書き込みに成功した場合、trueを返します。<br/>
            書き込みに失敗した場合、falseを返します。
            </returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.GetPrivateProfileString(System.String,System.String,System.String,System.Text.StringBuilder,System.UInt32,System.String)">
            <summary>
            GetPrivateProfileStringのDLLインポート<br/>
            iniファイルの読み込み用の関数(GetPrivateProfileString)です。<br/>
            本関数の詳細はWin32APIを参照してください。
            </summary>
            <param name="lpszSection">セクション名のアドレス</param>
            <param name="lpszKey">キー名のアドレス</param>
            <param name="lpszDefault">デフォルト文字列のアドレス</param>
            <param name="lpszReturnBuffer">転送先バッファのアドレス</param>
            <param name="cchReturnBuffer">転送先バッファのサイズ</param>
            <param name="lpszFile">初期化ファイル名のアドレス</param>
            <returns>指定されたバッファにコピーされた文字の数を示します。</returns>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.WritePrivateProfileString(System.String,System.String,System.String,System.String)">
            <summary>
            WritePrivateProfileStringのDLLインポート<br/>
            iniファイルの書き込み用の関数(WritePrivateProfileString)です。<br/>
            本関数の詳細はWin32APIを参照してください。
            </summary>
            <param name="lpszSection">セクション名のアドレス</param>
            <param name="lpszKey">キー名のアドレス</param>
            <param name="lpszString">追加する文字列のアドレス</param>
            <param name="lpszFile">初期化ファイル名のアドレス</param>
            <returns>関数が文字列を .ini ファイルに格納することに成功すると、0 以外の値が返ります。</returns>
        </member>
        <member name="F:BelicsClass.File.BL_IniFile.fileInfo">
            <summary>
            iniファイルの情報です。
            </summary>
        </member>
        <member name="M:BelicsClass.File.BL_IniFile.GetColor(System.String,System.Drawing.Color)">
            <summary>
            色名称や色コード(#rrggbb)からColorを取得します。
            </summary>
            <param name="name"></param>
            <param name="defaultColor"></param>
            <returns></returns>
        </member>
        <member name="P:BelicsClass.File.BL_IniFile.FullName">
            <summary>
            iniファイルのファイル名称を取得できます。
            </summary>
        </member>
        <member name="P:BelicsClass.File.BL_IniFile.Exists">
            <summary>
            iniファイルが存在することを確認できます。
            </summary>
        </member>
        <member name="T:BelicsClass.UI.BL_WndProcHooker">
            <summary>
            ウィンドウメッセージのフックを自動処理するクラスです。
            </summary>
        </member>
        <member name="F:BelicsClass.UI.BL_WndProcHooker.GWL_WNDPROC">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.BL_WndProcHooker.SetWindowLong(System.IntPtr,System.Int32,System.IntPtr)">
            <summary>
            
            </summary>
            <param name="hwnd"></param>
            <param name="nIndex"></param>
            <param name="dwNewLong"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.BL_WndProcHooker.CallWindowProc(System.IntPtr,System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            
            </summary>
            <param name="lpPrevWndFunc"></param>
            <param name="hwnd"></param>
            <param name="msg"></param>
            <param name="wParam"></param>
            <param name="lParam"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.BL_WndProcHooker.HookWndProc(System.Windows.Forms.Control,BelicsClass.UI.BL_WndProcHooker.WndProcCallback,System.Int32)">
            <summary>
            コントロールに特定のメッセージに対応するコールバック関数（フック）を登録します
            </summary>
            <param name="ctl"></param>
            <param name="callback"></param>
            <param name="msg"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_WndProcHooker.UnhookWndProc(System.Windows.Forms.Control,System.Int32)">
            <summary>
            コントロールのコールバックを解除します。
            </summary>
            <param name="ctl"></param>
            <param name="msg"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_WndProcHooker.UnhookWndProc(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            コントロールに登録されているコールバックを解除します。
            </summary>
            <param name="ctl"></param>
            <param name="disposing"></param>
        </member>
        <member name="T:BelicsClass.UI.BL_WndProcHooker.WndProc">
            <summary>
            A callback to a Win32 window procedure (wndproc):
            </summary>
            <param name="hwnd"></param>
            <param name="msg"></param>
            <param name="wParam"></param>
            <param name="lParam"></param>
            <returns></returns>
        </member>
        <member name="T:BelicsClass.UI.BL_WndProcHooker.WndProcCallback">
            <summary>
            コールバック関数のデリゲート
            </summary>
            <param name="hwnd"></param>
            <param name="msg"></param>
            <param name="wParam"></param>
            <param name="lParam"></param>
            <param name="handled"></param>
            <returns></returns>
        </member>
        <member name="T:BelicsClass.UI.BL_WndProcHooker.HookedProcInformation">
            <summary>
            フック情報クラス
            </summary>
        </member>
        <member name="F:BelicsClass.UI.BL_WndProcHooker.HookedProcInformation.messageMap">
            <summary>
            メッセージに対応するコールバック一覧
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_WndProcHooker.HookedProcInformation.#ctor(System.Windows.Forms.Control,BelicsClass.UI.BL_WndProcHooker.WndProc)">
            <summary>
            コンストラクタ
            </summary>
            <param name="ctl"></param>
            <param name="wndproc"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_WndProcHooker.HookedProcInformation.SetHook">
            <summary>
            コールバックを登録します。
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_WndProcHooker.HookedProcInformation.Unhook">
            <summary>
            コールバックを解除します。
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_WndProcHooker.HookedProcInformation.CallOldWindowProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            旧コールバックを呼び出して、コールバックリレーを続行します。
            </summary>
            <param name="hwnd"></param>
            <param name="msg"></param>
            <param name="wParam"></param>
            <param name="lParam"></param>
            <returns></returns>
        </member>
        <member name="T:BelicsClass.UI.Graph.BL_Chart">
            <summary>チャートを描画するコントロール</summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Chart.dictAxises">
            <summary>軸のコレクション</summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Chart.dictSeries">
            <summary>シリーズのコレクション</summary>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.AddAxis(BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis)">
            <summary>
            
            </summary>
            <param name="axis"></param>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.AddSeries(BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries)">
            <summary>
            
            </summary>
            <param name="series"></param>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.ShowPlotOnly">
            <summary>
            
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.ShowAll">
            <summary>
            
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.Redraw">
            <summary>
            
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.Redraw_Left">
            <summary>
            
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.Redraw_Right">
            <summary>
            
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.Redraw_Bottom">
            <summary>
            
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.Redraw_Plot">
            <summary>
            
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.RecalculateAxesScale">
            <summary>
            
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.RecalculateAxesScale(System.Double,System.Double)">
            <summary>
            
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.GetCursorPoint(BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries,System.Int32)">
            <summary>
            指定したシリーズのカーソル位置の値を取得します
            </summary>
            <param name="series">シリーズ</param>
            <param name="cursorno">カーソルNo</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.RedrawAsync">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Chart.components">
            <summary> 
            必要なデザイナー変数です。
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.Dispose(System.Boolean)">
            <summary> 
            使用中のリソースをすべてクリーンアップします。
            </summary>
            <param name="disposing">マネージ リソースが破棄される場合 true、破棄されない場合は false です。</param>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.InitializeComponent">
            <summary> 
            デザイナー サポートに必要なメソッドです。このメソッドの内容を 
            コード エディターで変更しないでください。
            </summary>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Chart.BackColor_Plot">
            <summary>描画領域内の背景色</summary>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Chart.DebugMode">
            <summary>
            
            </summary>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Chart.ShowCrossLine">
            <summary>
            マウスポインターの位置でクロスラインの表示を行います
            </summary>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Chart.EnableClip">
            <summary>
            マウス操作による表示範囲指定の有効・無効を指定します
            </summary>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Chart.EnableClip_Separate">
            <summary>
            マウス操作による表示範囲指定で、左クリック・右クリックの挙動を独立させます
            左クリック：X軸／右クリック：Y軸
            </summary>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Chart.CursorCount">
            <summary>
            カーソルの有効・無効を設定します
            </summary>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Chart.Title">
            <summary>
            
            </summary>
        </member>
        <member name="E:BelicsClass.UI.Graph.BL_Chart.EventRecalculateAxesScale">
            <summary>
            
            </summary>
        </member>
        <member name="T:BelicsClass.UI.Graph.BL_Chart.BL_ChartPoint">
            <summary>
            １ポイントデータを保持するクラス
            </summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Chart.BL_ChartPoint.xvalue">
            <summary>X軸値</summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Chart.BL_ChartPoint.yvalues">
            <summary>Y軸値のリスト</summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Chart.BL_ChartPoint.actualyvalues">
            <summary>Y軸値のリスト</summary>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.BL_ChartPoint.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.BL_ChartPoint.#ctor(System.Double,System.Double[])">
            <summary>
            コンストラクタ
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="T:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries">
            <summary>
            １線のデータを保持する基本クラス
            </summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries.Name">
            <summary>名称</summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries.BorderPen">
            <summary>境界線のペン</summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries.BackBrush">
            <summary>背景色のブラシ</summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries.CrossPen">
            <summary>チャート領域の軸描画ペン</summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries.LegendBrush">
            <summary>凡例描画ブラシ</summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries.AxisX">
            <summary>X軸</summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries.AxisY">
            <summary>Y軸</summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries.Points">
            <summary>ポイントデータのリスト</summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries.IsFollowValueY">
            <summary>Y軸値を軸ガイド上に表示する</summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries.IsFollowValueX">
            <summary>X軸値を軸ガイド上に表示する</summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries.FollowValueY_PositionX">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries.#ctor(System.String,BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis,BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis,System.Drawing.Pen,System.Drawing.Brush,System.Drawing.Pen,System.Drawing.Brush)">
            <summary>
            コンストラクタ
            </summary>
            <param name="name"></param>
            <param name="axisX"></param>
            <param name="axisY"></param>
            <param name="border"></param>
            <param name="back"></param>
            <param name="cross"></param>
            <param name="legend"></param>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries.DrawCross(System.Drawing.Graphics,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries.DrawCursorValue(System.Drawing.Graphics,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries.Draw(System.Drawing.Graphics,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries.Contains(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries.DrawLegend(System.Drawing.Graphics,System.Single,System.Single,System.Boolean)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="left"></param>
            <param name="top"></param>
            <param name="needunit"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries.WithIn(System.Double,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="target"></param>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries.GetPoint(System.Int32,System.Single)">
            <summary>
            
            </summary>
            <param name="width"></param>
            <param name="pixelX"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries.GetPointIndex(System.Int32,System.Single)">
            <summary>
            
            </summary>
            <param name="width"></param>
            <param name="pixelX"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries.DrawValueY(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Single)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="plotwidth"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="positionX"></param>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries.DrawValueX(System.Drawing.Graphics,System.Int32,System.Single)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="width"></param>
            <param name="positionX"></param>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries.MinMax">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries.GetCursorPoints(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="width"></param>
            <param name="cursorno"></param>
            <returns></returns>
        </member>
        <member name="T:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries_Line">
            <summary>
            折れ線
            </summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries_Line.PointDistance">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries_Line.#ctor(System.String,BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis,BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis,System.Drawing.Pen,System.Drawing.Brush,System.Drawing.Pen,System.Drawing.Brush)">
            <summary>
            コンストラクタ
            </summary>
            <param name="name"></param>
            <param name="axisX"></param>
            <param name="axisY"></param>
            <param name="border"></param>
            <param name="back"></param>
            <param name="cross"></param>
            <param name="legend"></param>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries_Line.#ctor(System.String,BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis,BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis,System.Drawing.Pen,System.Drawing.Brush,System.Drawing.Pen,System.Drawing.Brush,System.Single)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="axisX"></param>
            <param name="axisY"></param>
            <param name="border"></param>
            <param name="back"></param>
            <param name="cross"></param>
            <param name="legend"></param>
            <param name="point_distance">点描画にする距離(画面上のピクセル距離)</param>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries_Line.Draw(System.Drawing.Graphics,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="T:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries_LineFiltered">
            <summary>
            移動平均折れ線
            </summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries_LineFiltered.FilterPoints">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries_LineFiltered.#ctor(System.String,BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis,BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis,System.Drawing.Pen,System.Drawing.Brush,System.Drawing.Pen,System.Drawing.Brush,System.Int32)">
            <summary>
            コンストラクタ
            </summary>
            <param name="name"></param>
            <param name="axisX"></param>
            <param name="axisY"></param>
            <param name="border"></param>
            <param name="back"></param>
            <param name="cross"></param>
            <param name="legend"></param>
            <param name="filterPoints"></param>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries_LineFiltered.Draw(System.Drawing.Graphics,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries_LineFiltered.DrawValueY(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Single)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="plotwidth"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="positionX"></param>
        </member>
        <member name="T:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries_LinePoint">
            <summary>
            折れ線＋データポイント＋データ値
            </summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries_LinePoint.PointPixels">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries_LinePoint.PointBorderPen">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries_LinePoint.PointBackBrush">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries_LinePoint.PointType">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries_LinePoint.#ctor(System.String,BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis,BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis,System.Drawing.Pen,System.Drawing.Brush,System.Drawing.Pen,BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries_LinePoint.PointTypes,System.Int32,System.Drawing.Pen,System.Drawing.Brush,System.Drawing.Brush)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="axisX"></param>
            <param name="axisY"></param>
            <param name="border"></param>
            <param name="back"></param>
            <param name="cross"></param>
            <param name="pointtype"></param>
            <param name="pointpixels"></param>
            <param name="pointborder"></param>
            <param name="pointback"></param>
            <param name="legend"></param>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries_LinePoint.Draw(System.Drawing.Graphics,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="T:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries_LinePoint.PointTypes">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries_LinePoint.PointTypes.Ellipse">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries_LinePoint.PointTypes.Rectangle">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries_LinePoint.PointTypes.FillEllipse">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries_LinePoint.PointTypes.FillRectangle">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries_LinePoint.PointTypes.Ellipse_Value">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries_LinePoint.PointTypes.Rectangle_Value">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries_LinePoint.PointTypes.FillEllipse_Value">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries_LinePoint.PointTypes.FillRectangle_Value">
            <summary></summary>
        </member>
        <member name="T:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries_Bar">
            <summary>
            棒
            </summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries_Bar.BarWidth">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries_Bar.SecondaryBacks">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries_Bar.#ctor(System.String,BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis,BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis,System.Drawing.Pen,System.Drawing.Brush,System.Drawing.Pen,System.Drawing.Brush,System.Double,System.Drawing.Brush[])">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="axisX"></param>
            <param name="axisY"></param>
            <param name="border"></param>
            <param name="back"></param>
            <param name="cross"></param>
            <param name="legend"></param>
            <param name="barwidth"></param>
            <param name="secondary_backs"></param>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries_Bar.Draw(System.Drawing.Graphics,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries_Bar.Contains(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries_Bar.MinMax">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries_Band">
            <summary>
            バンド枠
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries_Band.#ctor(System.String,BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis,BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis,System.Drawing.Pen,System.Drawing.Brush,System.Drawing.Pen,System.Drawing.Brush)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="axisX"></param>
            <param name="axisY"></param>
            <param name="border"></param>
            <param name="back"></param>
            <param name="cross"></param>
            <param name="legend"></param>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries_Band.Draw(System.Drawing.Graphics,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries_Band.Contains(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="T:BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis.Owner">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis.Name">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis.Minimum">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis.Maximum">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis.Guides">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis.GuideInner">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis.GuideOuter">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis.GuideOffset">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis.DisplayWidth">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis.DisplayOffset">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis.RightToLeft">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis.IndicateFormat">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis.MarginLeft">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis.MarginRight">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis.DrawPen">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis.FontMargin">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis.Scale">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis.ContinueThreshold">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis.CursorPosition">
            <summary>
            カーソル位置保持
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis.#ctor(System.Windows.Forms.Control,System.String,System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32,System.Boolean,System.String,System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            
            </summary>
            <param name="owner"></param>
            <param name="name"></param>
            <param name="min"></param>
            <param name="max"></param>
            <param name="guideinner"></param>
            <param name="guideouter"></param>
            <param name="guideoffset"></param>
            <param name="displaywidth"></param>
            <param name="displayoffset"></param>
            <param name="righttoleft"></param>
            <param name="format"></param>
            <param name="draw"></param>
            <param name="fontmargin"></param>
            <param name="leftmargin"></param>
            <param name="rightmargin"></param>
            <param name="rate"></param>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis.#ctor(System.Windows.Forms.Control,System.String,System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32,System.Boolean,System.String,System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="owner"></param>
            <param name="name"></param>
            <param name="min"></param>
            <param name="max"></param>
            <param name="guideinner"></param>
            <param name="guideouter"></param>
            <param name="guideoffset"></param>
            <param name="displaywidth"></param>
            <param name="displayoffset"></param>
            <param name="righttoleft"></param>
            <param name="format"></param>
            <param name="draw"></param>
            <param name="fontmargin"></param>
            <param name="leftmargin"></param>
            <param name="rightmargin"></param>
            <param name="rate"></param>
            <param name="continue_threshold"></param>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis.GetPixel(System.Int32,System.Double)">
            <summary>
            
            </summary>
            <param name="width"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis.GetPixelSize(System.Int32,System.Double)">
            <summary>
            
            </summary>
            <param name="width"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis.GetValue(System.Int32,System.Single)">
            <summary>
            
            </summary>
            <param name="width"></param>
            <param name="pixel"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis.Draw(System.Drawing.Graphics,System.Int32)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="width"></param>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis.ToString(System.Double)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis.DrawCross(System.Drawing.Graphics,System.Int32,System.Int32,System.Drawing.Pen)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="crossPen"></param>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis.DrawCursor(System.Drawing.Graphics,System.Int32,System.Int32,System.Drawing.Pen)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="crossPen"></param>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis.DrawCursorValue(System.Drawing.Graphics,System.Int32,System.Int32,BelicsClass.UI.Graph.BL_Chart.BL_ChartSeries)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="series"></param>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis.AddCursorPosition(System.Int32,System.Single)">
            <summary>
            
            </summary>
            <param name="width"></param>
            <param name="pixel"></param>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis.AddCursorValue(System.Double)">
            <summary>
            
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis.RemoveLastCursorPosition">
            <summary>
            
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis.RemoveCursorValue(System.Double)">
            <summary>
            
            </summary>
            <param name="val"></param>
        </member>
        <member name="T:BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis_Bottom">
            <summary>
            
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis_Bottom.#ctor(System.Windows.Forms.Control,System.String,System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32,System.Boolean,System.String,System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            
            </summary>
            <param name="owner"></param>
            <param name="name"></param>
            <param name="min"></param>
            <param name="max"></param>
            <param name="guideinner"></param>
            <param name="guideouter"></param>
            <param name="guideoffset"></param>
            <param name="displaywidth"></param>
            <param name="displayoffset"></param>
            <param name="righttoleft"></param>
            <param name="format"></param>
            <param name="draw"></param>
            <param name="fontmargin"></param>
            <param name="leftmargin"></param>
            <param name="rightmargin"></param>
            <param name="rate"></param>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis_Bottom.#ctor(System.Windows.Forms.Control,System.String,System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32,System.Boolean,System.String,System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="owner"></param>
            <param name="name"></param>
            <param name="min"></param>
            <param name="max"></param>
            <param name="guideinner"></param>
            <param name="guideouter"></param>
            <param name="guideoffset"></param>
            <param name="displaywidth"></param>
            <param name="displayoffset"></param>
            <param name="righttoleft"></param>
            <param name="format"></param>
            <param name="draw"></param>
            <param name="fontmargin"></param>
            <param name="leftmargin"></param>
            <param name="rightmargin"></param>
            <param name="rate"></param>
            <param name="continue_threshold"></param>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis_Bottom.Draw(System.Drawing.Graphics,System.Int32)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="width"></param>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis_Bottom.DrawCross(System.Drawing.Graphics,System.Int32,System.Int32,System.Drawing.Pen)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="crossPen"></param>
        </member>
        <member name="T:BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis_Bottom_DateTime">
            <summary>
            
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis_Bottom_DateTime.#ctor(System.Windows.Forms.Control,System.String,System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32,System.Boolean,System.String,System.Drawing.Pen,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="owner"></param>
            <param name="name"></param>
            <param name="min"></param>
            <param name="max"></param>
            <param name="guideinner"></param>
            <param name="guideouter"></param>
            <param name="guideoffset"></param>
            <param name="displaywidth"></param>
            <param name="displayoffset"></param>
            <param name="righttoleft"></param>
            <param name="format"></param>
            <param name="draw"></param>
            <param name="fontmargin"></param>
            <param name="leftmargin"></param>
            <param name="rightmargin"></param>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis_Bottom_DateTime.#ctor(System.Windows.Forms.Control,System.String,System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32,System.Boolean,System.String,System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            
            </summary>
            <param name="owner"></param>
            <param name="name"></param>
            <param name="min"></param>
            <param name="max"></param>
            <param name="guideinner"></param>
            <param name="guideouter"></param>
            <param name="guideoffset"></param>
            <param name="displaywidth"></param>
            <param name="displayoffset"></param>
            <param name="righttoleft"></param>
            <param name="format"></param>
            <param name="draw"></param>
            <param name="fontmargin"></param>
            <param name="leftmargin"></param>
            <param name="rightmargin"></param>
            <param name="continue_threshold"></param>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis_Bottom_DateTime.ToString(System.Double)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis_Bottom_DateTime.Draw(System.Drawing.Graphics,System.Int32)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="width"></param>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis_Bottom_DateTime.DrawCross(System.Drawing.Graphics,System.Int32,System.Int32,System.Drawing.Pen)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="crossPen"></param>
        </member>
        <member name="T:BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis_Left">
            <summary>
            
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis_Left.#ctor(System.Windows.Forms.Control,System.String,System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32,System.Boolean,System.String,System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            
            </summary>
            <param name="owner"></param>
            <param name="name"></param>
            <param name="min"></param>
            <param name="max"></param>
            <param name="guideinner"></param>
            <param name="guideouter"></param>
            <param name="guideoffset"></param>
            <param name="displaywidth"></param>
            <param name="displayoffset"></param>
            <param name="bottomtoup"></param>
            <param name="format"></param>
            <param name="draw"></param>
            <param name="fontmargin"></param>
            <param name="topmargin"></param>
            <param name="bottommargin"></param>
            <param name="rate"></param>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis_Left.Draw(System.Drawing.Graphics,System.Int32)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="width"></param>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis_Left.DrawCross(System.Drawing.Graphics,System.Int32,System.Int32,System.Drawing.Pen)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="crossPen"></param>
        </member>
        <member name="T:BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis_Right">
            <summary>
            
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis_Right.#ctor(System.Windows.Forms.Control,System.String,System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32,System.Boolean,System.String,System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            
            </summary>
            <param name="owner"></param>
            <param name="name"></param>
            <param name="min"></param>
            <param name="max"></param>
            <param name="guideinner"></param>
            <param name="guideouter"></param>
            <param name="guideoffset"></param>
            <param name="displaywidth"></param>
            <param name="displayoffset"></param>
            <param name="bottomtoup"></param>
            <param name="format"></param>
            <param name="draw"></param>
            <param name="fontmargin"></param>
            <param name="topmargin"></param>
            <param name="bottommargin"></param>
            <param name="rate"></param>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis_Right.Draw(System.Drawing.Graphics,System.Int32)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="width"></param>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Chart.BL_ChartAxis_Right.DrawCross(System.Drawing.Graphics,System.Int32,System.Int32,System.Drawing.Pen)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="crossPen"></param>
        </member>
        <member name="T:BelicsClass.UI.Graph.BL_Chart.BL_ChartAxisList">
            <summary>
            軸コレクションリスト（拡張版）
            </summary>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Chart.BL_ChartAxisList.Item(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeriesList">
            <summary>
            シリーズコレクションリスト（拡張版）
            </summary>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Chart.BL_ChartSeriesList.Item(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:BelicsClass.UI.Graph.BL_Chart.Event_Handler_RecalculateAxesScale">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="min"></param>
            <param name="max"></param>
        </member>
        <member name="T:BelicsClass.ProcessManage.BL_Process">
            <summary>
            外部プロセスを起動するクラス
            </summary>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_Process.StartProcess(System.String,System.String[])">
            <summary>
            プロセスを実行します
            </summary>
            <param name="path">プロセスのファイルパス</param>
            <param name="args">引数</param>
            <returns>成功時:プロセス 失敗時:null</returns>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_Process.StartProcess(System.String,System.Diagnostics.ProcessWindowStyle,System.String[])">
            <summary>
            プロセスを実行します
            </summary>
            <param name="path">プロセスのファイルパス</param>
            <param name="style">起動時のスタイル</param>
            <param name="args">引数</param>
            <returns>成功時:プロセス 失敗時:null</returns>
        </member>
        <member name="F:BelicsClass.ProcessManage.BL_Process.process">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_Process.Start(System.String,System.String[])">
            <summary>
            
            </summary>
            <param name="path"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_Process.Start(System.String,System.Diagnostics.ProcessWindowStyle,System.String[])">
            <summary>
            
            </summary>
            <param name="path"></param>
            <param name="style"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_Process.Abort">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_Process.Stop">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_Process.Wait">
            <summary>
            
            </summary>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_Process.Wait(System.Int32)">
            <summary>
            
            </summary>
            <param name="timeout_millis"></param>
        </member>
        <member name="P:BelicsClass.ProcessManage.BL_Process.HasExited">
            <summary>
            
            </summary>
        </member>
        <member name="T:BelicsClass.ProcessManage.BL_Mutex">
            <summary>
            排他制御クラス（複数プロセス間）
            </summary>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_Mutex.#ctor">
            <summary>
            コンストラクタ
            Mutexインスタンスを名前なしで初期化します
            オープンされます
            オープンエラーで例外が発生します
            </summary>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_Mutex.#ctor(System.String)">
            <summary>
            コンストラクタ
            Mutexインスタンスを名前付きで初期化します
            オープンされます
            オープンエラーで例外が発生します
            </summary>
            <param name="name">名前</param>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_Mutex.Dispose">
            <summary>
            Mutexインスタンスを破棄します
            </summary>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_Mutex.Dispose(System.Boolean)">
            <summary>
            Mutexインスタンスを破棄します
            </summary>
            <param name="flag">未使用</param>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_Mutex.Open(System.String)">
            <summary>
            指定された名称のMutexをオープンします
            </summary>
            <param name="name">名称</param>
            <returns>エラーメッセージを返します</returns>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_Mutex.Close">
            <summary>
            Mutexをクローズします
            ロックされている場合、アンロックされます。
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_Mutex.Lock">
            <summary>
            ロックします
            ロックができるまでブロッキングします
            </summary>
            <returns>常にtrueを返します</returns>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_Mutex.Lock(System.Int32)">
            <summary>
            ロックします
            指定時間だけブロッキングします
            指定時間内にロックできない場合、タイムアウトします
            </summary>
            <param name="millisecondsTimeout">指定時間msec</param>
            <returns>ロックが成功するとtrueを返します</returns>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_Mutex.Unlock">
            <summary>
            アンロックします
            ロックされていなくても例外を発生しません
            </summary>
            <returns>アンロックが行われるとtrueを返します。ロックされていない場合falseを返します。</returns>
        </member>
        <member name="T:BelicsClass.Database.BL_Database">
            <summary>
            各種データベースクラスの基本クラスです
            </summary>
        </member>
        <member name="F:BelicsClass.Database.BL_Database.Command">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.Database.BL_Database.Connection">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.Database.BL_Database.Adapter">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.Database.BL_Database.Ds">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.Database.BL_Database.Error_code">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.Database.BL_Database.Error_message">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.Database.BL_Database.Connected">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.Database.BL_Database.Connect_timeout">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.Database.BL_Database.Command_timeout">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.Database.BL_Database.dateQuoteFrom">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.Database.BL_Database.dateQuoteTo">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.Database.BL_Database.isHeader">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.Database.BL_Database.FileName">
            <summary>Excelファイル名</summary>
        </member>
        <member name="M:BelicsClass.Database.BL_Database.#ctor">
            <summary>
            データベースクラス
            </summary>
        </member>
        <member name="M:BelicsClass.Database.BL_Database.#ctor(System.Int32)">
            <summary>
            データベースクラス
            </summary>
            <param name="cmdTimeout">コマンドタイムアウト値の設定。</param>
        </member>
        <member name="M:BelicsClass.Database.BL_Database.Finalize">
            <summary>
            データベースクラス
            </summary>
        </member>
        <member name="M:BelicsClass.Database.BL_Database.GetConnectionString(System.String,System.String,System.String,System.String)">
            <summary>
            各種DB接続用の接続文字列を取得します。
            派生クラスで処理を実装する必要があります。
            </summary>
            <param name="initialCatalog"></param>
            <param name="dataSource"></param>
            <param name="userID"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Database.BL_Database.Connect(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="initialCatalog"></param>
            <param name="dataSource"></param>
            <param name="userID"></param>
            <param name="password"></param>
            <param name="connectTimeout"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Database.BL_Database.Connect(System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="initialCatalog"></param>
            <param name="dataSource"></param>
            <param name="userID"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Database.BL_Database.Connect(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="initialCatalog"></param>
            <param name="dataSource"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Database.BL_Database.Connect(System.String)">
            <summary>
            
            </summary>
            <param name="dataSource"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Database.BL_Database.Connect(System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="dataSource"></param>
            <param name="is_header"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Database.BL_Database.Disconnect">
            <summary>
            データベースとの接続を終了します。
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Database.BL_Database.GetTableName(System.String)">
            <summary>
            
            </summary>
            <param name="table_name"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Database.BL_Database.GetTables">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Database.BL_Database.Execute(System.String)">
            <summary>
            SQLを実行します。
            </summary>
            <param name="sql">実行するSQL文が格納されている文字列。</param>
        </member>
        <member name="M:BelicsClass.Database.BL_Database.Execute(System.String,System.String)">
            <summary>
            SQLを実行しデータセット内に新規データテーブルを作成します。
            </summary>
            <param name="sql">実行するSQL文が格納されている文字列。</param>
            <param name="dataTableName">新規に作成するデータテーブル名が格納されている文字列。</param>
        </member>
        <member name="M:BelicsClass.Database.BL_Database.SetIsolationLevel(BelicsClass.Database.BL_Database.IsolationLevel)">
            <summary>
            トランザクション分離レベルを設定します。
            </summary>
            <param name="level">設定する分離レベル。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Database.BL_Database.BeginTransaction">
            <summary>
            トランザクションを開始します。
            </summary>
        </member>
        <member name="M:BelicsClass.Database.BL_Database.CommitTransaction">
            <summary>
            トランザクションをコミットします。
            </summary>
        </member>
        <member name="M:BelicsClass.Database.BL_Database.RollBackTransaction">
            <summary>
            トランザクションをロールバックします。
            </summary>
        </member>
        <member name="M:BelicsClass.Database.BL_Database.ClearDataTable(System.String)">
            <summary>
            データセット内の指定したデータテーブルを削除します。
            </summary>
            <param name="dataTableName">削除するデータテーブル名が格納されている文字列。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Database.BL_Database.GetConnection">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Database.BL_Database.GetDbCommand(System.String,System.Data.Common.DbConnection)">
            <summary>
            
            </summary>
            <param name="cmdText"></param>
            <param name="connection"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Database.BL_Database.GetDbDataAdapter(System.Data.Common.DbCommand)">
            <summary>
            
            </summary>
            <param name="selectCommand"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Database.BL_Database.GetDbCommandBuilder(System.Data.Common.DbDataAdapter)">
            <summary>
            
            </summary>
            <param name="adapter"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Database.BL_Database.errors">
            <summary>
            異常を設定
            </summary>
        </member>
        <member name="M:BelicsClass.Database.BL_Database.errors(System.Int32,System.String)">
            <summary>
            異常を設定
            </summary>
            <param name="error_code">異常コード</param>
            <param name="comment">異常内容</param>
        </member>
        <member name="P:BelicsClass.Database.BL_Database.DateQuoteFrom">
            <summary></summary>
        </member>
        <member name="P:BelicsClass.Database.BL_Database.DateQuoteTo">
            <summary></summary>
        </member>
        <member name="P:BelicsClass.Database.BL_Database.Item(System.String)">
            <summary>
            データセットから指定したデータテーブルのコピーを返します。
            </summary>
        </member>
        <member name="P:BelicsClass.Database.BL_Database.CommandTimeOut">
            <summary>
            SQL実行タイムアウト時間を取得、設定します。単位は秒。
            </summary>
        </member>
        <member name="P:BelicsClass.Database.BL_Database.IsConnected">
            <summary>
            データベースの接続状態を取得します。接続している場合は true。それ以外の場合は false。
            </summary>
        </member>
        <member name="P:BelicsClass.Database.BL_Database.ErrorCode">
            <summary>
            異常コードを取得します。
            </summary>
        </member>
        <member name="P:BelicsClass.Database.BL_Database.ErrorMessage">
            <summary>
            異常内容を取得します。
            </summary>
        </member>
        <member name="T:BelicsClass.Database.BL_Database.ExNumber">
            <summary>
            エラー№
            </summary>
        </member>
        <member name="F:BelicsClass.Database.BL_Database.ExNumber.NoError">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.Database.BL_Database.ExNumber.UnexpectedException">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.Database.BL_Database.ExNumber.TableNotExistException">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.Database.BL_Database.ExNumber.RecordNotExistException">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.Database.BL_Database.ExNumber.RecordDupException">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.Database.BL_Database.ExNumber.NotConnectedException">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.Database.BL_Database.ExNumber.ProcedureParameterException">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.Database.BL_Database.ExNumber.ArgumentException">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.Database.BL_Database.ExNumber.InvalidOperationException">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.Database.BL_Database.ExNumber.SqlException">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.Database.BL_Database.ExNumber.SystemException">
            <summary>
            
            </summary>
        </member>
        <member name="T:BelicsClass.Database.BL_Database.IsolationLevel">
            <summary>
            トランザクション分離レベル
            </summary>
        </member>
        <member name="F:BelicsClass.Database.BL_Database.IsolationLevel.Serializable">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.Database.BL_Database.IsolationLevel.Repeatable_Read">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.Database.BL_Database.IsolationLevel.Read_Committed">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.Database.BL_Database.IsolationLevel.Read_Uncommitted">
            <summary>
            
            </summary>
        </member>
        <member name="T:BelicsClass.Common.BL_Bytes">
            <summary>
            拡張バイト配列クラス
            </summary>
        </member>
        <member name="M:BelicsClass.Common.BL_Bytes.Clear(System.Byte,System.Byte[],System.Int32)">
            <summary>
            バイト配列を初期化します。
            </summary>
            <param name="sourceByte">初期化に使用するバイト値。</param>
            <param name="destinationBytes">初期化するバイト配列。</param>
            <param name="length">初期化するバイト数。</param>
        </member>
        <member name="M:BelicsClass.Common.BL_Bytes.Clear(System.Byte,System.Byte[],System.Int32,System.Int32)">
            <summary>
            バイト配列を初期化します。
            </summary>
            <param name="sourceByte">初期化に使用するバイト値。</param>
            <param name="destinationBytes">初期化するバイト配列。</param>
            <param name="destinationIndex">destinationBytes内の初期化を開始するインデックス。</param>
            <param name="length">初期化するバイト数。</param>
        </member>
        <member name="M:BelicsClass.Common.BL_Bytes.Copy(System.Byte[],System.Byte[],System.Int32)">
            <summary>
            バイト配列をコピーします。
            </summary>
            <param name="sourceBytes">コピー元のバイト配列。</param>
            <param name="destinationBytes">コピー先のバイト配列。</param>
            <param name="length">コピーするバイト数。</param>
        </member>
        <member name="M:BelicsClass.Common.BL_Bytes.Copy(System.Byte[],System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            バイト配列をコピーします。
            </summary>
            <param name="sourceBytes">コピー元のバイト配列。</param>
            <param name="sourceIndex">sourceBytes内のコピーを開始するインデックス。</param>
            <param name="destinationBytes">コピー先のバイト配列。</param>
            <param name="destinationIndex">destinationBytes内のコピーを開始するインデックス。</param>
            <param name="length">コピーするバイト数。</param>
        </member>
        <member name="M:BelicsClass.Common.BL_Bytes.Compare(System.Byte[],System.Byte[],System.Int32)">
            <summary>
            バイト配列を比較します。
            </summary>
            <param name="sourceBytes">比較元のバイト配列。</param>
            <param name="destinationBytes">比較先のバイト配列。</param>
            <param name="length">比較するバイト数。</param>
        </member>
        <member name="M:BelicsClass.Common.BL_Bytes.Compare(System.Byte[],System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            バイト配列を比較します。
            </summary>
            <param name="sourceBytes">比較元のバイト配列。</param>
            <param name="sourceIndex">sourceBytes内の比較を開始するインデックス。</param>
            <param name="destinationBytes">比較先のバイト配列。</param>
            <param name="destinationIndex">destinationBytes内の比較を開始するインデックス。</param>
            <param name="length">比較するバイト数。</param>
        </member>
        <member name="M:BelicsClass.Common.BL_Bytes.Join(System.Byte[],System.Byte[]@,System.Int32)">
            <summary>
            バイト配列を結合します。
            </summary>
            <param name="sourceBytes">結合元のバイト配列。</param>
            <param name="destinationBytes">結合先のバイト配列。</param>
            <param name="length">結合するバイト数。</param>
        </member>
        <member name="M:BelicsClass.Common.BL_Bytes.Join(System.Byte[],System.Int32,System.Byte[]@,System.Int32,System.Int32)">
            <summary>
            バイト配列を結合します。
            </summary>
            <param name="sourceBytes">結合元のバイト配列。</param>
            <param name="sourceIndex">sourceBytes内の結合を開始するインデックス。</param>
            <param name="destinationBytes">結合先のバイト配列。</param>
            <param name="destinationIndex">destinationBytes内の結合を開始するインデックス。</param>
            <param name="length">結合するバイト数。</param>
        </member>
        <member name="M:BelicsClass.Common.BL_Bytes.Trim(System.Byte[],System.Int32)">
            <summary>
            バイト配列を調整します。
            </summary>
            <param name="sourceBytes">調整元のバイト配列。</param>
            <param name="length">調整するバイト数。</param>
        </member>
        <member name="M:BelicsClass.Common.BL_Bytes.Trim(System.Byte[],System.Int32,System.Int32)">
            <summary>
            バイト配列を調整します。
            </summary>
            <param name="sourceBytes">調整元のバイト配列。</param>
            <param name="sourceIndex">sourceBytes内の調整を開始するインデックス。</param>
            <param name="length">調整するバイト数。</param>
        </member>
        <member name="M:BelicsClass.Common.BL_Bytes.PadRight(System.String,System.Int32)">
            <summary>
            バイト配列に変換して左寄せします。
            </summary>
            <param name="sourceString">調整元の文字列。</param>
            <param name="length">変換後のバイト数。</param>
        </member>
        <member name="M:BelicsClass.Common.BL_Bytes.PadRight(System.String,System.Int32,System.Byte)">
            <summary>
            バイト配列に変換して左寄せします。
            </summary>
            <param name="sourceString">変換元の文字列。</param>
            <param name="length">変換後のバイト数。</param>
            <param name="sourceByte">埋め込みに使用するバイト値。</param>
        </member>
        <member name="M:BelicsClass.Common.BL_Bytes.PadLeft(System.String,System.Int32)">
            <summary>
            バイト配列に変換して右寄せします。
            </summary>
            <param name="sourceString">調整元の文字列。</param>
            <param name="length">変換後のバイト数。</param>
        </member>
        <member name="M:BelicsClass.Common.BL_Bytes.PadLeft(System.String,System.Int32,System.Byte)">
            <summary>
            バイト配列に変換して右寄せします。
            </summary>
            <param name="sourceString">変換元の文字列。</param>
            <param name="length">変換後のバイト数。</param>
            <param name="sourceByte">埋め込みに使用するバイト値。</param>
        </member>
        <member name="M:BelicsClass.Common.BL_Bytes.IndexOf(System.Byte[],System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            バイト配列からバイト配列を検索します。
            </summary>
            <param name="sourceBytes">検索対象となるバイト配列。</param>
            <param name="sourceIndex">sourceBytes内の検索を開始するインデックス。</param>
            <param name="targetBytes">検索するバイト配列。</param>
            <param name="targetIndex">targetBytes内の検索を開始するインデックス。</param>
            <param name="length">検索するバイト数。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Common.BL_Bytes.BytesToInt32(System.Byte[])">
            <summary>
            byte[4]をInt32へ変換
            </summary>
            <param name="data">変換するバイト配列。</param>
        </member>
        <member name="M:BelicsClass.Common.BL_Bytes.BytesToInt32(System.Byte[],System.Int32)">
            <summary>
            byte[4]をInt32へ変換
            </summary>
            <param name="data">変換するバイト配列。</param>
            <param name="Index">data内の変換を開始するインデックス。</param>
        </member>
        <member name="M:BelicsClass.Common.BL_Bytes.Int32ToBytes(System.Int32)">
            <summary>
            Int32をbyte[4]へ変換
            </summary>
            <param name="data">変換する値。</param>
        </member>
        <member name="M:BelicsClass.Common.BL_Bytes.BytesToInt16(System.Byte[])">
            <summary>
            byte[2]をInt16へ変換
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:BelicsClass.Common.BL_Bytes.BytesToInt16(System.Byte[],System.Int32)">
            <summary>
            byte[2]をInt16へ変換
            </summary>
            <param name="data">変換するバイト配列。</param>
            <param name="Index">data内の変換を開始するインデックス。</param>
        </member>
        <member name="M:BelicsClass.Common.BL_Bytes.Int16ToBytes(System.Int16)">
            <summary>
            Int16をbyte[2]へ変換
            </summary>
            <param name="data">変換する値。</param>
        </member>
        <member name="T:BelicsClass.Common.BL_Bytes.Target">
            <summary>
            バイト配列の連続変換クラス
            </summary>
        </member>
        <member name="M:BelicsClass.Common.BL_Bytes.Target.#ctor(System.Byte[]@)">
            <summary>
            コンストラクタ
            </summary>
            <param name="base_data">データを格納する(している)バイト配列。</param>
        </member>
        <member name="M:BelicsClass.Common.BL_Bytes.Target.Add(System.String,System.Int32)">
            <summary>
            バイト配列へデータを追加します。
            </summary>
            <param name="source">追加するデータが格納されている文字列。</param>
            <param name="size">追加するバイト数。</param>
        </member>
        <member name="M:BelicsClass.Common.BL_Bytes.Target.Add(System.Byte[],System.Int32)">
            <summary>
            バイト配列へデータを追加します。
            </summary>
            <param name="source">追加するデータが格納されているバイト配列。</param>
            <param name="size">追加するバイト数。</param>
        </member>
        <member name="M:BelicsClass.Common.BL_Bytes.Target.Add(System.Int32)">
            <summary>
            バイト配列へデータを追加します。
            </summary>
            <param name="source">追加するデータが格納されているInt32。</param>
        </member>
        <member name="M:BelicsClass.Common.BL_Bytes.Target.Add(System.Int16)">
            <summary>
            バイト配列へデータを追加します。
            </summary>
            <param name="source">追加するデータが格納されているInt16。</param>
        </member>
        <member name="M:BelicsClass.Common.BL_Bytes.Target.Split(System.String@,System.Int32)">
            <summary>
            バイト配列からデータを抽出します。
            </summary>
            <param name="source">抽出したデータを格納する文字列。</param>
            <param name="size">抽出するバイト数。</param>
        </member>
        <member name="M:BelicsClass.Common.BL_Bytes.Target.Split(System.Byte[]@,System.Int32)">
            <summary>
            バイト配列からデータを抽出します。
            </summary>
            <param name="source">抽出したデータを格納するバイト配列。</param>
            <param name="size">抽出するバイト数。</param>
        </member>
        <member name="M:BelicsClass.Common.BL_Bytes.Target.Split(System.Int32@)">
            <summary>
            バイト配列からデータを抽出します。
            </summary>
            <param name="source">抽出したデータを格納するInt32。</param>
        </member>
        <member name="M:BelicsClass.Common.BL_Bytes.Target.Split(System.Int16@)">
            <summary>
            バイト配列からデータを抽出します。
            </summary>
            <param name="source">抽出したデータを格納するInt16。</param>
        </member>
        <member name="T:BelicsClass.Common.BL_BinarySerializer">
            <summary>
            シリアライズクラス
            シリアライズ対象のインスタンスは[Serializable]属性である必要があります
            バイナリーシリアライズを行います
            </summary>
        </member>
        <member name="M:BelicsClass.Common.BL_BinarySerializer.SerializeToStream(System.Object)">
            <summary>
            オブジェクトをメモリーストリームへシリアライズします
            </summary>
            <param name="objectType">シリアライズ対象</param>
            <returns>メモリーストリームを返します</returns>
        </member>
        <member name="M:BelicsClass.Common.BL_BinarySerializer.DeserializeFromStream(System.IO.Stream)">
            <summary> 
            メモリーストリームからオブジェクトをデシリアライズします
            </summary> 
            <param name="stream"></param> 
            <returns></returns> 
        </member>
        <member name="M:BelicsClass.Common.BL_BinarySerializer.DeserializeFromStream``1(System.IO.Stream)">
            <summary>
            型指定でメモリーストリームからオブジェクトをデシリアライズします
            デシリアライズされたオブジェクトが指定した型にキャストできない場合、例外が発生します
            </summary>
            <typeparam name="T"></typeparam>
            <param name="stream"></param>
            <returns>指定した型のオブジェクトを返します</returns>
        </member>
        <member name="M:BelicsClass.Common.BL_BinarySerializer.StreamToBytes(System.IO.Stream)">
            <summary>
            ストリームから読み込んだデータでバイト配列を生成します
            </summary>
            <param name="stream">読み込み対象のストリーム</param>
            <returns>生成されたバイト配列</returns>
        </member>
        <member name="M:BelicsClass.Common.BL_BinarySerializer.StreamFromBytes(System.Byte[])">
            <summary>
            バイト配列をメモリーストリームへ書き込みます
            </summary>
            <param name="data">書き込むデータ</param>
            <returns>メモリーストリームを返します</returns>
        </member>
        <member name="M:BelicsClass.Common.BL_BinarySerializer.SerializeToBytes(System.Object)">
            <summary>
            オブジェクトをバイナリーシリアライズして、バイト配列を取得します
            </summary>
            <param name="objectType"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Common.BL_BinarySerializer.DeserializeFromBytes(System.Byte[])">
            <summary>
            バイト配列をデシリアライズして、オブジェクトを取得します
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Common.BL_BinarySerializer.DeserializeFromBytes``1(System.Byte[])">
            <summary>
            バイト配列をデシリアライズして、指定した型のオブジェクトを取得します
            指定した型へキャストできない場合、例外が発生します
            </summary>
            <typeparam name="T"></typeparam>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Common.BL_BinarySerializer.Clone``1(``0)">
            <summary>
            指定した型オブジェクトのクローンを生成します。
            </summary>
            <typeparam name="T">クラスの型</typeparam>
            <param name="obj">クローン元</param>
            <returns>生成されたクローンのインスタンス</returns>
        </member>
        <member name="M:BelicsClass.Common.BL_BinarySerializer.Save``1(System.String,``0)">
            <summary>
            指定した型オブジェクトをシリアライズしてファイルへ保存します
            </summary>
            <typeparam name="T"></typeparam>
            <param name="path"></param>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Common.BL_BinarySerializer.Load``1(System.String)">
            <summary>
            ファイルからデシリアライズして指定した型オブジェクトを取得します
            指定した型にキャストできない場合、例外が発生します
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="T:BelicsClass.ProcessManage.BL_Semaphore">
            <summary>
            排他制御クラス（複数プロセス間）
            </summary>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_Semaphore.#ctor">
            <summary>
            コンストラクタ
            Semaphoreインスタンスを名前なしで初期化します
            オープンされます
            オープンエラーで例外が発生します
            </summary>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_Semaphore.#ctor(System.String)">
            <summary>
            コンストラクタ
            Semaphoreインスタンスを名前付きで初期化します
            オープンされます
            オープンエラーで例外が発生します
            </summary>
            <param name="name">名前</param>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_Semaphore.Dispose">
            <summary>
            Semaphoreインスタンスを破棄します
            </summary>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_Semaphore.Dispose(System.Boolean)">
            <summary>
            Semaphoreインスタンスを破棄します
            </summary>
            <param name="flag">未使用</param>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_Semaphore.Open(System.String)">
            <summary>
            指定された名称のSemaphoreをオープンします
            </summary>
            <param name="name">名称</param>
            <returns>エラーメッセージを返します</returns>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_Semaphore.Close">
            <summary>
            Semaphoreをクローズします
            ロックされている場合、アンロックされます。
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_Semaphore.Lock">
            <summary>
            ロックします
            ロックができるまでブロッキングします
            </summary>
            <returns>常にtrueを返します</returns>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_Semaphore.Lock(System.Int32)">
            <summary>
            ロックします
            指定時間だけブロッキングします
            指定時間内にロックできない場合、タイムアウトします
            </summary>
            <param name="millisecondsTimeout">指定時間msec</param>
            <returns>ロックが成功するとtrueを返します</returns>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_Semaphore.Unlock">
            <summary>
            アンロックします
            ロックされていなくても例外を発生しません
            </summary>
            <returns>アンロックが行われるとtrueを返します。ロックされていない場合falseを返します。</returns>
        </member>
        <member name="P:BelicsClass.ProcessManage.BL_Semaphore.IsLocked">
            <summary>
            ロック状態を取得します(設定はできません)
            </summary>
        </member>
        <member name="T:BelicsClass.PLC.BL_PLCDataSync">
            <summary>
            PLC通信を行います。
            複数範囲のデータメモリを定期的に共有メモリと同期します。
            読み込み・書き込み双方
            </summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_PLCDataSync.Mem">
            <summary>デバイスメモリ同期用共有メモリのリスト</summary>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataSync.ToString">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataSync.GetReaderMemory(System.Int32)">
            <summary>
            
            </summary>
            <param name="device_address"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataSync.GetWriterMemory(System.Int32)">
            <summary>
            
            </summary>
            <param name="device_address"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataSync.SetWriteDataReady(System.Int32)">
            <summary>
            書き込みデータの準備完了をセットします
            </summary>
            <param name="device_address"></param>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataSync.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataSync.#ctor(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataSync.AddDevice(System.String,BelicsClass.PLC.BL_PLCDataSync.DM.AccessType,System.Byte,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="type"></param>
            <param name="devicecode"></param>
            <param name="offset"></param>
            <param name="wordcount"></param>
            <param name="is_oneshot"></param>
            <param name="first_read"></param>
            <param name="timeout"></param>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataSync.AddDevice(System.String,BelicsClass.PLC.BL_PLCDataSync.DM.AccessType,System.Byte,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="type"></param>
            <param name="devicecode"></param>
            <param name="offset"></param>
            <param name="wordcount"></param>
            <param name="is_oneshot"></param>
            <param name="first_read"></param>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataSync.AddDevice(System.String,BelicsClass.PLC.BL_PLCDataSync.DM.AccessType,System.Byte,System.Int32,System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="type"></param>
            <param name="devicecode"></param>
            <param name="offset"></param>
            <param name="wordcount"></param>
            <param name="is_oneshot"></param>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataSync.AddDevice(System.String,BelicsClass.PLC.BL_PLCDataSync.DM.AccessType,System.Byte,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="type"></param>
            <param name="devicecode"></param>
            <param name="offset"></param>
            <param name="wordcount"></param>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataSync.RemoveDevice(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataSync.StartControl(System.String,BelicsClass.PLC.BL_PLC,System.String,System.Int32,System.Int32,System.Threading.ThreadPriority)">
            <summary>
            通信制御開始
            </summary>
            <param name="name">識別名</param>
            <param name="plc">PLC接続インスタンス</param>
            <param name="ipAddress">接続先IPアドレス</param>
            <param name="port">接続先ポート</param>
            <param name="sleep">ループ時のスリープ時間指定</param>
            <param name="priority">スレッド優先度</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataSync.Wait_Initialized">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataSync.StopControl">
            <summary>
            通信制御終了
            </summary>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataSync.DoControl(System.Object)">
            <summary>
            通信制御スレッド
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataSync.ToInt16(System.Int32)">
            <summary>
            デバイスアドレス同期用共有メモリから符号付き１６ビット値を取得します。
            </summary>
            <param name="device_address">デバイスアドレス</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataSync.ToInt16(System.Int32,System.Int16)">
            <summary>
            デバイスアドレス同期用共有メモリへ符号付き１６ビット値を設定します。
            </summary>
            <param name="device_address">デバイスアドレス</param>
            <param name="value">設定値</param>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataSync.ToInt32(System.Int32)">
            <summary>
            デバイスアドレス同期用共有メモリから符号付き３２ビット値を取得します。
            </summary>
            <param name="device_address">デバイスアドレス</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataSync.ToInt32(System.Int32,System.Int32)">
            <summary>
            デバイスアドレス同期用共有メモリへ符号付き３２ビット値を設定します。
            </summary>
            <param name="device_address">デバイスアドレス</param>
            <param name="value">設定値</param>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataSync.ToInt64(System.Int32)">
            <summary>
            デバイスアドレス同期用共有メモリから符号付き６４ビット値を取得します。
            </summary>
            <param name="device_address">デバイスアドレス</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataSync.ToInt64(System.Int32,System.Int64)">
            <summary>
            デバイスアドレス同期用共有メモリへ符号付き６４ビット値を設定します。
            </summary>
            <param name="device_address">デバイスアドレス</param>
            <param name="value">設定値</param>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataSync.ToUInt16(System.Int32)">
            <summary>
            デバイスアドレス同期用共有メモリから符号無し１６ビット値を取得します。
            </summary>
            <param name="device_address">デバイスアドレス</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataSync.ToUInt16(System.Int32,System.UInt16)">
            <summary>
            デバイスアドレス同期用共有メモリへ符号無し１６ビット値を設定します。
            </summary>
            <param name="device_address">デバイスアドレス</param>
            <param name="value">設定値</param>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataSync.ToUInt32(System.Int32)">
            <summary>
            デバイスアドレス同期用共有メモリから符号無し３２ビット値を取得します。
            </summary>
            <param name="device_address">デバイスアドレス</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataSync.ToUInt32(System.Int32,System.UInt32)">
            <summary>
            デバイスアドレス同期用共有メモリへ符号無し３２ビット値を設定します。
            </summary>
            <param name="device_address">デバイスアドレス</param>
            <param name="value">設定値</param>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataSync.ToUInt64(System.Int32)">
            <summary>
            デバイスアドレス同期用共有メモリから符号無し６４ビット値を取得します。
            </summary>
            <param name="device_address">デバイスアドレス</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataSync.ToUInt64(System.Int32,System.UInt64)">
            <summary>
            デバイスアドレス同期用共有メモリへ符号無し６４ビット値を設定します。
            </summary>
            <param name="device_address">デバイスアドレス</param>
            <param name="value">設定値</param>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataSync.ToString(System.Int32,System.Int32)">
            <summary>
            デバイスアドレス同期用共有メモリから文字列を取得します。
            </summary>
            <param name="device_address">デバイスアドレス</param>
            <param name="length">文字列長</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataSync.ToString(System.Int32,System.Int32,System.String)">
            <summary>
            デバイスアドレス同期用共有メモリへ文字列を設定します。
            </summary>
            <param name="device_address">デバイスアドレス</param>
            <param name="length">文字列長</param>
            <param name="value">設定文字列</param>
            <returns></returns>
        </member>
        <member name="E:BelicsClass.PLC.BL_PLCDataSync.EventConnected">
            <summary></summary>
        </member>
        <member name="E:BelicsClass.PLC.BL_PLCDataSync.EventDisconnected">
            <summary></summary>
        </member>
        <member name="E:BelicsClass.PLC.BL_PLCDataSync.EventSyncronized">
            <summary></summary>
        </member>
        <member name="E:BelicsClass.PLC.BL_PLCDataSync.EventError">
            <summary></summary>
        </member>
        <member name="E:BelicsClass.PLC.BL_PLCDataSync.EventReaded">
            <summary></summary>
        </member>
        <member name="E:BelicsClass.PLC.BL_PLCDataSync.EventWrited">
            <summary></summary>
        </member>
        <member name="P:BelicsClass.PLC.BL_PLCDataSync.Initialized">
            <summary></summary>
        </member>
        <member name="P:BelicsClass.PLC.BL_PLCDataSync.Connected">
            <summary>接続済みかどうかを取得します</summary>
        </member>
        <member name="P:BelicsClass.PLC.BL_PLCDataSync.IsExitRequest">
            <summary>終了要求を取得または設定します</summary>
        </member>
        <member name="P:BelicsClass.PLC.BL_PLCDataSync.IsConnected">
            <summary>接続中であるかどうかを取得します</summary>
        </member>
        <member name="T:BelicsClass.PLC.BL_PLCDataSync.Initializer">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_PLCDataSync.Initializer.Initialized">
            <summary>初期化済みフラグ</summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_PLCDataSync.Initializer.ExitRequest">
            <summary>終了要求フラグ</summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_PLCDataSync.Initializer.IsConnected">
            <summary>接続中フラグ</summary>
        </member>
        <member name="T:BelicsClass.PLC.BL_PLCDataSync.DM">
            <summary>データメモリの１範囲を同期するための共有メモリを管理します</summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_PLCDataSync.DM.Name">
            <summary>共有メモリ名</summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_PLCDataSync.DM.DeviceCode">
            <summary>デバイスコード</summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_PLCDataSync.DM.Offset">
            <summary>データメモリ開始アドレス</summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_PLCDataSync.DM.WordCount">
            <summary>データメモリワード数</summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_PLCDataSync.DM.Step">
            <summary>通信処理制御ステップ</summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_PLCDataSync.DM.RWType">
            <summary>アクセス種別</summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_PLCDataSync.DM.Connected">
            <summary>接続済みフラグ</summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_PLCDataSync.DM.IsOneshot">
            <summary>初回のみ実施する場合 true を設定</summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_PLCDataSync.DM.IsReadBeforeWrite">
            <summary>書き込み処理時に初回読み込みを行うかどうかを表すフラグ</summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_PLCDataSync.DM.IsReadBeforeWriteComplete">
            <summary>書き込み処理時に初回読み込みが終わったかどうかを表すフラグ</summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_PLCDataSync.DM.IsWriteDataReady">
            <summary>書き込み処理時に初回のメモリ更新が完了しているかどうかを表すフラグ</summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_PLCDataSync.DM.RefreshedInterval">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_PLCDataSync.DM.TimeoutMilliseconds">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_PLCDataSync.DM.swRefresh">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_PLCDataSync.DM.debugCounter">
            <summary>デバッグ用カウンター</summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_PLCDataSync.DM.memory">
            <summary>データメモリをバイト配列に展開するクラスのインスタンス</summary>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataSync.DM.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataSync.DM.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataSync.DM.#ctor(System.String,BelicsClass.PLC.BL_PLCDataSync.DM.AccessType,System.Byte,System.Int32,System.Int32)">
            <summary>
            コンストラクタ
            </summary>
            <param name="name"></param>
            <param name="type"></param>
            <param name="devicecode"></param>
            <param name="offset"></param>
            <param name="wordcount"></param>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataSync.DM.#ctor(System.String,BelicsClass.PLC.BL_PLCDataSync.DM.AccessType,System.Byte,System.Int32,System.Int32,System.Boolean)">
            <summary>
            コンストラクタ
            </summary>
            <param name="name"></param>
            <param name="type"></param>
            <param name="devicecode"></param>
            <param name="offset"></param>
            <param name="wordcount"></param>
            <param name="is_oneshot"></param>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataSync.DM.#ctor(System.String,BelicsClass.PLC.BL_PLCDataSync.DM.AccessType,System.Byte,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            コンストラクタ
            </summary>
            <param name="name"></param>
            <param name="type"></param>
            <param name="devicecode"></param>
            <param name="offset"></param>
            <param name="wordcount"></param>
            <param name="is_oneshot"></param>
            <param name="first_read"></param>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataSync.DM.#ctor(System.String,BelicsClass.PLC.BL_PLCDataSync.DM.AccessType,System.Byte,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="type"></param>
            <param name="devicecode"></param>
            <param name="offset"></param>
            <param name="wordcount"></param>
            <param name="is_oneshot"></param>
            <param name="first_read"></param>
            <param name="timeout"></param>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataSync.DM.#ctor(System.String)">
            <summary>
            コンストラクタ
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataSync.DM.#ctor(System.Int32)">
            <summary>
            コンストラクタ
            </summary>
            <param name="wordcount"></param>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataSync.DM.ToInt16(System.Int32)">
            <summary>
            
            </summary>
            <param name="device_address"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataSync.DM.ToInt16(System.Int32,System.Int16)">
            <summary>
            
            </summary>
            <param name="device_address"></param>
            <param name="value"></param>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataSync.DM.ToInt32(System.Int32)">
            <summary>
            
            </summary>
            <param name="device_address"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataSync.DM.ToInt32(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="device_address"></param>
            <param name="value"></param>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataSync.DM.ToInt64(System.Int32)">
            <summary>
            
            </summary>
            <param name="device_address"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataSync.DM.ToInt64(System.Int32,System.Int64)">
            <summary>
            
            </summary>
            <param name="device_address"></param>
            <param name="value"></param>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataSync.DM.ToUInt16(System.Int32)">
            <summary>
            
            </summary>
            <param name="device_address"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataSync.DM.ToUInt16(System.Int32,System.UInt16)">
            <summary>
            
            </summary>
            <param name="device_address"></param>
            <param name="value"></param>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataSync.DM.ToUInt16_BCD(System.Int32)">
            <summary>
            
            </summary>
            <param name="device_address"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataSync.DM.ToUInt16_BCD(System.Int32,System.UInt16)">
            <summary>
            
            </summary>
            <param name="device_address"></param>
            <param name="value"></param>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataSync.DM.ToUInt32(System.Int32)">
            <summary>
            
            </summary>
            <param name="device_address"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataSync.DM.ToUInt32(System.Int32,System.UInt32)">
            <summary>
            
            </summary>
            <param name="device_address"></param>
            <param name="value"></param>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataSync.DM.ToUInt64(System.Int32)">
            <summary>
            
            </summary>
            <param name="device_address"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataSync.DM.ToUInt64(System.Int32,System.UInt64)">
            <summary>
            
            </summary>
            <param name="device_address"></param>
            <param name="value"></param>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataSync.DM.ToString(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="device_address"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataSync.DM.ToString(System.Int32,System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="device_address"></param>
            <param name="length"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:BelicsClass.PLC.BL_PLCDataSync.DM.AccessType">
            <summary>アクセス種別</summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_PLCDataSync.DM.AccessType.READ">
            <summary>非同期読み込み</summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_PLCDataSync.DM.AccessType.WRITE">
            <summary>非同期書き込み</summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_PLCDataSync.DM.AccessType.READ_SYNC">
            <summary>同期読み込み</summary>
        </member>
        <member name="T:BelicsClass.PLC.BL_PLCDataSync.DM.DataMemory">
            <summary>
            DMの同期用メモリ
            </summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_PLCDataSync.DM.DataMemory.data">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_PLCDataSync.DM.DataMemory.data_temp">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataSync.DM.DataMemory.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLCDataSync.DM.DataMemory.#ctor(System.Int32)">
            <summary>
            
            </summary>
            <param name="size"></param>
        </member>
        <member name="T:BelicsClass.PLC.BL_PLCDataSync.Event_Handler_PlcConnectState">
            <summary>
            スレッド実行状態変化イベント定義
            </summary>
            <param name="sender"></param>
        </member>
        <member name="T:BelicsClass.PLC.BL_PLCDataSync.Event_Handler_PlcCommunicateState">
            <summary>
            スレッド実行状態変化イベント定義
            </summary>
            <param name="sender"></param>
            <param name="dm"></param>
        </member>
        <member name="T:BelicsClass.ObjectSync.BL_ObjectInformationStocker">
            <summary>
            フィールド情報を保持するクラス
            </summary>
        </member>
        <member name="F:BelicsClass.ObjectSync.BL_ObjectInformationStocker.dictStock">
            <summary>
            フィールド情報セットのコレクション
            </summary>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_ObjectInformationStocker.GetStock(System.String)">
            <summary>
            保持しているフィールド情報セットから１クラス分を取得します
            </summary>
            <param name="typename">クラス名称</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_ObjectInformationStocker.AddStock(System.String,BelicsClass.ObjectSync.BL_ObjectSync)">
            <summary>
            初期化済みフィールド情報をコレクションへ追加します
            </summary>
            <param name="typename"></param>
            <param name="obj"></param>
        </member>
        <member name="T:BelicsClass.ObjectSync.BL_ObjectInformationStocker.Stocker">
            <summary>
            １クラス分のフィールド情報のセットを保持するクラス
            </summary>
        </member>
        <member name="F:BelicsClass.ObjectSync.BL_ObjectInformationStocker.Stocker.dictField">
            <summary>
            フィールド情報コレクション（ベタ）
            </summary>
        </member>
        <member name="F:BelicsClass.ObjectSync.BL_ObjectInformationStocker.Stocker.dictClasses">
            <summary>
            フィールド情報コレクション（クラス・配列）
            </summary>
        </member>
        <member name="F:BelicsClass.ObjectSync.BL_ObjectInformationStocker.Stocker.Offset">
            <summary>
            最終オフセット
            </summary>
        </member>
        <member name="T:BelicsClass.GPIB.BL_GpibF">
            <summary>
            CONTEC GPIBボード GPIB/Fを制御します
            </summary>
        </member>
        <member name="M:BelicsClass.GPIB.BL_GpibF.ErrorReset">
            <summary>エラーをリセットします</summary>
        </member>
        <member name="M:BelicsClass.GPIB.BL_GpibF.Init(System.Int32[])">
            <summary>
            初期化します
            </summary>
            <param name="target_addrs"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.GPIB.BL_GpibF.Exit">
            <summary>
            終了します
            </summary>
        </member>
        <member name="M:BelicsClass.GPIB.BL_GpibF.Talk(System.String)">
            <summary>
            通信を行います（ブロードキャストメッセージ送信）
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.GPIB.BL_GpibF.TalkListen(System.Int32,System.String)">
            <summary>
            通信を行います（１：１メッセージ送受信）
            </summary>
            <param name="addr"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.GPIB.BL_GpibF.Listen(System.Int32)">
            <summary>
            通信します（受信）
            </summary>
            <param name="addr"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.GPIB.BL_GpibF.Polling(System.Int32)">
            <summary>
            ステータスをポーリングします
            </summary>
            <param name="talker"></param>
            <returns></returns>
        </member>
        <member name="P:BelicsClass.GPIB.BL_GpibF.Mode">
            <summary>
            モードを取得します
            </summary>
        </member>
        <member name="P:BelicsClass.GPIB.BL_GpibF.LastErrorCode">
            <summary>エラーコードを取得します。</summary>
        </member>
        <member name="P:BelicsClass.GPIB.BL_GpibF.LastErrorMessage">
            <summary>エラーメッセージを取得します。</summary>
        </member>
        <member name="P:BelicsClass.GPIB.BL_GpibF.Initialized">
            <summary>初期化済み状態を取得します。</summary>
        </member>
        <member name="T:BelicsClass.GPIB.BL_GpibF._Mode">
            <summary>
            通信モード
            </summary>
        </member>
        <member name="F:BelicsClass.GPIB.BL_GpibF._Mode.Master">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.GPIB.BL_GpibF._Mode.Slave">
            <summary></summary>
        </member>
        <member name="T:BelicsClass.GPIB.BL_GpibF._Status">
            <summary>
            ステータス
            </summary>
        </member>
        <member name="F:BelicsClass.GPIB.BL_GpibF._Status.SRQ">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.GPIB.BL_GpibF._Status.SRQ_EOI">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.GPIB.BL_GpibF._Status.NON">
            <summary></summary>
        </member>
        <member name="T:BelicsClass.Common.BL_Sound">
            <summary>
            サウンドを操作するクラス
            </summary>
        </member>
        <member name="M:BelicsClass.Common.BL_Sound.PlaySound(System.String)">
            <summary>
            サウンドを再生します。
            </summary>
            <param name="file_name">ファイル名を格納した文字列。</param>
        </member>
        <member name="M:BelicsClass.Common.BL_Sound.PlaySound(System.IO.Stream)">
            <summary>
            サウンドを再生します。
            </summary>
            <param name="stream">アセンブリ内の指定されたマニフェストリソース。</param>
        </member>
        <member name="M:BelicsClass.Common.BL_Sound.PlaySoundEndless(System.String)">
            <summary>
            サウンドを連続再生します。
            </summary>
            <param name="file_name">ファイル名を格納した文字列。</param>
        </member>
        <member name="M:BelicsClass.Common.BL_Sound.PlaySoundEndless(System.IO.Stream)">
            <summary>
            サウンドを連続再生します。
            </summary>
            <param name="stream">アセンブリ内の指定されたマニフェストリソース。</param>
        </member>
        <member name="M:BelicsClass.Common.BL_Sound.PlaySoundStop">
            <summary>
            サウンドを停止します。
            </summary>
        </member>
        <member name="M:BelicsClass.Common.BL_Sound.Beep">
            <summary>
            ビープ音を鳴らします。
            </summary>
        </member>
        <member name="M:BelicsClass.Common.BL_Sound.Beep(System.Int32,System.Int32)">
            <summary>
            ビープ音を鳴らします。
            </summary>
            <param name="frequency">ビープ音の周波数。 (ヘルツ単位)</param>
            <param name="duration">ビープ音の周期。 (ミリ秒)</param>
        </member>
        <member name="T:BelicsClass.UI.BL_Touchable_Form_Base">
            <summary>
            ジェスチャー機能付きメインフォーム
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_Touchable_Form_Base.#ctor(System.Boolean)">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_Touchable_Form_Base.OnLoad(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_Touchable_Form_Base.Dispose(System.Boolean)">
            <summary>
            解放
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:BelicsClass.UI.Report.BL_ReportData_Base">
            <summary>
            レポート用のデータ定義のための基本クラス
            </summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportData_Base.parameters">
            <summary>レポート１ページ分のデータを抽出するためのパラメータを保持します。</summary>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportData_Base.#ctor(BelicsClass.UI.Report.BL_ReportData_Base.BL_ReportPageParam)">
            <summary>
            コンストラクタ
            </summary>
            <param name="page_parameters">レポート１ページ分のデータを抽出するためのパラメータ</param>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportData_Base.Report_DataRead">
            <summary>
            データインスタンスへのデータ読み込み
            オーバーライドして、１ページ分のデータを読み込む処理を実装してください。
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportData_Base.Report_DataWrite">
            <summary>
            データインスタンスから書き込み
            オーバーライドして、１ページ分のデータを書き込む処理を実装してください。
            </summary>
            <returns></returns>
        </member>
        <member name="P:BelicsClass.UI.Report.BL_ReportData_Base.Parameters">
            <summary>
            レポート１ページ分のデータを抽出するためのパラメータを取得します。
            </summary>
        </member>
        <member name="T:BelicsClass.UI.Report.BL_ReportData_Base.BL_ReportPageParam">
            <summary>
            レポート１ページ分のデータを抽出するためのパラメータを管理する基本クラスです
            </summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportData_Base.BL_ReportPageParam.Report_Name">
            <summary>
            レポート名称
            </summary>
        </member>
        <member name="T:BelicsClass.ProcessManage.BL_ThreadCollector">
            <summary>
            スレッド処理の全コレクター
            </summary>
        </member>
        <member name="F:BelicsClass.ProcessManage.BL_ThreadCollector.m_GlobalThreadCollection">
            <summary>
            スレッド処理のインスタンス参照を保持します。
            </summary>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_ThreadCollector.Add(BelicsClass.ProcessManage.BL_ThreadController_Base)">
            <summary>
            スレッドをコレクションに追加します。
            </summary>
            <param name="controller"></param>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_ThreadCollector.Remove(BelicsClass.ProcessManage.BL_ThreadController_Base)">
            <summary>
            コレクションからスレッドを削除します。
            </summary>
            <param name="controller"></param>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_ThreadCollector.Get(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_ThreadCollector.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_ThreadCollector.StopControl_All">
            <summary>
            
            </summary>
        </member>
        <member name="P:BelicsClass.ProcessManage.BL_ThreadCollector.Count">
            <summary>
            コレクションのスレッド数を取得します。
            </summary>
        </member>
        <member name="T:BelicsClass.ObjectSync.BL_FileSyncNotify">
            <summary>
            クラスインスタンスをファイルでアクセスを行うクラス
            共有メモリの変化を検出し、イベントを発生させます
            共有メモリを利用しない場合、イベントは発生しません
            
            本クラスから派生して、共有アクセスを行いたいフィールドが定義されたクラスを設計してください
            フィールドは本クラスのInitializeメソッドコールによって解析され、バイト配列とオブジェクト間の相互変換が行われます
            null値はフィールドの初期値として使用できません
            stringフィールドは、必要文字数分の空白で初期化してください
            
            フィールドには「下記の組み込み型、および下記で構成されたクラス、配列」を使用することができます
            Boolean     4byte
            Int16       2byte
            Int32       4byte
            Int64       8byte
            UInt16      2byte
            UInt32      4byte
            UInt64      8byte
            Double      8byte
            Single      4byte
            Byte        1byte
            Char        1byte
            String      ??? byte
            
            </summary>
        </member>
        <member name="T:BelicsClass.ObjectSync.BL_FileSync">
            <summary>
            クラスインスタンスを共有メモリでアクセスを行うクラス
            
            本クラスから派生して、共有アクセスを行いたいフィールドが定義されたクラスを設計してください
            フィールドは本クラスのInitializeメソッドコールによって解析され、バイト配列とオブジェクト間の相互変換が行われます
            null値はフィールドの初期値として使用できません
            stringフィールドは、必要文字数分の空白で初期化してください
            
            フィールドには「下記の組み込み型、および下記で構成されたクラス、配列」を使用することができます
            Boolean     4byte
            Int16       2byte
            Int32       4byte
            Int64       8byte
            UInt16      2byte
            UInt32      4byte
            UInt64      8byte
            Double      8byte
            Single      4byte
            Byte        1byte
            Char        1byte
            String      ??? byte
            
            </summary>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FileSync.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FileSync.Initialize(System.String)">
            <summary>
            初期化します
            名前を指定することによってファイルが生成されます
            同一名の共有メモリが既存の場合は、共有メモリからデータが読み出されて初期化されます
            自インスタンスが所持するprivate以外のフィールドを解析して、必要数分のバイト配列を生成するための準備が行われます
            本メソッド実行後、フィールド名文字列によるデータ操作が可能となります
            </summary>
            <param name="file_name">ファイル名</param>
            <returns>初期化成功でtrueを返します</returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FileSync.Initialize(System.Object,System.String)">
            <summary>
            初期化します
            名前を指定することによってファイルが生成されます
            同一名のファイルが既存の場合は、ファイルからデータが読み出されて初期化されます
            自インスタンスが所持するprivate以外のフィールドを解析して、必要数分のバイト配列を生成するための準備が行われます
            本メソッド実行後、フィールド名文字列によるデータ操作が可能となります
            </summary>
            <param name="x">自インスタンスの初期化時に反映させる初期化オブジェクト</param>
            <param name="file_name">共有メモリの名称</param>
            <returns>初期化成功でtrueを返します</returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FileSync.Dispose">
            <summary>
            自インスタンスが保持している情報を破棄します
            </summary>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FileSync.IsExist(System.String)">
            <summary>
            指定された名称のファイルが存在するかをチェックします
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FileSync.GetMemory(System.String,System.Boolean)">
            <summary>
            指定されたフィールドのデータをファイルから読み込んでバイト配列を取得します
            ロック有無を指定できます
            </summary>
            <param name="field_name">指定フィールド</param>
            <param name="lockFlag">ロック有無</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FileSync.ReadMemory(System.String,System.Boolean)">
            <summary>
            ファイルから指定フィールドへデータを読み込みます
            ロック有無を指定できます
            </summary>
            <param name="field_name">指定フィールド</param>
            <param name="lockFlag">ロック有無</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FileSync.WriteMemory(System.String,System.Boolean)">
            <summary>
            自インスタンスの指定フィールドデータをファイルへ書き込みます
            ロック有無を指定できます
            </summary>
            <param name="field_name">指定フィールド</param>
            <param name="lockFlag">ロック有無</param>
            <returns>正常に書き込みできたらtrueを返します</returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FileSync.Lock">
            <summary>
            ファイルを意図的にロックします
            </summary>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FileSync.Unlock">
            <summary>
            ファイルを意図的にアンロックします
            </summary>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FileSync.IsModified(System.String)">
            <summary>
            ファイル内のデータと自インスタンスデータが不一致かどうかをチェックします
            不一致を検出した最初のフィールド名を取得できます
            </summary>
            <param name="field_name">指定した場合、指定フィールドのみ不一致チェックします。不一致が検出されたフィールド名で更新されます</param>
            <returns>不一致の場合trueを返します</returns>
        </member>
        <member name="P:BelicsClass.ObjectSync.BL_FileSync.FileName">
            <summary>
            共有メモリ名称を取得します
            </summary>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FileSyncNotify.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FileSyncNotify.#ctor(System.Windows.Forms.Form)">
            <summary>
            コンストラクタ
            </summary>
            <param name="owner">フォームにアクセスする必要がある場合、フォームへの参照を指定してください</param>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FileSyncNotify.Initialize``1(System.String)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="sharemem_name"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FileSyncNotify.Initialize``1(System.Object,System.String)">
            <summary>
            初期化します
            名前を指定することによって共有メモリが生成されます
            同一名の共有メモリが既存の場合は、共有メモリからデータが読み出されて初期化されます
            自オブジェクトが所持するprivate以外のフィールドを解析して、必要数分のバイト配列を生成するための準備が行われます
            本メソッド実行後、フィールド名文字列によるデータ操作が可能となります
            
            本メソッド実行前に、EnableNotifyをtrueに設定することによってイベントを発生させます
            共有メモリの監視インターバルは200msです。
            
            </summary>
            <param name="x">自インスタンスの初期化時に反映させる初期化オブジェクト</param>
            <param name="sharemem_name">共有メモリの名称</param>
            <returns>初期化成功でtrueを返します</returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FileSyncNotify.Initialize``1(System.Int32,System.Object,System.String)">
            <summary>
            初期化します
            名前を指定することによって共有メモリが生成されます
            同一名の共有メモリが既存の場合は、共有メモリからデータが読み出されて初期化されます
            自オブジェクトが所持するprivate以外のフィールドを解析して、必要数分のバイト配列を生成するための準備が行われます
            本メソッド実行後、フィールド名文字列によるデータ操作が可能となります
            
            本メソッド実行前に、EnableNotifyをtrueに設定することによってイベントが発生するようになります
            共有メモリの監視インターバルを指定することができます
            
            </summary>
            <param name="sleep_milliseconds">共有メモリ監視インターバル</param>
            <param name="x">自インスタンスの初期化時に反映させる初期化オブジェクト</param>
            <param name="sharemem_name">共有メモリの名称</param>
            <returns>初期化成功でtrueを返します</returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_FileSyncNotify.Dispose">
            <summary>
            自インスタンスの破棄
            監視スレッドを停止します
            </summary>
        </member>
        <member name="P:BelicsClass.ObjectSync.BL_FileSyncNotify.EnableNotify">
            <summary>
            イベントの有効状態を取得します
            </summary>
        </member>
        <member name="E:BelicsClass.ObjectSync.BL_FileSyncNotify.EventModified">
            <summary>
            共有メモリ変化イベント
            </summary>
        </member>
        <member name="T:BelicsClass.ObjectSync.BL_FileSyncNotify.Event_Handler_Modified">
            <summary>
            共有メモリ変化イベントデリゲート
            </summary>
            <param name="sender">イベント発生源</param>
            <param name="field_names">変化フィールド名</param>
        </member>
        <member name="T:BelicsClass.Network.BL_TcpP2PServer">
            <summary>
            TcpP2PServer の概要の説明です。
            </summary>
        </member>
        <member name="M:BelicsClass.Network.BL_TcpP2PServer.#ctor(System.Net.IPAddress,System.Int32,System.Int32,System.Int32)">
            <summary>
            コンストラクタです。
            </summary>
            <param name="localIP">自分のIPアドレスを指定します。特に指定が無い場合はIPAddress.Anyを指定してください。</param>
            <param name="localPort">自分のポート番号を指定します。</param>
            <param name="sendBufferCount">送信データのバッファ数を指定します。連続送信回数を考慮して設定してください。</param>
            <param name="receiveBufferCount">受信データのバッファ数を指定します。連続受信回数を考慮して設定してください。</param>
        </member>
        <member name="M:BelicsClass.Network.BL_TcpP2PServer.#ctor(System.Net.IPAddress,System.Int32,System.Int32,System.Int32,BelicsClass.Network.BL_TcpP2P.BL_FormatType)">
            <summary>
            コンストラクタです。
            </summary>
            <param name="localIP">自分のIPアドレスを指定します。特に指定が無い場合はIPAddress.Anyを指定してください。</param>
            <param name="localPort">自分のポート番号を指定します。</param>
            <param name="sendBufferCount">送信データのバッファ数を指定します。連続送信回数を考慮して設定してください。</param>
            <param name="receiveBufferCount">受信データのバッファ数を指定します。連続受信回数を考慮して設定してください。</param>
            <param name="formatType">フォーマット種別を指定してください。</param>
        </member>
        <member name="F:BelicsClass.Network.BL_TcpP2PServer.m_ListenerEndPoint">
            <summary>
            接続待機用のIPエンドポイントを保持します
            </summary>
        </member>
        <member name="M:BelicsClass.Network.BL_TcpP2PServer.Link">
            <summary>
            リンクする
            </summary>
        </member>
        <member name="E:BelicsClass.Network.BL_TcpP2PServer.EventError">
            <summary>
            通信エラーが発生した際に発生するイベントです
            </summary>
        </member>
        <member name="P:BelicsClass.Network.BL_TcpP2PServer.ListenerEndPoint">
            <summary>ローカルエンドポイント文字列を取得します。</summary>
        </member>
        <member name="P:BelicsClass.Network.BL_TcpP2PServer.ListeningIPAddress">
            <summary>
            接続待機用のIPアドレスを取得します
            </summary>
        </member>
        <member name="P:BelicsClass.Network.BL_TcpP2PServer.ListeningPortNo">
            <summary>
            接続待機用のポートNoを取得します
            </summary>
        </member>
        <member name="P:BelicsClass.Network.BL_TcpP2PServer.RemoteLock">
            <summary>
            リモートロック状態を取得または設定します
            リモートロック状態の立ち上がりでストップウォッチを起動します
            </summary>
        </member>
        <member name="T:BelicsClass.Common.BL_BitOperator">
            <summary>
            ビット操作クラス
            </summary>
        </member>
        <member name="M:BelicsClass.Common.BL_BitOperator.#ctor">
            <summary>
            コンストラクタ
            現在値は０で初期化されます
            </summary>
        </member>
        <member name="M:BelicsClass.Common.BL_BitOperator.#ctor(System.UInt16)">
            <summary>
            コンストラクタ
            指定した現在値で初期化されます
            </summary>
            <param name="value">現在値</param>
        </member>
        <member name="M:BelicsClass.Common.BL_BitOperator.ToString">
            <summary>
            上位→下位でビット状態を表す文字列を生成します
            </summary>
            <returns></returns>
        </member>
        <member name="P:BelicsClass.Common.BL_BitOperator.Value">
            <summary>
            現在値を取得または設定します
            </summary>
        </member>
        <member name="P:BelicsClass.Common.BL_BitOperator.Item(System.Int32)">
            <summary>
            インデクサ
            指定されたビット位置のON/OFF状態をboolで取得します
            指定できるビット位置は0～15までの16ビットです
            不正なビット位置が指定されると例外が発生します
            </summary>
            <param name="index">ビット位置</param>
            <returns>ON/OFF=true/falseを返します</returns>
        </member>
        <member name="T:BelicsClass.UI.Report.BL_ReportTextBox">
            <summary>
            レポート用の編集テキストクラス
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportTextBox.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportTextBox.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportTextBox.Initialize(System.Windows.Forms.Control)">
            <summary>
            初期化処理
            引数は、BL_ReportLabelからの派生クラスオブジェクトでなければなりません
            </summary>
            <param name="label">変更内容を反映させる対象となるラベルコントロール</param>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportTextBox.UpdateLabel">
            <summary>
            編集内容を確定して、ラベルコントロールを更新します
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportTextBox.OnTextChanged(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:BelicsClass.PLC.MELSEC">
            <summary>
            PLC通信クラス（三菱用）
            </summary>
        </member>
        <member name="T:BelicsClass.PLC.BL_PLC">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_PLC.Error_code">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_PLC.Error_message">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_PLC.Device">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_PLC.Command">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_PLC.Com">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_PLC.Socket">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_PLC.SocketUDP">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_PLC.RemoteEP">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_PLC.ReceiveBytes">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLC.Connect(BelicsClass.Rs232c.BL_Rs232c.PortNo,BelicsClass.Rs232c.BL_Rs232c.BaudRate,BelicsClass.Rs232c.BL_Rs232c.ByteSize,BelicsClass.Rs232c.BL_Rs232c.Parity,BelicsClass.Rs232c.BL_Rs232c.StopBits)">
            <summary>
            
            </summary>
            <param name="portNo"></param>
            <param name="baudRate"></param>
            <param name="byteSize"></param>
            <param name="parity"></param>
            <param name="stopBits"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLC.Connect(BelicsClass.PLC.BL_PLC.CommandType,BelicsClass.Rs232c.BL_Rs232c.PortNo,BelicsClass.Rs232c.BL_Rs232c.BaudRate,BelicsClass.Rs232c.BL_Rs232c.ByteSize,BelicsClass.Rs232c.BL_Rs232c.Parity,BelicsClass.Rs232c.BL_Rs232c.StopBits)">
            <summary>
            
            </summary>
            <param name="commandType"></param>
            <param name="portNo"></param>
            <param name="baudRate"></param>
            <param name="byteSize"></param>
            <param name="parity"></param>
            <param name="stopBits"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLC.Connect(System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="ip_address"></param>
            <param name="port"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLC.Connect(System.String,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="ip_address"></param>
            <param name="port"></param>
            <param name="local_port"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLC.Disconnect">
            <summary>
            
            </summary>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLC.ReadCommand(System.Byte,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="deviceCode"></param>
            <param name="offset"></param>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLC.ReadCommandAck(System.Int32@)">
            <summary>
            
            </summary>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLC.ReadCommandAck(System.Int32)">
            <summary>
            
            </summary>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLC.WriteCommand(System.Byte,System.Int32,System.Int32,System.Byte[])">
            <summary>
            
            </summary>
            <param name="deviceCode"></param>
            <param name="offset"></param>
            <param name="point"></param>
            <param name="writeData"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLC.WriteCommandAck(System.Int32@)">
            <summary>
            
            </summary>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLC.WriteCommandAck">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLC.errors">
            <summary>
            
            </summary>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLC.errors(System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="error_code"></param>
            <param name="comment"></param>
        </member>
        <member name="P:BelicsClass.PLC.BL_PLC.IsConnected">
            <summary>
            ソケットの接続状態を取得します。接続している場合は true。それ以外の場合は false。
            </summary>
        </member>
        <member name="P:BelicsClass.PLC.BL_PLC.ErrorCode">
            <summary>
            異常コードを取得します。
            </summary>
        </member>
        <member name="P:BelicsClass.PLC.BL_PLC.ErrorMessage">
            <summary>
            異常内容を取得します。
            </summary>
        </member>
        <member name="T:BelicsClass.PLC.BL_PLC.PLC_DATA">
            <summary>
            PLCデータ変換クラス
            </summary>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLC.PLC_DATA.Int16ToBytes(System.Int16[])">
            <summary>
            UInt16配列をバイト配列に変換します。（リトルエンディアン）
            </summary>
            <param name="sourceData">変換元のデータが格納されている UInt16配列。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLC.PLC_DATA.BytesToInt16(System.Byte[])">
            <summary>
            バイト配列を Int16配列に変換します。
            </summary>
            <param name="sourceData">変換元のデータが格納されているバイト配列。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLC.PLC_DATA.UInt16ToBytes(System.UInt16)">
            <summary>
            UInt16をバイト配列に変換します。（リトルエンディアン）
            </summary>
            <param name="sourceData">変換元のデータが格納されている UInt16。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLC.PLC_DATA.UInt16ToBytes(System.UInt16,System.Byte[]@,System.Int32)">
            <summary>
            UInt16をバイト配列に変換します。（リトルエンディアン）
            </summary>
            <param name="sourceData">変換元のデータが格納されている UInt16。</param>
            <param name="data">変換したデータを格納するバイト配列。</param>
            <param name="offset">変換したデータを格納するバイト配列のオフセット値。</param>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLC.PLC_DATA.UInt16ToBytes(System.UInt16[])">
            <summary>
            UInt16配列をバイト配列に変換します。（リトルエンディアン）
            </summary>
            <param name="sourceData">変換元のデータが格納されている UInt16配列。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLC.PLC_DATA.BytesToUInt16(System.Byte[])">
            <summary>
            バイト配列を UInt16配列に変換します。（リトルエンディアン）
            </summary>
            <param name="sourceData">変換元のデータが格納されているバイト配列。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLC.PLC_DATA.BytesToUInt16(System.Byte[],System.Int32)">
            <summary>
            バイト配列を UInt16に変換します。（リトルエンディアン）
            </summary>
            <param name="sourceData">変換元のデータが格納されているバイト配列。</param>
            <param name="offset_address">変換元のオフセット</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLC.PLC_DATA.UInt32ToBytes(System.UInt32)">
            <summary>
            UInt32をバイト配列に変換します。（リトルエンディアン）
            </summary>
            <param name="sourceData">変換元のデータが格納されている UInt32。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLC.PLC_DATA.UInt32ToBytes(System.UInt32,System.Byte[]@,System.Int32)">
            <summary>
            UInt32をバイト配列に変換します。（リトルエンディアン）
            </summary>
            <param name="sourceData">変換元のデータが格納されている UInt32。</param>
            <param name="data">変換したデータを格納するバイト配列。</param>
            <param name="offset">変換したデータを格納するバイト配列のオフセット値。</param>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLC.PLC_DATA.BytesToUInt32(System.Byte[])">
            <summary>
            バイト配列を UInt32に変換します。（リトルエンディアン）
            </summary>
            <param name="sourceData">変換元のデータが格納されているバイト配列。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLC.PLC_DATA.BytesToUInt32(System.Byte[],System.Int32)">
            <summary>
            バイト配列を UInt32に変換します。（リトルエンディアン）
            </summary>
            <param name="sourceData">変換元のデータが格納されているバイト配列。</param>
            <param name="offset">変換元のデータが格納されているバイト配列のオフセット値。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLC.PLC_DATA.SingleToBytes(System.Single)">
            <summary>
            floatをバイト配列に変換（リトルエンディアン）
            </summary>
            <param name="sourceData"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLC.PLC_DATA.SingleToBytes(System.Single[])">
            <summary>
            float配列をバイト配列に変換（リトルエンディアン）
            </summary>
            <param name="sourceData"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLC.PLC_DATA.DoubleToBytes(System.Double)">
            <summary>
            Doubleをバイト配列に変換（リトルエンディアン）
            </summary>
            <param name="sourceData"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLC.PLC_DATA.DoubleToBytes(System.Double[])">
            <summary>
            Double配列をバイト配列に変換（リトルエンディアン）
            </summary>
            <param name="sourceData"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLC.PLC_DATA.BytesToSingle(System.Byte[])">
            <summary>
            バイト配列をFloat配列に変換（リトルエンディアン）
            </summary>
            <param name="sourceData"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLC.PLC_DATA.BytesToSingle(System.Byte[],System.Int32)">
            <summary>
            バイト配列をFloatに変換（リトルエンディアン）
            </summary>
            <param name="sourceData"></param>
            <param name="offset"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLC.PLC_DATA.BytesToDouble(System.Byte[])">
            <summary>
            バイト配列をDouble配列に変換（リトルエンディアン）
            </summary>
            <param name="sourceData"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLC.PLC_DATA.BytesToDouble(System.Byte[],System.Int32)">
            <summary>
            バイト配列をDoubleに変換（リトルエンディアン）
            </summary>
            <param name="sourceData"></param>
            <param name="offset"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLC.PLC_DATA.UInt32ToBytesBK(System.UInt32)">
            <summary>
            UInt32をバイト配列に変換します。（ビッグエンディアン）
            </summary>
            <param name="sourceData">変換元のデータが格納されている UInt32。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLC.PLC_DATA.UInt32ToBytesBK(System.UInt32,System.Byte[]@,System.Int32)">
            <summary>
            UInt32をバイト配列に変換します。（野口）
            </summary>
            <param name="sourceData">変換元のデータが格納されている UInt32。</param>
            <param name="data">変換したデータを格納するバイト配列。</param>
            <param name="offset">変換したデータを格納するバイト配列のオフセット値。</param>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLC.PLC_DATA.BytesToUInt32BK(System.Byte[])">
            <summary>
            バイト配列を UInt32に変換します。（野口）
            </summary>
            <param name="sourceData">変換元のデータが格納されているバイト配列。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLC.PLC_DATA.BytesToUInt32BK(System.Byte[],System.Int32)">
            <summary>
            バイト配列を UInt32に変換します。（野口）
            </summary>
            <param name="sourceData">変換元のデータが格納されているバイト配列。</param>
            <param name="offset">変換元のデータが格納されているバイト配列のオフセット値。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLC.PLC_DATA.UInt16ToBytesB(System.UInt16)">
            <summary>
            UInt16をバイト配列に変換します。（ビッグエンディアン）
            </summary>
            <param name="sourceData">変換元のデータが格納されている UInt16。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLC.PLC_DATA.UInt16ToBytesB(System.UInt16,System.Byte[]@,System.Int32)">
            <summary>
            UInt16をバイト配列に変換します。（ビッグエンディアン）
            </summary>
            <param name="sourceData">変換元のデータが格納されている UInt16。</param>
            <param name="data">変換したデータを格納するバイト配列。</param>
            <param name="offset">変換したデータを格納するバイト配列のオフセット値。</param>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLC.PLC_DATA.UInt16ToBytesB(System.UInt16[])">
            <summary>
            UInt16配列をバイト配列に変換します。（ビッグエンディアン）
            </summary>
            <param name="sourceData">変換元のデータが格納されている UInt16配列。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLC.PLC_DATA.BytesToUInt16B(System.Byte[])">
            <summary>
            バイト配列を UInt16配列に変換します。（ビッグエンディアン）
            </summary>
            <param name="sourceData">変換元のデータが格納されているバイト配列。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLC.PLC_DATA.BytesToUInt16B(System.Byte[],System.Int32)">
            <summary>
            バイト配列を UInt16に変換します。（ビッグエンディアン）
            </summary>
            <param name="sourceData"></param>
            <param name="offset_address"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLC.PLC_DATA.UInt32ToBytesB(System.UInt32)">
            <summary>
            UInt32をバイト配列に変換します。（ビッグエンディアン）
            </summary>
            <param name="sourceData">変換元のデータが格納されている UInt32。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLC.PLC_DATA.UInt32ToBytesB(System.UInt32,System.Byte[]@,System.Int32)">
            <summary>
            UInt32をバイト配列に変換します。（ビッグエンディアン）
            </summary>
            <param name="sourceData">変換元のデータが格納されている UInt32。</param>
            <param name="data">変換したデータを格納するバイト配列。</param>
            <param name="offset">変換したデータを格納するバイト配列のオフセット値。</param>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLC.PLC_DATA.BytesToUInt32B(System.Byte[])">
            <summary>
            バイト配列を UInt32に変換します。（ビッグエンディアン）
            </summary>
            <param name="sourceData">変換元のデータが格納されているバイト配列。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLC.PLC_DATA.BytesToUInt32B(System.Byte[],System.Int32)">
            <summary>
            バイト配列を UInt32に変換します。（ビッグエンディアン）
            </summary>
            <param name="sourceData">変換元のデータが格納されているバイト配列。</param>
            <param name="offset">変換元のデータが格納されているバイト配列のオフセット値。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLC.PLC_DATA.SingleToBytesB(System.Single)">
            <summary>
            floatをバイト配列に変換（ビッグエンディアン）
            </summary>
            <param name="sourceData"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLC.PLC_DATA.SingleToBytesB(System.Single[])">
            <summary>
            float配列をバイト配列に変換（ビッグエンディアン）
            </summary>
            <param name="sourceData"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLC.PLC_DATA.DoubleToBytesB(System.Double)">
            <summary>
            Doubleをバイト配列に変換（ビッグエンディアン）
            </summary>
            <param name="sourceData"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLC.PLC_DATA.DoubleToBytesB(System.Double[])">
            <summary>
            Double配列をバイト配列に変換（ビッグエンディアン）
            </summary>
            <param name="sourceData"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLC.PLC_DATA.BytesToSingleB(System.Byte[])">
            <summary>
            バイト配列をFloat配列に変換（ビッグエンディアン）
            </summary>
            <param name="sourceData"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLC.PLC_DATA.BytesToSingleB(System.Byte[],System.Int32)">
            <summary>
            バイト配列をFloatに変換（ビッグエンディアン）
            </summary>
            <param name="sourceData"></param>
            <param name="offset"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLC.PLC_DATA.BytesToDoubleB(System.Byte[])">
            <summary>
            バイト配列をDouble配列に変換（ビッグエンディアン）
            </summary>
            <param name="sourceData"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLC.PLC_DATA.BytesToDoubleB(System.Byte[],System.Int32)">
            <summary>
            バイト配列をDoubleに変換（ビッグエンディアン）
            </summary>
            <param name="sourceData"></param>
            <param name="offset"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLC.PLC_DATA.BytesToHexStringBytes(System.Byte[])">
            <summary>
            バイト配列を16進表記文字バイト配列に変換します。
            </summary>
            <param name="bytesData">変換するバイト配列。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_PLC.PLC_DATA.HexStringBytesToBytes(System.Byte[])">
            <summary>
            16進表記文字バイト配列をバイト配列に変換します。
            </summary>
            <param name="hexStringBytesData">変換する16進表記のバイト配列。</param>
            <returns></returns>
        </member>
        <member name="T:BelicsClass.PLC.BL_PLC.CommandType">
            <summary>
            コマンドタイプ
            </summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_PLC.CommandType.MELSEC_A_CPU">
            <summary>ACPU共通コマンド</summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_PLC.CommandType.MELSEC_AnA_CPU">
            <summary>AnA/AnAUCPU共通コマンド</summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_PLC.CommandType.OMRON_FINS">
            <summary>OMRON FINS</summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_PLC.CommandType.OMRON_C">
            <summary>OMRON Cコマンド</summary>
        </member>
        <member name="T:BelicsClass.PLC.BL_PLC.DeviceType">
            <summary>
            デバイスタイプ
            </summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_PLC.DeviceType.NONE">
            <summary>未接続</summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_PLC.DeviceType.RS_232C">
            <summary>RS-232C</summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_PLC.DeviceType.LAN">
            <summary>TCP</summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_PLC.DeviceType.LAN_UDP">
            <summary>UDP</summary>
        </member>
        <member name="M:BelicsClass.PLC.MELSEC.Connect(BelicsClass.PLC.BL_PLC.CommandType,BelicsClass.Rs232c.BL_Rs232c.PortNo,BelicsClass.Rs232c.BL_Rs232c.BaudRate,BelicsClass.Rs232c.BL_Rs232c.ByteSize,BelicsClass.Rs232c.BL_Rs232c.Parity,BelicsClass.Rs232c.BL_Rs232c.StopBits)">
            <summary>
            PLCと接続します。
            </summary>
            <param name="commandType">PLCのコマンドタイプ。</param>
            <param name="portNo">PLCと接続するシリアルポート№。</param>
            <param name="baudRate">PLCと接続するシリアルポートのボーレート。</param>
            <param name="byteSize">PLCと接続するシリアルポートのデータビット長。</param>
            <param name="parity">PLCと接続するシリアルポートのパリティビット。</param>
            <param name="stopBits">PLCと接続するシリアルポートのストップビット。</param>
            <returns>true:正常,false:異常</returns>
        </member>
        <member name="M:BelicsClass.PLC.MELSEC.Connect(System.String,System.Int32)">
            <summary>
            PLCと接続します。
            </summary>
            <param name="ip_address">接続するPLCのIPアドレス。</param>
            <param name="port">接続するPLCのポート№。</param>
            <returns>true:正常,false:異常</returns>
        </member>
        <member name="M:BelicsClass.PLC.MELSEC.Connect(System.String,System.Int32,System.Int32)">
            <summary>
            PLCと接続します。
            </summary>
            <param name="ip_address">接続するPLCのIPアドレス。(UDP)</param>
            <param name="port">接続するPLCのポート№。(UDP)</param>
            <param name="local_port">接続するポート№。(UDP)</param>
            <returns>true:正常,false:異常</returns>
        </member>
        <member name="M:BelicsClass.PLC.MELSEC.Disconnect">
            <summary>
            PLCとの接続を解除します。
            </summary>
        </member>
        <member name="M:BelicsClass.PLC.MELSEC.ReadCommand(System.Byte,System.Int32,System.Int32)">
            <summary>
            PLCに一括読出しコマンドを送信します。
            </summary>
            <param name="deviceCode">読み込むデバイスのデバイスコード。</param>
            <param name="offset">読み込むデバイスのオフセット値。</param>
            <param name="point">読み込むデバイスの点数。</param>
            <returns>true:正常,false:異常</returns>
        </member>
        <member name="M:BelicsClass.PLC.MELSEC.ReadCommandAck(System.Int32@)">
            <summary>
            PLCから一括読出しコマンドの返答を受信します。
            </summary>
            <param name="length">読み込んだデバイスのバイト数。</param>
            <returns>受信したデータのバイト配列</returns>
        </member>
        <member name="M:BelicsClass.PLC.MELSEC.ReadCommandAck(System.Int32)">
            <summary>
            PLCから一括読出しコマンドの返答を受信します。
            </summary>
            <param name="length">読み込んむデバイスのバイト数。</param>
            <returns>受信したデータのバイト配列</returns>
        </member>
        <member name="M:BelicsClass.PLC.MELSEC.WriteCommand(System.Byte,System.Int32,System.Int32,System.Byte[])">
            <summary>
            PLCに一括書込みコマンドを送信します。
            </summary>
            <param name="deviceCode">書き込むデバイスのデバイスコード。</param>
            <param name="offset">書き込むデバイスのオフセット値。</param>
            <param name="point">書き込むデバイスの点数。</param>
            <param name="writeData">書き込むデバイスのデータが格納されているバイト配列。</param>
            <returns>true:正常,false:異常</returns>
        </member>
        <member name="M:BelicsClass.PLC.MELSEC.WriteCommandAck(System.Int32@)">
            <summary>
            PLCから一括書込みコマンドの返答を受信します。
            </summary>
            <param name="length">読み込んだ返答データのバイト数。</param>
            <returns>受信したデータのバイト配列</returns>
        </member>
        <member name="M:BelicsClass.PLC.MELSEC.WriteCommandAck">
            <summary>
            PLCから一括書込みコマンドの返答を受信します。
            </summary>
            <returns>受信したデータのバイト配列</returns>
        </member>
        <member name="M:BelicsClass.PLC.MELSEC.is_bit_device(System.Byte)">
            <summary>
            ビットデバイスのチェック
            </summary>
            <param name="deviceCode">デバイスコード</param>
            <returns>true:ビットデバイス,false:ワードデバイス</returns>
        </member>
        <member name="M:BelicsClass.PLC.MELSEC.is_hex_address(System.Byte)">
            <summary>
            16進表現のチェック
            </summary>
            <param name="deviceCode">デバイスコード</param>
            <returns>true:16進表現,false:10進表現</returns>
        </member>
        <member name="P:BelicsClass.PLC.MELSEC.IsConnected">
            <summary>
            ソケットの接続状態を取得します。接続している場合は true。それ以外の場合は false。
            </summary>
        </member>
        <member name="T:BelicsClass.PLC.MELSECez">
            <summary>
            PLC通信クラス 簡易版（三菱用）
            </summary>
        </member>
        <member name="M:BelicsClass.PLC.MELSECez.Connect(System.String,System.Int32,System.Byte,System.Int32,System.Int32,System.Byte,System.Int32,System.Int32)">
            <summary>
            PLCと接続します。
            </summary>
            <param name="ipAddress">接続するPLCのIPアドレス。</param>
            <param name="port">接続するPLCのポート№。</param>
            <param name="readDeviceCode">読み込むデバイスのデバイスコード。</param>
            <param name="readOffset">読み込むデバイスのオフセット値。</param>
            <param name="readPoint">読み込むデバイスの点数。</param>
            <param name="writeDeviceCode">書き込むデバイスのデバイスコード。</param>
            <param name="writeOffset">書き込むデバイスのオフセット値。</param>
            <param name="writePoint">書き込むデバイスのデバイスコード。</param>
            <returns>true:正常,false:異常</returns>
        </member>
        <member name="M:BelicsClass.PLC.MELSECez.Disconnect">
            <summary>
            PLCとの接続を解除します。
            </summary>
        </member>
        <member name="M:BelicsClass.PLC.MELSECez.Call(System.Byte[]@,System.Byte[])">
            <summary>
            PLCと通信します。
            </summary>
            <param name="readData">読み込んだデバイスのデータを格納するバイト配列。</param>
            <param name="writeData">書き込むデバイスのデータが格納されているバイト配列。</param>
            <returns>true:正常,false:異常</returns>
        </member>
        <member name="P:BelicsClass.PLC.MELSECez.ResponseCounter">
            <summary>
            応答カウンター
            </summary>
        </member>
        <member name="T:BelicsClass.PLC.MELSEC_F">
            <summary>
            PLC通信クラス（三菱用[Ｆシリーズ]）
            </summary>
        </member>
        <member name="M:BelicsClass.PLC.MELSEC_F.Connect(System.String,System.Int32)">
            <summary>
            PLCと接続します。
            </summary>
            <param name="ip_address">接続するPLCのIPアドレス。</param>
            <param name="port">接続するPLCのポート№。</param>
            <returns>true:正常,false:異常</returns>
        </member>
        <member name="M:BelicsClass.PLC.MELSEC_F.Disconnect">
            <summary>
            PLCとの接続を解除します。
            </summary>
        </member>
        <member name="M:BelicsClass.PLC.MELSEC_F.ReadCommand(System.Byte,System.Int32,System.Int32)">
            <summary>
            PLCに一括読出しコマンドを送信します。
            </summary>
            <param name="deviceCode">読み込むデバイスのデバイスコード。</param>
            <param name="offset">読み込むデバイスのオフセット値。</param>
            <param name="point">読み込むデバイスの点数。</param>
            <returns>true:正常,false:異常</returns>
        </member>
        <member name="M:BelicsClass.PLC.MELSEC_F.ReadCommandAck(System.Int32)">
            <summary>
            PLCから一括読出しコマンドの返答を受信します。
            </summary>
            <param name="length">読み込んむデバイスのバイト数。</param>
            <returns>受信したデータのバイト配列</returns>
        </member>
        <member name="M:BelicsClass.PLC.MELSEC_F.WriteCommand(System.Byte,System.Int32,System.Int32,System.Byte[])">
            <summary>
            PLCに一括書込みコマンドを送信します。
            </summary>
            <param name="deviceCode">書き込むデバイスのデバイスコード。</param>
            <param name="offset">書き込むデバイスのオフセット値。</param>
            <param name="point">書き込むデバイスの点数。</param>
            <param name="writeData">書き込むデバイスのデータが格納されているバイト配列。</param>
            <returns>true:正常,false:異常</returns>
        </member>
        <member name="M:BelicsClass.PLC.MELSEC_F.WriteCommandAck">
            <summary>
            PLCから一括書込みコマンドの返答を受信します。
            </summary>
            <returns>受信したデータのバイト配列</returns>
        </member>
        <member name="P:BelicsClass.PLC.MELSEC_F.IsConnected">
            <summary>
            ソケットの接続状態を取得します。接続している場合は true。それ以外の場合は false。
            </summary>
        </member>
        <member name="T:BelicsClass.PLC.MELSEC_F.DeviceCode">
            <summary>
            デバイスコード
            </summary>
        </member>
        <member name="F:BelicsClass.PLC.MELSEC_F.DeviceCode.D">
            <summary>
            データレジスタ
            </summary>
        </member>
        <member name="F:BelicsClass.PLC.MELSEC_F.DeviceCode.R">
            <summary>
            拡張レジスタ
            </summary>
        </member>
        <member name="T:BelicsClass.PLC.MELSEC_Fez">
            <summary>
            PLC通信クラス 簡易版（三菱用[Ｆシリーズ]）
            </summary>
        </member>
        <member name="M:BelicsClass.PLC.MELSEC_Fez.Connect(System.String,System.Int32,BelicsClass.PLC.MELSEC_F.DeviceCode,System.Int32,System.Int32,BelicsClass.PLC.MELSEC_F.DeviceCode,System.Int32,System.Int32)">
            <summary>
            PLCと接続します。
            </summary>
            <param name="ipAddress">接続するPLCのIPアドレス。</param>
            <param name="port">接続するPLCのポート№。</param>
            <param name="readDeviceCode">読み込むデバイスのデバイスコード。</param>
            <param name="readOffset">読み込むデバイスのオフセット値。</param>
            <param name="readPoint">読み込むデバイスの点数。</param>
            <param name="writeDeviceCode">書き込むデバイスのデバイスコード。</param>
            <param name="writeOffset">書き込むデバイスのオフセット値。</param>
            <param name="writePoint">書き込むデバイスの点数。</param>
            <returns>true:正常,false:異常</returns>
        </member>
        <member name="M:BelicsClass.PLC.MELSEC_Fez.Disconnect">
            <summary>
            PLCとの接続を解除します。
            </summary>
        </member>
        <member name="M:BelicsClass.PLC.MELSEC_Fez.Call(System.Byte[]@,System.Byte[])">
            <summary>
            PLCと通信します。
            </summary>
            <param name="readData">読み込んだデバイスのデータを格納するバイト配列。</param>
            <param name="writeData">書き込むデバイスのデータが格納されているバイト配列。</param>
            <returns>true:正常,false:異常</returns>
        </member>
        <member name="P:BelicsClass.PLC.MELSEC_Fez.ResponseCounter">
            <summary>
            応答カウンター
            </summary>
        </member>
        <member name="T:BelicsClass.PLC.MELSECez1E">
            <summary>
            PLC通信クラス 簡易版（三菱用[1Eフレーム]）
            </summary>
        </member>
        <member name="M:BelicsClass.PLC.MELSECez1E.Connect(System.String,System.Int32,System.UInt16,System.Int32,System.Int32,System.UInt16,System.Int32,System.Int32)">
            <summary>
            PLCと接続します。
            </summary>
            <param name="ipAddress">接続するPLCのIPアドレス。</param>
            <param name="port">接続するPLCのポート№。</param>
            <param name="readDeviceCode">読み込むデバイスのデバイスコード。</param>
            <param name="readOffset">読み込むデバイスのオフセット値。</param>
            <param name="readPoint">読み込むデバイスの点数。</param>
            <param name="writeDeviceCode">書き込むデバイスのデバイスコード。</param>
            <param name="writeOffset">書き込むデバイスのオフセット値。</param>
            <param name="writePoint">書き込むデバイスの点数。</param>
            <returns>true:正常,false:異常</returns>
        </member>
        <member name="M:BelicsClass.PLC.MELSECez1E.Disconnect">
            <summary>
            PLCとの接続を解除します。
            </summary>
        </member>
        <member name="M:BelicsClass.PLC.MELSECez1E.Call(System.Byte[]@,System.Byte[])">
            <summary>
            PLCと通信します。
            </summary>
            <param name="readData">読み込んだデバイスのデータを格納するバイト配列。</param>
            <param name="writeData">書き込むデバイスのデータが格納されているバイト配列。</param>
            <returns>true:正常,false:異常</returns>
        </member>
        <member name="M:BelicsClass.PLC.MELSECez1E.ReadCommand(System.UInt16,System.Int32,System.Int32)">
            <summary>
            PLCに一括読出しコマンドを送信します。
            </summary>
            <param name="deviceCode">読み込むデバイスのデバイスコード。</param>
            <param name="offset">読み込むデバイスのオフセット値。</param>
            <param name="point">読み込むデバイスの点数。</param>
            <returns>true:正常,false:異常</returns>
        </member>
        <member name="M:BelicsClass.PLC.MELSECez1E.ReadCommandAck(System.Int32)">
            <summary>
            PLCから一括読出しコマンドの返答を受信します。
            </summary>
            <param name="length">読み込んむデバイスのバイト数。</param>
            <returns>受信したデータのバイト配列</returns>
        </member>
        <member name="M:BelicsClass.PLC.MELSECez1E.WriteCommand(System.UInt16,System.Int32,System.Int32,System.Byte[])">
            <summary>
            PLCに一括書込みコマンドを送信します。
            </summary>
            <param name="deviceCode">書き込むデバイスのデバイスコード。</param>
            <param name="offset">書き込むデバイスのオフセット値。</param>
            <param name="point">書き込むデバイスの点数。</param>
            <param name="writeData">書き込むデバイスのデータが格納されているバイト配列。</param>
            <returns>true:正常,false:異常</returns>
        </member>
        <member name="M:BelicsClass.PLC.MELSECez1E.WriteCommandAck">
            <summary>
            PLCから一括書込みコマンドの返答を受信します。
            </summary>
            <returns>受信したデータのバイト配列</returns>
        </member>
        <member name="P:BelicsClass.PLC.MELSECez1E.ErrorCode">
            <summary>
            異常コードを取得します。
            </summary>
        </member>
        <member name="P:BelicsClass.PLC.MELSECez1E.ErrorMessage">
            <summary>
            異常内容を取得します。
            </summary>
        </member>
        <member name="T:BelicsClass.Network.BL_FtpClient">
            <summary>
            Windows IIS を 使用したFTPクライアント機能（機能限定版）を提供する。
            サーバのファイル一覧の取得、アップロード、ダウンロード、リネーム機能を提供する。
            失敗時のリトライ機能等は、クラスユーザ側で処理を行うこと。
            </summary>
        </member>
        <member name="M:BelicsClass.Network.BL_FtpClient.#ctor(System.String,System.String,System.String)">
            <summary>
            コンストラクタ
            </summary>
            <param name="HostName">ホスト名称（ＩＰアドレスを指す文字列も可能です）</param>
            <param name="UserName">ログインするユーザ名称</param>
            <param name="Pass">ログインするユーザのパスワード</param>
        </member>
        <member name="M:BelicsClass.Network.BL_FtpClient.Login(System.String)">
            <summary>
            対象サーバにログインする。
            本メソッドは、コントロールコネクション確立しユーザの認証後に、指定パスをカレントディレクトリとする。
            処理が完了するまでブロッキングされます。
            </summary>
            <returns>成功/失敗：true/false</returns>
        </member>
        <member name="M:BelicsClass.Network.BL_FtpClient.ChangeDirectory(System.String)">
            <summary>
            カレントディレクトリを移動します
            </summary>
            <param name="remotePath"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Network.BL_FtpClient.Logout">
            <summary>
            対象サーバからログアウトする。
            QUITコマンドをサーバに送ります。
            処理が完了するまでブロッキングされます。
            </summary>
        </member>
        <member name="M:BelicsClass.Network.BL_FtpClient.DownloadFile(System.String,System.String)">
            <summary>
            対象サーバからファイルのダウンロードを行う。
            本メソッドはサーバのルートディレクトリにあるファイルをダウンロード対象とします。
            処理が完了するまでブロッキングされます。
            </summary>
            <param name="remoteFilePath">ダウンロードするファイル名称</param>
            <param name="localFilePath">保存先のパス(パスの最後に\\は不要です)</param>
            <returns>成功/失敗：true/false</returns>
        </member>
        <member name="M:BelicsClass.Network.BL_FtpClient.UploadFile(System.String,System.String)">
            <summary>
            対象サーバのルートディレクトリにファイルをアップロードする。
            処理が完了するまでブロッキングされます。
            </summary>
            <param name="remoteFilePath">パスを含むアップロード先のファイル名称</param>
            <param name="localFilePath">パスを含むアップロード元のファイル名称</param>
            <returns>成功/失敗：true/false</returns>
        </member>
        <member name="M:BelicsClass.Network.BL_FtpClient.DeleteFile(System.String)">
            <summary>
            対象サーバのルートディレクトリから指定ファイルを削除する。
            処理完了までブロッキングされます。
            </summary>
            <param name="targetFilePath">パスを含む削除するファイル名称</param>
            <returns>成功/失敗：true/false</returns>
        </member>
        <member name="M:BelicsClass.Network.BL_FtpClient.SetFileTransMode(System.String)">
            <summary>
            転送モードの指定。
            対Windows転送なのでイメージモードで行う。
            </summary>
            <param name="fileName">拡張子を含むファイル名称</param>
        </member>
        <member name="M:BelicsClass.Network.BL_FtpClient.SendFromLocal(System.Net.Sockets.Socket@,System.String)">
            <summary>
            アップロード時のストリーム送信
            </summary>
            <param name="socket">参照ソケット</param>
            <param name="filePath">アップロードするファイル名(フルパス)</param>
        </member>
        <member name="M:BelicsClass.Network.BL_FtpClient.RefreshFileList(System.String)">
            <summary>
            サーバのカレントディレクトリにある最新のファイルリストを取得
            </summary>
            <returns>成功／失敗：true / false</returns>
        </member>
        <member name="M:BelicsClass.Network.BL_FtpClient.RefreshFileList">
            <summary>
            サーバのカレントディレクトリにある最新のフォルダリストを取得
            </summary>
            <returns>成功／失敗：true / false</returns>
        </member>
        <member name="M:BelicsClass.Network.BL_FtpClient.Rename(System.String,System.String)">
            <summary>
            サーバー内のファイルの名前変更を行います。
            </summary>
            <param name="source"></param>
            <param name="destination"></param>
            <returns></returns>
        </member>
        <member name="P:BelicsClass.Network.BL_FtpClient.UploadSize">
            <summary>
            アップロードファイルの転送済みサイズを取得します。
            アップロードメソッドのCallで初期化され、アップロード中の転送サイズがリアルタイムに更新されます。
            </summary>
        </member>
        <member name="P:BelicsClass.Network.BL_FtpClient.DownloadSize">
            <summary>
            ダウンロードファイルの転送済みサイズを取得します。
            ダウンロードメソッドのCallで初期化され、ダウンロード中の転送サイズがリアルタイムに更新されます。
            </summary>
        </member>
        <member name="P:BelicsClass.Network.BL_FtpClient.IsLogin">
            <summary>
            FTPサーバへのログイン状態。
            最後にアクションを行った際のログイン状態を取得します。
            本プロパティではリアルタイムでの状態更新は行われません。
            </summary>
        </member>
        <member name="P:BelicsClass.Network.BL_FtpClient.SendTransSize">
            <summary>
            送信ストリームの転送サイズ。初期値は 2048バイトです。
            値が大きいほど転送のパフォーマンスが向上しますが、負荷が高くなります。
            </summary>
        </member>
        <member name="P:BelicsClass.Network.BL_FtpClient.RecvTransSize">
            <summary>
            受信ストリームの転送サイズ。初期値は 2048バイトです。
            値が大きいほど転送のパフォーマンスが向上しますが、負荷が高くなります。
            </summary>
        </member>
        <member name="P:BelicsClass.Network.BL_FtpClient.LastError">
            <summary>最後に実行した内容に対するエラー情報</summary>
        </member>
        <member name="P:BelicsClass.Network.BL_FtpClient.WaitTime">
            <summary>コマンド応答待ち時間。初期値は 800ms が設定されます。</summary>
        </member>
        <member name="P:BelicsClass.Network.BL_FtpClient.ServerFileCount">
            <summary>
            サーバのルートディレクトリにあるファイル数。
            最新情報が必要な場合には RefreshFileList メソッドを実行してください。
            </summary>
        </member>
        <member name="P:BelicsClass.Network.BL_FtpClient.FileSizeItems">
            <summary>
            サーバのルートディレクトリにあるファイルサイズのコンテナを取得する。
            最新情報が必要な場合には RefreshFileList メソッドを実行してください。
            </summary>
        </member>
        <member name="P:BelicsClass.Network.BL_FtpClient.FileDateItems">
            <summary>
            サーバのルートディレクトリにあるファイル日付のコンテナを取得する。
            最新情報が必要な場合には RefreshFileList メソッドを実行してください。
            </summary>
        </member>
        <member name="P:BelicsClass.Network.BL_FtpClient.FileNameItems">
            <summary>
            サーバのルートディレクトリにあるファイル名称のコンテナを取得する。
            最新情報が必要な場合には RefreshFileList メソッドを実行してください。
            </summary>
        </member>
        <member name="P:BelicsClass.Network.BL_FtpClient.Item(System.Int32)">
            <summary>
            ファイルリストからのファイル名称を取得する。
            最新情報が必要な場合には RefreshFileList メソッドを実行してください。
            </summary>
            <param name="index">
            ファイルリスト内の０からのインデックス。
            ServerFileCount プロパティでファイル数を取得することが出来ます。
            </param>
            <returns>ファイル名称</returns>
        </member>
        <member name="T:BelicsClass.Network.BL_FtpClient.BL_HostInfo">
            <summary>
            FTPサーバ情報
            接続先の情報を格納します。
            以下の情報が初期値として格納されます。
            HostName : "192.168.1.200"
            Port : 21
            User : "anyoymoause"
            Pass : "guest@guest.com"
            </summary>
        </member>
        <member name="M:BelicsClass.Network.BL_FtpClient.BL_HostInfo.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="P:BelicsClass.Network.BL_FtpClient.BL_HostInfo.HostName">
            <summary>ホスト名称</summary>
        </member>
        <member name="P:BelicsClass.Network.BL_FtpClient.BL_HostInfo.Port">
            <summary>ポート番号（初期値２１）</summary>
        </member>
        <member name="P:BelicsClass.Network.BL_FtpClient.BL_HostInfo.User">
            <summary>ユーザ名称</summary>
        </member>
        <member name="P:BelicsClass.Network.BL_FtpClient.BL_HostInfo.Pass">
            <summary>ユーザパスワード</summary>
        </member>
        <member name="T:BelicsClass.Network.BL_FtpClient.BL_FtpErrorInfo">
            <summary>
            エラー情報 構造体
            最後に行ったアクションのエラー情報を保持します。
            </summary>
        </member>
        <member name="F:BelicsClass.Network.BL_FtpClient.BL_FtpErrorInfo.Code">
            <summary>エラーコード</summary>
        </member>
        <member name="F:BelicsClass.Network.BL_FtpClient.BL_FtpErrorInfo.Answer">
            <summary>FTPサーバからの応答コード</summary>
        </member>
        <member name="F:BelicsClass.Network.BL_FtpClient.BL_FtpErrorInfo.Message">
            <summary>エラーメッセージ</summary>
        </member>
        <member name="T:BelicsClass.ConsoleTools.BL_ConsoleTools">
            <summary>
            コンソール画面クラス
            </summary>
        </member>
        <member name="M:BelicsClass.ConsoleTools.BL_ConsoleTools.SetTitle(System.String)">
            <summary>
            コンソール画面のタイトルを設定します。
            </summary>
            <param name="titleName">タイトルが格納されている文字列。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.ConsoleTools.BL_ConsoleTools.ButtonDisable">
            <summary>
            閉じるボタンを無効にします。
            </summary>
        </member>
        <member name="M:BelicsClass.ConsoleTools.BL_ConsoleTools.WindowSize(System.Int32,System.Int32)">
            <summary>
            コンソール画面のサイズを設定します。
            </summary>
            <param name="x">水平方向。</param>
            <param name="y">垂直方向。</param>
        </member>
        <member name="M:BelicsClass.ConsoleTools.BL_ConsoleTools.ScreenClear">
            <summary>
            コンソール画面を初期化します。
            </summary>
        </member>
        <member name="M:BelicsClass.ConsoleTools.BL_ConsoleTools.Locate(System.Int32,System.Int32)">
            <summary>
            カーソルの位置を設定します。
            </summary>
            <param name="x">水平座標。</param>
            <param name="y">垂直座標。</param>
        </member>
        <member name="M:BelicsClass.ConsoleTools.BL_ConsoleTools.LocateWrite(System.Int32,System.Int32,System.String)">
            <summary>
            指定した位置に文字列を書き込みます。
            </summary>
            <param name="x">水平座標。</param>
            <param name="y">垂直座標。</param>
            <param name="data">書き込む文字列。</param>
        </member>
        <member name="M:BelicsClass.ConsoleTools.BL_ConsoleTools.Color(BelicsClass.ConsoleTools.BL_ConsoleTools.RGB)">
            <summary>
            カーソルの色を設定します。
            </summary>
            <param name="rgb">色属性。</param>
        </member>
        <member name="M:BelicsClass.ConsoleTools.BL_ConsoleTools.Color(BelicsClass.ConsoleTools.BL_ConsoleTools.Table)">
            <summary>
            カーソルの色を設定します。
            </summary>
            <param name="colorTable">色テーブル。</param>
        </member>
        <member name="M:BelicsClass.ConsoleTools.BL_ConsoleTools.KeyDown">
            <summary>
            コンソールの入力をチェックします。
            </summary>
            <returns></returns>
        </member>
        <member name="P:BelicsClass.ConsoleTools.BL_ConsoleTools.CursorVisible">
            <summary>
            カーソルの表示／非表示を設定します。
            </summary>
        </member>
        <member name="T:BelicsClass.ConsoleTools.BL_ConsoleTools.RGB">
            <summary>
            色属性
            </summary>
        </member>
        <member name="F:BelicsClass.ConsoleTools.BL_ConsoleTools.RGB.ForegroundBlue">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.ConsoleTools.BL_ConsoleTools.RGB.ForegroundGreen">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.ConsoleTools.BL_ConsoleTools.RGB.ForegroundRed">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.ConsoleTools.BL_ConsoleTools.RGB.BackgroundBlue">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.ConsoleTools.BL_ConsoleTools.RGB.BackgroundGreen">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.ConsoleTools.BL_ConsoleTools.RGB.BackgroundRed">
            <summary>
            
            </summary>
        </member>
        <member name="T:BelicsClass.ConsoleTools.BL_ConsoleTools.Table">
            <summary>
            色テーブル
            </summary>
        </member>
        <member name="F:BelicsClass.ConsoleTools.BL_ConsoleTools.Table.Black">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.ConsoleTools.BL_ConsoleTools.Table.Blue">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.ConsoleTools.BL_ConsoleTools.Table.Green">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.ConsoleTools.BL_ConsoleTools.Table.Cyan">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.ConsoleTools.BL_ConsoleTools.Table.Red">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.ConsoleTools.BL_ConsoleTools.Table.Magenta">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.ConsoleTools.BL_ConsoleTools.Table.Yellow">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.ConsoleTools.BL_ConsoleTools.Table.White">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.ConsoleTools.BL_ConsoleTools.Table.BlueBack">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.ConsoleTools.BL_ConsoleTools.Table.GreenBack">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.ConsoleTools.BL_ConsoleTools.Table.CyanBack">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.ConsoleTools.BL_ConsoleTools.Table.RedBack">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.ConsoleTools.BL_ConsoleTools.Table.MagentaBack">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.ConsoleTools.BL_ConsoleTools.Table.YellowBack">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.ConsoleTools.BL_ConsoleTools.Table.WhiteBack">
            <summary>
            
            </summary>
        </member>
        <member name="T:BelicsClass.Common.BL_BitConverter">
            <summary>
            System.BitConverterの処理を補います。
            </summary>
            <remarks>
            オフセットを更新しながら値とバイト配列の変換を行いますので、送受信データフォーマットの変換
            が得意です。
            </remarks>
        </member>
        <member name="M:BelicsClass.Common.BL_BitConverter.#ctor">
            <summary>
            コンストラクタです。ユーザは使用できません。
            </summary>
        </member>
        <member name="M:BelicsClass.Common.BL_BitConverter.ToValue(System.Byte[],System.Int32@,System.Byte@)">
            <summary>
            指定されたバイト配列の指定オフセットから始まるbyteを取得します。
            </summary>
            <param name="byteArray">バイト配列を指定します。</param>
            <param name="offset">取得したい値が格納された偏差を指定します。値型のサイズ(バイト)分、更新されます。</param>
            <param name="val">値を格納する参照を指定します。</param>
        </member>
        <member name="M:BelicsClass.Common.BL_BitConverter.ToValue(System.Byte[],System.Int32@,System.UInt16@)">
            <summary>
            指定されたバイト配列の指定オフセットから始まるushotを取得します。
            </summary>
            <param name="byteArray">バイト配列を指定します。</param>
            <param name="offset">取得したい値が格納された偏差を指定します。値型のサイズ(バイト)分、更新されます。</param>
            <param name="val">値を格納する参照を指定します。</param>
        </member>
        <member name="M:BelicsClass.Common.BL_BitConverter.ToValue(System.Byte[],System.Int32@,System.UInt32@)">
            <summary>
            指定されたバイト配列の指定オフセットから始まるuintを取得します。
            </summary>
            <param name="byteArray">バイト配列を指定します。</param>
            <param name="offset">取得したい値が格納された偏差を指定します。値型のサイズ(バイト)分、更新されます。</param>
            <param name="val">値を格納する参照を指定します。</param>
        </member>
        <member name="M:BelicsClass.Common.BL_BitConverter.ToValue(System.Byte[],System.Int32@,System.UInt64@)">
            <summary>
            指定されたバイト配列の指定オフセットから始まるulongを取得します。
            </summary>
            <param name="byteArray">バイト配列を指定します。</param>
            <param name="offset">取得したい値が格納された偏差を指定します。値型のサイズ(バイト)分、更新されます。</param>
            <param name="val">値を格納する参照を指定します。</param>
        </member>
        <member name="M:BelicsClass.Common.BL_BitConverter.ToValue(System.Byte[],System.Int32@,System.SByte@)">
            <summary>
            指定されたバイト配列の指定オフセットから始まるsbyteを取得します。
            </summary>
            <param name="byteArray">バイト配列を指定します。</param>
            <param name="offset">取得したい値が格納された偏差を指定します。値型のサイズ(バイト)分、更新されます。</param>
            <param name="val">値を格納する参照を指定します。</param>
        </member>
        <member name="M:BelicsClass.Common.BL_BitConverter.ToValue(System.Byte[],System.Int32@,System.Int16@)">
            <summary>
            指定されたバイト配列の指定オフセットから始まるshortを取得します。
            </summary>
            <param name="byteArray">バイト配列を指定します。</param>
            <param name="offset">取得したい値が格納された偏差を指定します。値型のサイズ(バイト)分、更新されます。</param>
            <param name="val">値を格納する参照を指定します。</param>
        </member>
        <member name="M:BelicsClass.Common.BL_BitConverter.ToValue(System.Byte[],System.Int32@,System.Int32@)">
            <summary>
            指定されたバイト配列の指定オフセットから始まるintを取得します。
            </summary>
            <param name="byteArray">バイト配列を指定します。</param>
            <param name="offset">取得したい値が格納された偏差を指定します。値型のサイズ(バイト)分、更新されます。</param>
            <param name="val">値を格納する参照を指定します。</param>
        </member>
        <member name="M:BelicsClass.Common.BL_BitConverter.ToValue(System.Byte[],System.Int32@,System.Int64@)">
            <summary>
            指定されたバイト配列の指定オフセットから始まるlongを取得します。
            </summary>
            <param name="byteArray">バイト配列を指定します。</param>
            <param name="offset">取得したい値が格納された偏差を指定します。値型のサイズ(バイト)分、更新されます。</param>
            <param name="val">値を格納する参照を指定します。</param>
        </member>
        <member name="M:BelicsClass.Common.BL_BitConverter.ToValue(System.Byte[],System.Int32@,System.Char@)">
            <summary>
            指定されたバイト配列の指定オフセットから始まるcharを取得します。
            </summary>
            <param name="byteArray">バイト配列を指定します。</param>
            <param name="offset">取得したい値が格納された偏差を指定します。値型のサイズ(バイト)分、更新されます。</param>
            <param name="val">値を格納する参照を指定します。</param>
        </member>
        <member name="M:BelicsClass.Common.BL_BitConverter.ToValue(System.Byte[],System.Int32@,System.Single@)">
            <summary>
            指定されたバイト配列の指定オフセットから始まるfloatを取得します。
            </summary>
            <param name="byteArray">バイト配列を指定します。</param>
            <param name="offset">取得したい値が格納された偏差を指定します。値型のサイズ(バイト)分、更新されます。</param>
            <param name="val">値を格納する参照を指定します。</param>
        </member>
        <member name="M:BelicsClass.Common.BL_BitConverter.ToValue(System.Byte[],System.Int32@,System.Double@)">
            <summary>
            指定されたバイト配列の指定オフセットから始まるdoubleを取得します。
            </summary>
            <param name="byteArray">バイト配列を指定します。</param>
            <param name="offset">取得したい値が格納された偏差を指定します。値型のサイズ(バイト)分、更新されます。</param>
            <param name="val">値を格納する参照を指定します。</param>
        </member>
        <member name="M:BelicsClass.Common.BL_BitConverter.ToBytes(System.Byte[],System.Int32@,System.Byte)">
            <summary>
            指定されたbyte値をバイト配列に変換し、指定された位置に書き込みます。
            </summary>
            <param name="byteArray">変換した値型を格納するバイト配列を指定します。</param>
            <param name="offset">格納するオフセットを指定します。値型のサイズ(バイト)分、更新されます。</param>
            <param name="val">バイト配列に変換する値を指定します。</param>
        </member>
        <member name="M:BelicsClass.Common.BL_BitConverter.ToBytes(System.Byte[],System.Int32@,System.UInt16)">
            <summary>
            指定されたushort値をバイト配列に変換し、指定された位置に書き込みます。
            </summary>
            <param name="byteArray">変換した値型を格納するバイト配列を指定します。</param>
            <param name="offset">格納するオフセットを指定します。値型のサイズ(バイト)分、更新されます。</param>
            <param name="val">バイト配列に変換する値を指定します。</param>
        </member>
        <member name="M:BelicsClass.Common.BL_BitConverter.ToBytes(System.Byte[],System.Int32@,System.UInt32)">
            <summary>
            指定されたuint値をバイト配列に変換し、指定された位置に書き込みます。
            </summary>
            <param name="byteArray">変換した値型を格納するバイト配列を指定します。</param>
            <param name="offset">格納するオフセットを指定します。値型のサイズ(バイト)分、更新されます。</param>
            <param name="val">バイト配列に変換する値を指定します。</param>
        </member>
        <member name="M:BelicsClass.Common.BL_BitConverter.ToBytes(System.Byte[],System.Int32@,System.UInt64)">
            <summary>
            指定されたulong値をバイト配列に変換し、指定された位置に書き込みます。
            </summary>
            <param name="byteArray">変換した値型を格納するバイト配列を指定します。</param>
            <param name="offset">格納するオフセットを指定します。値型のサイズ(バイト)分、更新されます。</param>
            <param name="val">バイト配列に変換する値を指定します。</param>
        </member>
        <member name="M:BelicsClass.Common.BL_BitConverter.ToBytes(System.Byte[],System.Int32@,System.SByte)">
            <summary>
            指定されたsbyte値をバイト配列に変換し、指定された位置に書き込みます。
            </summary>
            <param name="byteArray">変換した値型を格納するバイト配列を指定します。</param>
            <param name="offset">格納するオフセットを指定します。値型のサイズ(バイト)分、更新されます。</param>
            <param name="val">バイト配列に変換する値を指定します。</param>
        </member>
        <member name="M:BelicsClass.Common.BL_BitConverter.ToBytes(System.Byte[],System.Int32@,System.Int16)">
            <summary>
            指定されたshort値をバイト配列に変換し、指定された位置に書き込みます。
            </summary>
            <param name="byteArray">変換した値型を格納するバイト配列を指定します。</param>
            <param name="offset">格納するオフセットを指定します。値型のサイズ(バイト)分、更新されます。</param>
            <param name="val">バイト配列に変換する値を指定します。</param>
        </member>
        <member name="M:BelicsClass.Common.BL_BitConverter.ToBytes(System.Byte[],System.Int32@,System.Int32)">
            <summary>
            指定されたint値をバイト配列に変換し、指定された位置に書き込みます。
            </summary>
            <param name="byteArray">変換した値型を格納するバイト配列を指定します。</param>
            <param name="offset">格納するオフセットを指定します。値型のサイズ(バイト)分、更新されます。</param>
            <param name="val">バイト配列に変換する値を指定します。</param>
        </member>
        <member name="M:BelicsClass.Common.BL_BitConverter.ToBytes(System.Byte[],System.Int32@,System.Int64)">
            <summary>
            指定されたlong値をバイト配列に変換し、指定された位置に書き込みます。
            </summary>
            <param name="byteArray">変換した値型を格納するバイト配列を指定します。</param>
            <param name="offset">格納するオフセットを指定します。値型のサイズ(バイト)分、更新されます。</param>
            <param name="val">バイト配列に変換する値を指定します。</param>
        </member>
        <member name="M:BelicsClass.Common.BL_BitConverter.ToBytes(System.Byte[],System.Int32@,System.Char)">
            <summary>
            指定されたchar値をバイト配列に変換し、指定された位置に書き込みます。
            </summary>
            <param name="byteArray">変換した値型を格納するバイト配列を指定します。</param>
            <param name="offset">格納するオフセットを指定します。値型のサイズ(バイト)分、更新されます。</param>
            <param name="val">バイト配列に変換する値を指定します。</param>
        </member>
        <member name="M:BelicsClass.Common.BL_BitConverter.ToBytes(System.Byte[],System.Int32@,System.Single)">
            <summary>
            指定されたfloat値をバイト配列に変換し、指定された位置に書き込みます。
            </summary>
            <param name="byteArray">変換した値型を格納するバイト配列を指定します。</param>
            <param name="offset">格納するオフセットを指定します。値型のサイズ(バイト)分、更新されます。</param>
            <param name="val">バイト配列に変換する値を指定します。</param>
        </member>
        <member name="M:BelicsClass.Common.BL_BitConverter.ToBytes(System.Byte[],System.Int32@,System.Double)">
            <summary>
            指定されたdouble値をバイト配列に変換し、指定された位置に書き込みます。
            </summary>
            <param name="byteArray">変換した値型を格納するバイト配列を指定します。</param>
            <param name="offset">格納するオフセットを指定します。値型のサイズ(バイト)分、更新されます。</param>
            <param name="val">バイト配列に変換する値を指定します。</param>
        </member>
        <member name="M:BelicsClass.Common.BL_BitConverter.Parse(System.String,System.Byte@)">
            <summary>
            文字列をbyte型に変換します。
            変換できなかった場合、destには何も設定されず、例外を放出しません
            </summary>
            <param name="str">変換する文字列を指定します。</param>
            <param name="dest">変換後に代入する参照を指定します。</param>
            <returns>変換に成功した場合、trueを返します。変換に失敗した場合、falseを返します。</returns>
        </member>
        <member name="M:BelicsClass.Common.BL_BitConverter.Parse(System.String,System.UInt16@)">
            <summary>
            文字列をushort型に変換します。
            変換できなかった場合、destには何も設定されず、例外を放出しません
            </summary>
            <param name="str">変換する文字列を指定します。</param>
            <param name="dest">変換後に代入する参照を指定します。</param>
            <returns>変換に成功した場合、trueを返します。変換に失敗した場合、falseを返します。</returns>
        </member>
        <member name="M:BelicsClass.Common.BL_BitConverter.Parse(System.String,System.UInt64@)">
            <summary>
            文字列をulong型に変換します。
            変換できなかった場合、destには何も設定されず、例外を放出しません
            </summary>
            <param name="str">変換する文字列を指定します。</param>
            <param name="dest">変換後に代入する参照を指定します。</param>
            <returns>変換に成功した場合、trueを返します。変換に失敗した場合、falseを返します。</returns>
        </member>
        <member name="M:BelicsClass.Common.BL_BitConverter.Parse(System.String,System.UInt32@)">
            <summary>
            文字列をuint型に変換します。
            変換できなかった場合、destには何も設定されず、例外を放出しません
            </summary>
            <param name="str">変換する文字列を指定します。</param>
            <param name="dest">変換後に代入する参照を指定します。</param>
            <returns>変換に成功した場合trueを返します。変換に失敗した場合falseを返します。</returns>
        </member>
        <member name="M:BelicsClass.Common.BL_BitConverter.Parse(System.String,System.SByte@)">
            <summary>
            文字列をsbyte型に変換します。
            変換できなかった場合、destには何も設定されず、例外を放出しません
            </summary>
            <param name="str">変換する文字列を指定します。</param>
            <param name="dest">変換後に代入する参照を指定します。</param>
            <returns>変換に成功した場合、trueを返します。変換に失敗した場合、falseを返します。</returns>
        </member>
        <member name="M:BelicsClass.Common.BL_BitConverter.Parse(System.String,System.Int16@)">
            <summary>
            文字列をshort型に変換します。
            変換できなかった場合、destには何も設定されず、例外を放出しません
            </summary>
            <param name="str">変換する文字列を指定します。</param>
            <param name="dest">変換後に代入する参照を指定します。</param>
            <returns>変換に成功した場合、trueを返します。変換に失敗した場合、falseを返します。</returns>
        </member>
        <member name="M:BelicsClass.Common.BL_BitConverter.Parse(System.String,System.Int64@)">
            <summary>
            文字列をlong型に変換します。
            変換できなかった場合、destには何も設定されず、例外を放出しません
            </summary>
            <param name="str">変換する文字列を指定します。</param>
            <param name="dest">変換後に代入する参照を指定します。</param>
            <returns>変換に成功した場合、trueを返します。変換に失敗した場合、falseを返します。</returns>
        </member>
        <member name="M:BelicsClass.Common.BL_BitConverter.Parse(System.String,System.Int32@)">
            <summary>
            文字列をint型に変換します。
            変換できなかった場合、destには何も設定されず、例外を放出しません
            </summary>
            <param name="str">変換する文字列を指定します。</param>
            <param name="dest">変換後に代入する参照を指定します。</param>
            <returns>変換に成功した場合、trueを返します。変換に失敗した場合、falseを返します。</returns>
        </member>
        <member name="M:BelicsClass.Common.BL_BitConverter.Parse(System.String,System.Single@)">
            <summary>
            文字列をfloat型に変換します。
            変換できなかった場合、destには何も設定されず、例外を放出しません
            </summary>
            <param name="str">変換する文字列を指定します。</param>
            <param name="dest">変換後に代入する参照を指定します。</param>
            <returns>変換に成功した場合、trueを返します。変換に失敗した場合、falseを返します。</returns>
        </member>
        <member name="M:BelicsClass.Common.BL_BitConverter.Parse(System.String,System.Double@)">
            <summary>
            文字列をdouble型に変換します。
            変換できなかった場合、destには何も設定されず、例外を放出しません
            </summary>
            <param name="str">変換する文字列を指定します。</param>
            <param name="dest">変換後に代入する参照を指定します。</param>
            <returns>変換に成功した場合、trueを返します。変換に失敗した場合、falseを返します。</returns>
        </member>
        <member name="M:BelicsClass.Common.BL_BitConverter.Parse(System.String,System.Decimal@)">
            <summary>
            文字列をdecimal型に変換します。
            変換できなかった場合、destには何も設定されず、例外を放出しません
            </summary>
            <param name="str">変換する文字列を指定します。</param>
            <param name="dest">変換後に代入する参照を指定します。</param>
            <returns>変換に成功した場合、trueを返します。変換に失敗した場合、falseを返します。</returns>
        </member>
        <member name="M:BelicsClass.Common.BL_BitConverter.Fixed2ToDouble(System.Byte[],System.UInt32,System.Int32,System.Double@)">
            <summary>
            2バイトの配列をdouble型に変換
            </summary>
            <param name="byteArray"></param>
            <param name="offset"></param>
            <param name="decimalBit"></param>
            <param name="outValue"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Common.BL_BitConverter.Fixed4ToDouble(System.Byte[],System.UInt32,System.Int32,System.Double@)">
            <summary>
            4バイトのデータをdouble型に変換
            </summary>
            <param name="byteArray"></param>
            <param name="offset"></param>
            <param name="decimalBit"></param>
            <param name="outValue"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Common.BL_BitConverter.HighLow(System.Byte)">
            <summary>指定された値のエンディアンを逆転します。</summary>
            <param name="val">エンディアンを逆転する値を指定します。</param>
            <returns>逆転した値を返します。</returns>
        </member>
        <member name="M:BelicsClass.Common.BL_BitConverter.HighLow(System.UInt16)">
            <summary>指定された値のエンディアンを逆転します。</summary>
            <param name="val">エンディアンを逆転する値を指定します。</param>
            <returns>逆転した値を返します。</returns>
        </member>
        <member name="M:BelicsClass.Common.BL_BitConverter.HighLow(System.UInt32)">
            <summary>指定された値のエンディアンを逆転します。</summary>
            <param name="val">エンディアンを逆転する値を指定します。</param>
            <returns>逆転した値を返します。</returns>
        </member>
        <member name="M:BelicsClass.Common.BL_BitConverter.HighLow(System.UInt64)">
            <summary>指定された値のエンディアンを逆転します。</summary>
            <param name="val">エンディアンを逆転する値を指定します。</param>
            <returns>逆転した値を返します。</returns>
        </member>
        <member name="M:BelicsClass.Common.BL_BitConverter.HighLow(System.SByte)">
            <summary>指定された値のエンディアンを逆転します。</summary>
            <param name="val">エンディアンを逆転する値を指定します。</param>
            <returns>逆転した値を返します。</returns>
        </member>
        <member name="M:BelicsClass.Common.BL_BitConverter.HighLow(System.Int16)">
            <summary>指定された値のエンディアンを逆転します。</summary>
            <param name="val">エンディアンを逆転する値を指定します。</param>
            <returns>逆転した値を返します。</returns>
        </member>
        <member name="M:BelicsClass.Common.BL_BitConverter.HighLow(System.Int32)">
            <summary>指定された値のエンディアンを逆転します。</summary>
            <param name="val">エンディアンを逆転する値を指定します。</param>
            <returns>逆転した値を返します。</returns>
        </member>
        <member name="M:BelicsClass.Common.BL_BitConverter.HighLow(System.Int64)">
            <summary>指定された値のエンディアンを逆転します。</summary>
            <param name="val">エンディアンを逆転する値を指定します。</param>
            <returns>逆転した値を返します。</returns>
        </member>
        <member name="M:BelicsClass.Common.BL_BitConverter.FlipFrop(System.Byte@,System.Byte@)">
            <summary>値を入れ替えます。</summary>
            <param name="a">入れ替える値を指定します。</param>
            <param name="b">入れ替える値を指定します。</param>
        </member>
        <member name="M:BelicsClass.Common.BL_BitConverter.BinToBcd(System.Byte)">
            <summary>
            バイナリデータをＢＣＤデータに変換します。
            データが９９を超えるときはＢＣＤ表現できないため例外をスローします。
            </summary>
            <param name="val">ＢＣＤデータに変換するバイトデータを指定します。</param>
            <returns>ＢＣＤ変換後のバイトデータを返します。</returns>
        </member>
        <member name="M:BelicsClass.Common.BL_BitConverter.BinToBcd(System.Byte[])">
            <summary>
            バイナリデータをＢＣＤデータに変換します。
            データが９９を超えるときはＢＣＤ表現できないため例外をスローします。
            </summary>
            <param name="val">ＢＣＤデータに変換するバイト配列を指定します。</param>
            <returns>ＢＣＤ変換後のバイト配列を返します。</returns>
        </member>
        <member name="M:BelicsClass.Common.BL_BitConverter.BcdToBin(System.Byte)">
            <summary>
            ＢＣＤデータをバイナリデータに変換します。
            指定データがＢＣＤデータであることのチェックは行いません。
            </summary>
            <param name="val">バイナリデータに変換するバイトデータを指定します。</param>
            <returns>バイナリ変換後のバイトデータを返します。</returns>
        </member>
        <member name="M:BelicsClass.Common.BL_BitConverter.BcdToBin(System.Byte[])">
            <summary>
            ＢＣＤデータをバイナリデータに変換します。
            指定データがＢＣＤデータであることのチェックは行いません。
            </summary>
            <param name="val">バイナリデータに変換するバイト配列を渡します。</param>
            <returns>バイナリ変換後のバイト配列を返します。</returns>
        </member>
        <member name="M:BelicsClass.Common.BL_BitConverter.HexToInt(System.String)">
            <summary>16進文字列("0x"付き)を数値に変換します。</summary>
            <param name="val">変換する文字列を指定します。</param>
            <returns>変換後のデータを返します。</returns>
        </member>
        <member name="F:BelicsClass.Common.BL_BitConverter.s_WorkArray">
            <summary>エンディアン逆転用のワークです。</summary>
        </member>
        <member name="F:BelicsClass.Common.BL_BitConverter.s_Offset">
            <summary>エンディアン逆転用のワークです。</summary>
        </member>
        <member name="T:BelicsClass.UI.BL_TouchControl">
            <summary>
            タッチ操作／ジェスチャー操作を管理するクラスです。
            </summary>
        </member>
        <member name="F:BelicsClass.UI.BL_TouchControl.control">
            <summary>
            タッチ対象のコントロール
            </summary>
        </member>
        <member name="F:BelicsClass.UI.BL_TouchControl.touchPoints">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.BL_TouchControl.#ctor">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.BL_TouchControl.StartControl(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            
            </summary>
            <param name="c"></param>
            <param name="gesture"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_TouchControl.StopControl">
            <summary>
            
            </summary>
        </member>
        <member name="E:BelicsClass.UI.BL_TouchControl.Touchdown">
            <summary></summary>
        </member>
        <member name="E:BelicsClass.UI.BL_TouchControl.Touchup">
            <summary></summary>
        </member>
        <member name="E:BelicsClass.UI.BL_TouchControl.TouchMove">
            <summary></summary>
        </member>
        <member name="E:BelicsClass.UI.BL_TouchControl.GestureBegin">
            <summary></summary>
        </member>
        <member name="E:BelicsClass.UI.BL_TouchControl.GestureEnd">
            <summary></summary>
        </member>
        <member name="E:BelicsClass.UI.BL_TouchControl.GestureZoom">
            <summary></summary>
        </member>
        <member name="E:BelicsClass.UI.BL_TouchControl.GesturePan">
            <summary></summary>
        </member>
        <member name="E:BelicsClass.UI.BL_TouchControl.GestureRotate">
            <summary></summary>
        </member>
        <member name="E:BelicsClass.UI.BL_TouchControl.GestureTwoFingerTap">
            <summary></summary>
        </member>
        <member name="E:BelicsClass.UI.BL_TouchControl.GestureRollover">
            <summary></summary>
        </member>
        <member name="T:BelicsClass.UI.BL_TouchControl.TouchEventHandler">
            <summary>
            タッチイベントハンドラー
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:BelicsClass.UI.BL_TouchControl.GestureEventHandler">
            <summary>
            ジェスチャーイベントハンドラー
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:BelicsClass.UI.BL_TouchControl.WMTouchEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.UI.BL_TouchControl.WMTouchEventArgs.Location">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_TouchControl.WMTouchEventArgs.Id">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_TouchControl.WMTouchEventArgs.Mask">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_TouchControl.WMTouchEventArgs.Flags">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_TouchControl.WMTouchEventArgs.Time">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_TouchControl.WMTouchEventArgs.Contact">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_TouchControl.WMTouchEventArgs.touchPoints">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_TouchControl.WMTouchEventArgs.Handled">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.BL_TouchControl.WMTouchEventArgs.#ctor">
            <summary></summary>
        </member>
        <member name="P:BelicsClass.UI.BL_TouchControl.WMTouchEventArgs.IsPrimaryContact">
            <summary></summary>
        </member>
        <member name="T:BelicsClass.UI.BL_TouchControl.WMGestureEventArgs">
            <summary>
            ジェスチャのイベントデータ
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_TouchControl.WMGestureEventArgs.#ctor">
            <summary></summary>
        </member>
        <member name="P:BelicsClass.UI.BL_TouchControl.WMGestureEventArgs.Flags">
            <summary></summary>
        </member>
        <member name="P:BelicsClass.UI.BL_TouchControl.WMGestureEventArgs.Id">
            <summary></summary>
        </member>
        <member name="P:BelicsClass.UI.BL_TouchControl.WMGestureEventArgs.TargetHandle">
            <summary></summary>
        </member>
        <member name="P:BelicsClass.UI.BL_TouchControl.WMGestureEventArgs.LocationX">
            <summary></summary>
        </member>
        <member name="P:BelicsClass.UI.BL_TouchControl.WMGestureEventArgs.LocationY">
            <summary></summary>
        </member>
        <member name="P:BelicsClass.UI.BL_TouchControl.WMGestureEventArgs.InstanceID">
            <summary></summary>
        </member>
        <member name="P:BelicsClass.UI.BL_TouchControl.WMGestureEventArgs.SequenceID">
            <summary></summary>
        </member>
        <member name="P:BelicsClass.UI.BL_TouchControl.WMGestureEventArgs.Arguments">
            <summary></summary>
        </member>
        <member name="P:BelicsClass.UI.BL_TouchControl.WMGestureEventArgs.ExtraArgs">
            <summary></summary>
        </member>
        <member name="T:BelicsClass.UI.BL_TouchControl.TouchPoints">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.UI.BL_TouchControl.TouchPoints.listPoint">
            <summary></summary>
        </member>
        <member name="T:BelicsClass.UI.BL_TouchControl.TouchPoints.TouchInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.UI.BL_TouchControl.TouchPoints.TouchInfo.datetime">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_TouchControl.TouchPoints.TouchInfo.point">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.BL_TouchControl.TouchPoints.TouchInfo.ToString">
            <summary></summary>
        </member>
        <member name="T:BelicsClass.File.BL_FreeFile">
            <summary>
            可変長ファイルクラス
            </summary>
        </member>
        <member name="M:BelicsClass.File.BL_FreeFile.#ctor">
            <summary>
            可変長ファイルクラス
            </summary>
        </member>
        <member name="M:BelicsClass.File.BL_FreeFile.#ctor(System.Boolean)">
            <summary>
            可変長ファイルクラス
            </summary>
            <param name="eofSeekMode">EOFシークモード（true:有効, false:無効）</param>
        </member>
        <member name="M:BelicsClass.File.BL_FreeFile.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
            <summary>
            可変長ファイルをオープンします。
            </summary>
            <param name="file_name">オープンするファイルの名前を示す文字列を指定します。</param>
            <param name="fileMode">ファイルを開く方法または作成する方法を指定します。</param>
            <param name="fileAccess">ファイルにアクセスする方法を指定します。</param>
            <param name="fileShare">ファイルの共有方法を指定します。</param>
        </member>
        <member name="M:BelicsClass.File.BL_FreeFile.Open(System.String,System.String,System.String)">
            <summary>
            可変長ファイルをオープンします。
            </summary>
            <param name="file_name">オープンするファイルの名前を示す文字列を指定します。</param>
            <param name="access_mode">オープンするファイルのファイル属性を指定します。</param>
            <param name="share_mode">オープンするファイルの共有属性を指定します。</param>
        </member>
        <member name="M:BelicsClass.File.BL_FreeFile.Close">
            <summary>
            可変長ファイルをクローズします。
            </summary>
        </member>
        <member name="M:BelicsClass.File.BL_FreeFile.Read(System.Byte[]@,System.Int32)">
            <summary>
            ファイルからデータを読み込みます。
            </summary>
            <param name="data">読み込んだレコードのデータが格納されるバイト配列を指定します。</param>
            <param name="length">読み込みを行う最大バイト数を指定します。</param>
        </member>
        <member name="M:BelicsClass.File.BL_FreeFile.Write(System.Byte[])">
            <summary>
            ファイルにデータを書き込みます。
            </summary>
            <param name="data">書き込むレコードのデータが格納されているバイト配列を指定します。</param>
        </member>
        <member name="P:BelicsClass.File.BL_FreeFile.FileLength">
            <summary>
            ファイル長 (バイト単位) を取得します。
            </summary>
        </member>
        <member name="P:BelicsClass.File.BL_FreeFile.ErrorCode">
            <summary>
            異常コードを取得します。
            </summary>
        </member>
        <member name="P:BelicsClass.File.BL_FreeFile.ErrorMessage">
            <summary>
            異常内容を取得します。
            </summary>
        </member>
        <member name="T:BelicsClass.File.BL_FixedFile">
            <summary>
            固定長ファイルクラス
            </summary>
        </member>
        <member name="M:BelicsClass.File.BL_FixedFile.Open(System.String,System.Int32,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
            <summary>
            固定長ファイルをオープンします。
            </summary>
            <param name="file_name">オープンするファイルの名前を示す文字列を指定します。</param>
            <param name="length">オープンするファイルの１レコードのバイト数を指定します。</param>
            <param name="fileMode">ファイルを開く方法または作成する方法を指定します。</param>
            <param name="fileAccess">ファイルにアクセスする方法を指定します。</param>
            <param name="fileShare">ファイルの共有方法を指定します。</param>
        </member>
        <member name="M:BelicsClass.File.BL_FixedFile.Open(System.String,System.Int32,System.String,System.String)">
            <summary>
            固定長ファイルをオープンします。
            </summary>
            <param name="file_name">オープンするファイルの名前を示す文字列を指定します。</param>
            <param name="length">オープンするファイルの１レコードのバイト数を指定します。</param>
            <param name="access_mode">オープンするファイルのファイル属性を指定します。</param>
            <param name="share_mode">オープンするファイルの共有属性を指定します。</param>
        </member>
        <member name="M:BelicsClass.File.BL_FixedFile.Close">
            <summary>
            固定長ファイルをクローズします。
            </summary>
        </member>
        <member name="M:BelicsClass.File.BL_FixedFile.Read(System.Byte[]@,System.Int32,System.Boolean)">
            <summary>
            ファイルからデータを読み込みます。 
            </summary>
            <param name="data">読み込んだレコードのデータが格納されるバイト配列を指定します。</param>
            <param name="record_no">読み込みを行うレコード№を指定します。</param>
            <param name="lock_flag">ロックする場合は true。それ以外の場合は false。</param>
        </member>
        <member name="M:BelicsClass.File.BL_FixedFile.Read(System.Byte[]@,System.Int32)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <param name="record_no"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.File.BL_FixedFile.Write(System.Byte[],System.Int32,System.Boolean)">
            <summary>
            ファイルにデータを書き込みます。
            </summary>
            <param name="data">書き込むレコードのデータが格納されているバイト配列を指定します。</param>
            <param name="record_no">書き込みを行うレコード№を指定します。</param>
            <param name="unlock_flag">ロックを解除する場合は true。それ以外の場合は false。</param>
        </member>
        <member name="M:BelicsClass.File.BL_FixedFile.Write(System.Byte[],System.Int32)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <param name="record_no"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.File.BL_FixedFile.Seek(System.Int32)">
            <summary>
            ファイルポインタの位置を設定します。
            </summary>
            <param name="record_no">現在の位置に設定するレコード№を指定します。［EOF］に設定する場合は -1。 </param>
        </member>
        <member name="M:BelicsClass.File.BL_FixedFile.Lock(System.Int32)">
            <summary>
            ファイル内の指定したレコードをロックします。 
            </summary>
            <param name="record_no">ロックするレコード№を指定します。</param>
        </member>
        <member name="M:BelicsClass.File.BL_FixedFile.Unlock">
            <summary>
            ファイル内のロックを解除します。
            </summary>
        </member>
        <member name="M:BelicsClass.File.BL_FixedFile.errors">
            <summary>
            異常情報を初期化します。
            </summary>
        </member>
        <member name="M:BelicsClass.File.BL_FixedFile.errors(System.Int32,System.String)">
            <summary>
            異常情報を設定します。
            </summary>
            <param name="code">異常コード。</param>
            <param name="message">異常内容が格納されている文字列。</param>
        </member>
        <member name="P:BelicsClass.File.BL_FixedFile.FileLength">
            <summary>
            ファイル長 (バイト単位) を取得します。
            </summary>
        </member>
        <member name="P:BelicsClass.File.BL_FixedFile.RecordLength">
            <summary>
            レコード長 (バイト単位) を取得します。
            </summary>
        </member>
        <member name="P:BelicsClass.File.BL_FixedFile.ErrorCode">
            <summary>
            異常コードを取得します。
            </summary>
        </member>
        <member name="P:BelicsClass.File.BL_FixedFile.ErrorMessage">
            <summary>
            異常内容を取得します。
            </summary>
        </member>
        <member name="P:BelicsClass.File.BL_FixedFile.Position">
            <summary>
            ストリームの現在位置を取得または設定します。
            </summary>
        </member>
        <member name="P:BelicsClass.File.BL_FixedFile.SetRecordLength">
            <summary>
            レコード長 (バイト単位) を設定します。
            </summary>
        </member>
        <member name="T:BelicsClass.Database.BL_MSAccess">
            <summary>
            データベースクラス(OleDB)
            </summary>
        </member>
        <member name="T:BelicsClass.Database.BL_OleDb">
            <summary>
            データベースクラス(OleDB)
            SQL Server (SQL Server認証/Windows認証)に対応
            MS Access (mdb)/MS Access (accdb)に対応
            </summary>
        </member>
        <member name="M:BelicsClass.Database.BL_OleDb.#ctor">
            <summary>
            データベースクラス
            </summary>
        </member>
        <member name="M:BelicsClass.Database.BL_OleDb.#ctor(System.Int32)">
            <summary>
            データベースクラス
            </summary>
            <param name="cmdTimeout">コマンドタイムアウト値の設定。</param>
        </member>
        <member name="M:BelicsClass.Database.BL_OleDb.GetConnectionString(System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="initialCatalog"></param>
            <param name="dataSource"></param>
            <param name="userID"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Database.BL_OleDb.GetDbCommand(System.String,System.Data.Common.DbConnection)">
            <summary>
            
            </summary>
            <param name="cmdText"></param>
            <param name="connection"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Database.BL_OleDb.GetDbDataAdapter(System.Data.Common.DbCommand)">
            <summary>
            
            </summary>
            <param name="selectCommand"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Database.BL_OleDb.GetDbCommandBuilder(System.Data.Common.DbDataAdapter)">
            <summary>
            
            </summary>
            <param name="adapter"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Database.BL_OleDb.GetTables">
            <summary>
            テーブル名取得
            </summary>
        </member>
        <member name="M:BelicsClass.Database.BL_OleDb.SetIsolationLevel(BelicsClass.Database.BL_Database.IsolationLevel)">
            <summary>
            トランザクション分離レベルを設定します。
            </summary>
            <param name="level">設定する分離レベル。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Database.BL_OleDb.BeginTransaction">
            <summary>
            トランザクションを開始します。
            </summary>
        </member>
        <member name="M:BelicsClass.Database.BL_OleDb.CommitTransaction">
            <summary>
            トランザクションをコミットします。
            </summary>
        </member>
        <member name="M:BelicsClass.Database.BL_OleDb.RollBackTransaction">
            <summary>
            トランザクションをロールバックします。
            </summary>
        </member>
        <member name="T:BelicsClass.Common.BL_Win32API">
            <summary>
            Win32APIを操作クラス
            </summary>
        </member>
        <member name="F:BelicsClass.Common.BL_Win32API.SND_ASYNC">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.Common.BL_Win32API.SND_FILENAME">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.Common.BL_Win32API.SND_MEMORY">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.Common.BL_Win32API.SND_LOOP">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.Common.BL_Win32API.RESOURCE_CONNECTED">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.Common.BL_Win32API.RESOURCE_GLOBALNET">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.Common.BL_Win32API.RESOURCE_REMEMBERED">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.Common.BL_Win32API.RESOURCETYPE_ANY">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.Common.BL_Win32API.RESOURCETYPE_DISK">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.Common.BL_Win32API.RESOURCETYPE_PRINT">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.Common.BL_Win32API.RESOURCEDISPLAYTYPE_GENERIC">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.Common.BL_Win32API.RESOURCEDISPLAYTYPE_DOMAIN">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.Common.BL_Win32API.RESOURCEDISPLAYTYPE_SERVER">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.Common.BL_Win32API.RESOURCEDISPLAYTYPE_SHARE">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.Common.BL_Win32API.RESOURCEUSAGE_CONNECTABLE">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.Common.BL_Win32API.RESOURCEUSAGE_CONTAINER">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.Common.BL_Win32API.CONNECT_UPDATE_PROFILE">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.Common.BL_Win32API.API_PlaySound(System.String,System.IntPtr,System.UInt32)">
            <summary>
            
            </summary>
            <param name="szSound"></param>
            <param name="hMod"></param>
            <param name="flags"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Common.BL_Win32API.API_PlaySound(System.Byte[],System.IntPtr,System.UInt32)">
            <summary>
            
            </summary>
            <param name="szSound"></param>
            <param name="hMod"></param>
            <param name="flags"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Common.BL_Win32API.API_PlaySound(System.IntPtr,System.IntPtr,System.UInt32)">
            <summary>
            
            </summary>
            <param name="szSound"></param>
            <param name="hMod"></param>
            <param name="flags"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Common.BL_Win32API.API_MessageBeep(System.UInt32)">
            <summary>
            
            </summary>
            <param name="uType"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Common.BL_Win32API.API_Beep(System.UInt32,System.UInt32)">
            <summary>
            
            </summary>
            <param name="frequency"></param>
            <param name="duration"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Common.BL_Win32API.API_WNetAddConnection2(BelicsClass.Common.BL_Win32API.NETRESOURCE@,System.String,System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="lpNetResource"></param>
            <param name="lpPassword"></param>
            <param name="lpUsername"></param>
            <param name="dwFlags"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Common.BL_Win32API.API_WNetCancelConnection2(System.String,System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <param name="lpName"></param>
            <param name="dwFlags"></param>
            <param name="fForce"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Common.BL_Win32API.Sleep(System.Int32)">
            <summary>
            指定したミリ秒数の間現在のスレッドをブロックします。
            </summary>
            <param name="millisecondsTimeout">スレッドがブロックされるミリ秒数を指定します。</param>
        </member>
        <member name="P:BelicsClass.Common.BL_Win32API.TickCount">
            <summary>
            システム起動後のミリ秒単位の経過時間を取得します。
            </summary>
        </member>
        <member name="P:BelicsClass.Common.BL_Win32API.TickCount64">
            <summary>
            システム起動後のミリ秒単位の経過時間を取得します。
            </summary>
        </member>
        <member name="T:BelicsClass.Common.BL_Win32API.NETRESOURCE">
            <summary>
            
            </summary>
        </member>
        <member name="F:BelicsClass.Common.BL_Win32API.NETRESOURCE.dwScope">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.Common.BL_Win32API.NETRESOURCE.dwType">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.Common.BL_Win32API.NETRESOURCE.dwDisplayType">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.Common.BL_Win32API.NETRESOURCE.dwUsage">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.Common.BL_Win32API.NETRESOURCE.lpLocalName">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.Common.BL_Win32API.NETRESOURCE.lpRemoteName">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.Common.BL_Win32API.NETRESOURCE.lpComment">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.Common.BL_Win32API.NETRESOURCE.lpProvider">
            <summary></summary>
        </member>
        <member name="T:BelicsClass.Common.BL_Stopwatch">
            <summary>
            ストップウォッチクラス
            </summary>
        </member>
        <member name="M:BelicsClass.Common.BL_Stopwatch.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:BelicsClass.Common.BL_Stopwatch.Reset">
            <summary>
            ストップウォッチをリセットします。
            </summary>
        </member>
        <member name="M:BelicsClass.Common.BL_Stopwatch.Start">
            <summary>
            ストップウォッチを開始します。
            </summary>
        </member>
        <member name="M:BelicsClass.Common.BL_Stopwatch.Restart">
            <summary>
            ストップウォッチを停止して開始します
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Common.BL_Stopwatch.Stop">
            <summary>
            ストップウォッチを停止します。
            </summary>
        </member>
        <member name="P:BelicsClass.Common.BL_Stopwatch.IsRunning">
            <summary>
            タイマー実行中を表します。
            </summary>
        </member>
        <member name="P:BelicsClass.Common.BL_Stopwatch.ElapsedMilliseconds">
            <summary>
            経過ミリ秒を取得します。
            </summary>
        </member>
        <member name="T:BelicsClass.Common.BL_HRTimer">
            <summary>
            高精度タイマー
            </summary>
        </member>
        <member name="M:BelicsClass.Common.BL_HRTimer.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:BelicsClass.Common.BL_HRTimer.Reset">
            <summary>
            ストップウォッチをリセットします。
            </summary>
        </member>
        <member name="M:BelicsClass.Common.BL_HRTimer.Start">
            <summary>
            ストップウォッチを開始します。
            </summary>
        </member>
        <member name="M:BelicsClass.Common.BL_HRTimer.Restart">
            <summary>
            再起動
            </summary>
        </member>
        <member name="M:BelicsClass.Common.BL_HRTimer.Stop">
            <summary>
            ストップウォッチを停止します。
            </summary>
        </member>
        <member name="M:BelicsClass.Common.BL_HRTimer.Dispose">
            <summary>
            破棄
            </summary>
        </member>
        <member name="P:BelicsClass.Common.BL_HRTimer.IsRunning">
            <summary>
            タイマー実行中を表します。
            </summary>
        </member>
        <member name="P:BelicsClass.Common.BL_HRTimer.ElapsedMilliseconds">
            <summary>
            経過時間(ms)
            </summary>
        </member>
        <member name="T:BelicsClass.UI.Graph.BL_Graph">
            <summary>
            グラフを描画するコントロールです
            </summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Graph.components">
            <summary> 
            必要なデザイナー変数です。
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.Dispose(System.Boolean)">
            <summary> 
            使用中のリソースをすべてクリーンアップします。
            </summary>
            <param name="disposing">マネージ リソースが破棄される場合 true、破棄されない場合は false です。</param>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.InitializeComponent">
            <summary> 
            デザイナー サポートに必要なメソッドです。このメソッドの内容を 
            コード エディターで変更しないでください。
            </summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Graph.seriesCollection">
            <summary>軸のデータを取得または設定します</summary>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.#ctor">
            <summary>
            デフォルトコンストラクタ
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.AddSeries(System.String,BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis,BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis,System.Drawing.Pen,BelicsClass.UI.Graph.BL_Graph.BL_GraphData_Base[])">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="xaxis"></param>
            <param name="yaxis"></param>
            <param name="brushpen"></param>
            <param name="points"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.SetScrollXTarget(System.String)">
            <summary>
            横スクロールバーの操作対称軸を設定します
            </summary>
            <param name="axis_name"></param>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.SetScrollYTarget(System.String)">
            <summary>
            縦スクロールバーの操作対称軸を設定します
            </summary>
            <param name="axis_name"></param>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.AddXRange(System.String,System.Int64,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="axis_name"></param>
            <param name="range"></param>
            <param name="guideinner"></param>
            <param name="guideouter"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.trackBarX_Scroll(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Graph.VisibleHeader">
            <summary></summary>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Graph.VisibleFooter">
            <summary></summary>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Graph.VisibleCursor">
            <summary></summary>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Graph.PlotBackColor">
            <summary>描画領域の背景色を取得または設定します</summary>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Graph.GraphBorderStyle">
            <summary>グラフ領域全域の背景色を取得または設定します</summary>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Graph.PlotBorderStyle">
            <summary>描画領域の背景色を取得または設定します</summary>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Graph.CursorXColor">
            <summary>カーソル色を取得または設定します</summary>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Graph.Item(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Graph.Item(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:BelicsClass.UI.Graph.BL_Graph.BL_GraphData_Base">
            <summary>
            グラフ描画のポイントデータを管理する基本クラスです
            </summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Graph.BL_GraphData_Base.x">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Graph.BL_GraphData_Base.y">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Graph.BL_GraphData_Base.PerX">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphData_Base.#ctor">
            <summary>
            デフォルトコンストラクタ
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphData_Base.Draw(System.Drawing.Graphics,BelicsClass.UI.Graph.BL_Graph.BL_GraphSeries,BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis,BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis,System.Int32,System.Int32)">
            <summary>
            ポイント間を描画するための基本仮想メソッド
            </summary>
            <param name="g"></param>
            <param name="series"></param>
            <param name="xaxis"></param>
            <param name="yaxis"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphData_Base.GetPositionY(BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis)">
            <summary>
            
            </summary>
            <param name="yaxis"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphData_Base.GetPositionX(BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis)">
            <summary>
            
            </summary>
            <param name="xaxis"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphData_Base.ToStringY(BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis,System.String)">
            <summary>
            
            </summary>
            <param name="yaxis"></param>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Graph.BL_GraphData_Base.PrevValue">
            <summary></summary>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Graph.BL_GraphData_Base.NextValue">
            <summary></summary>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Graph.BL_GraphData_Base.BrushPen">
            <summary>線の描画色を取得または設定します</summary>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Graph.BL_GraphData_Base.X">
            <summary></summary>
        </member>
        <member name="T:BelicsClass.UI.Graph.BL_Graph.BL_GraphLine">
            <summary>
            折れ線データのポイントを保持して、描画処理を行います
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphLine.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphLine.#ctor(System.Int64,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphLine.#ctor(System.Int64,System.Double,System.Drawing.Pen)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="brushpen"></param>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphLine.Draw(System.Drawing.Graphics,BelicsClass.UI.Graph.BL_Graph.BL_GraphSeries,BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis,BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis,System.Int32,System.Int32)">
            <summary>
            ポイント間を接続する線を描画します
            </summary>
            <param name="g"></param>
            <param name="series"></param>
            <param name="xaxis"></param>
            <param name="yaxis"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphLine.GetPositionY(BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis)">
            <summary>
            
            </summary>
            <param name="yaxis"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphLine.GetPositionX(BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis)">
            <summary>
            
            </summary>
            <param name="xaxis"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphLine.ToStringY(BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis,System.String)">
            <summary>
            
            </summary>
            <param name="yaxis"></param>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Graph.BL_GraphLine.Y">
            <summary></summary>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Graph.BL_GraphLine.PrevValue">
            <summary></summary>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Graph.BL_GraphLine.NextValue">
            <summary></summary>
        </member>
        <member name="T:BelicsClass.UI.Graph.BL_Graph.BL_GraphLineComplement">
            <summary>
            折れ線データのポイントを保持して、描画処理を行います
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphLineComplement.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphLineComplement.#ctor(System.Int64,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphLineComplement.#ctor(System.Int64,System.Double,System.Drawing.Pen)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="brushpen"></param>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphLineComplement.GetPositionY(BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis)">
            <summary>
            
            </summary>
            <param name="yaxis"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphLineComplement.GetPositionX(BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis)">
            <summary>
            
            </summary>
            <param name="xaxis"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphLineComplement.ToStringY(BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis,System.String)">
            <summary>
            
            </summary>
            <param name="yaxis"></param>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="T:BelicsClass.UI.Graph.BL_Graph.BL_GraphLineStep">
            <summary>
            
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphLineStep.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphLineStep.#ctor(System.Int64,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphLineStep.#ctor(System.Int64,System.Double,System.Drawing.Pen)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="brushpen"></param>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphLineStep.Draw(System.Drawing.Graphics,BelicsClass.UI.Graph.BL_Graph.BL_GraphSeries,BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis,BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis,System.Int32,System.Int32)">
            <summary>
            ポイント間を接続する線を描画します
            </summary>
            <param name="g"></param>
            <param name="series"></param>
            <param name="xaxis"></param>
            <param name="yaxis"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="T:BelicsClass.UI.Graph.BL_Graph.BL_GraphBlock">
            <summary>
            矩形データのポイントを保持して、矩形描画処理を行います
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphBlock.#ctor">
            <summary>
            デフォルトコンストラクタ
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphBlock.#ctor(System.Int64,BelicsClass.UI.Graph.BL_Graph.BL_GraphBlock.BlockObject)">
            <summary>
            コンストラクタ
            </summary>
            <param name="x"></param>
            <param name="block"></param>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphBlock.Draw(System.Drawing.Graphics,BelicsClass.UI.Graph.BL_Graph.BL_GraphSeries,BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis,BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis,System.Int32,System.Int32)">
            <summary>
            データ量によって、矩形を描画します
            </summary>
            <param name="g"></param>
            <param name="series"></param>
            <param name="xaxis"></param>
            <param name="yaxis"></param>
            <param name="width"></param>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphBlock.ToStringY(BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis,System.String)">
            <summary>
            
            </summary>
            <param name="yaxis"></param>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphBlock.GetPositionX(BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis)">
            <summary>
            
            </summary>
            <param name="xaxis"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphBlock.GetPositionY(BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis)">
            <summary>
            
            </summary>
            <param name="yaxis"></param>
            <returns></returns>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Graph.BL_GraphBlock.Y">
            <summary></summary>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Graph.BL_GraphBlock.Block">
            <summary></summary>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Graph.BL_GraphBlock.PrevValue">
            <summary></summary>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Graph.BL_GraphBlock.NextValue">
            <summary></summary>
        </member>
        <member name="T:BelicsClass.UI.Graph.BL_Graph.BL_GraphBlock.BlockObject">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Graph.BL_GraphBlock.BlockObject.blockvolumeX">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Graph.BL_GraphBlock.BlockObject.height">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Graph.BL_GraphBlock.BlockObject.brush">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphBlock.BlockObject.#ctor">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphBlock.BlockObject.#ctor(System.Int64,System.Double,System.Drawing.Brush)">
            <summary>
            
            </summary>
            <param name="blockvolume"></param>
            <param name="height"></param>
            <param name="brush"></param>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphBlock.BlockObject.#ctor(BelicsClass.UI.Graph.BL_Graph.BL_GraphBlock.BlockObject)">
            <summary>
            
            </summary>
            <param name="source"></param>
        </member>
        <member name="T:BelicsClass.UI.Graph.BL_Graph.BL_GraphBlock_MultiUp">
            <summary>
            矩形データのポイントを保持して、矩形描画処理を行います
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphBlock_MultiUp.#ctor">
            <summary>
            デフォルトコンストラクタ
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphBlock_MultiUp.#ctor(System.Int64,BelicsClass.UI.Graph.BL_Graph.BL_GraphBlock_MultiUp.BlockObject_MultiUp)">
            <summary>
            コンストラクタ
            </summary>
            <param name="x"></param>
            <param name="block"></param>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphBlock_MultiUp.Draw(System.Drawing.Graphics,BelicsClass.UI.Graph.BL_Graph.BL_GraphSeries,BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis,BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis,System.Int32,System.Int32)">
            <summary>
            データ量によって、矩形を描画します
            </summary>
            <param name="g"></param>
            <param name="series"></param>
            <param name="xaxis"></param>
            <param name="yaxis"></param>
            <param name="width"></param>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Graph.BL_GraphBlock_MultiUp.Block">
            <summary></summary>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Graph.BL_GraphBlock_MultiUp.Y">
            <summary></summary>
        </member>
        <member name="T:BelicsClass.UI.Graph.BL_Graph.BL_GraphBlock_MultiUp.BlockObject_MultiUp">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Graph.BL_GraphBlock_MultiUp.BlockObject_MultiUp.MultiUpMax">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Graph.BL_GraphBlock_MultiUp.BlockObject_MultiUp.height">
            <summary></summary>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Graph.BL_GraphBlock_MultiUp.BlockObject_MultiUp.Item(System.Int32)">
            <summary></summary>
        </member>
        <member name="T:BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis">
            <summary>
            軸の設定を管理するクラスです
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis.#ctor">
            <summary>
            デフォルトコンストラクタ
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis.#ctor(System.String,System.Int64,System.Int64,System.Int32,System.Int32,System.Int64,BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis.axisPosition,System.Int32,System.String,System.Boolean,System.Single)">
            <summary>
            コンストラクタ
            </summary>
            <param name="name">軸名称</param>
            <param name="range">軸レンジ幅</param>
            <param name="offset">軸シフト量</param>
            <param name="guidewidth_inner">ガイド線描画幅(内側)</param>
            <param name="guidewidth_outer">ガイド線描画幅(外側)</param>
            <param name="separate_volume">データが存在しない場合に線を切り離す基準量</param>
            <param name="position">軸ガイド表示位置</param>
            <param name="width">軸ガイド表示幅(高さ)</param>
            <param name="format">軸ガイド値表示フォーマット</param>
            <param name="righttoleft">右→左</param>
            <param name="zoom"></param>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis.RealX(System.Int64)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis.Draw(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,BelicsClass.UI.Graph.BL_Graph.BL_GraphSeries,System.Boolean,System.Boolean)">
            <summary>
            軸の目盛エリアを描画します
            </summary>
            <param name="g"></param>
            <param name="width"></param>
            <param name="offset"></param>
            <param name="axisoffset"></param>
            <param name="series"></param>
            <param name="drawcursoronly"></param>
            <param name="cursorenabled"></param>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis.GetOffset">
            <summary>
            軸のオフセット位置を取得します
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis.GetPixelVolume">
            <summary>
            1ピクセルあたりのデータ量を取得します
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis.GetPixels(System.Double)">
            <summary>
            データ量に相当するピクセル数を取得します
            </summary>
            <param name="volume"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis.GetPosition(System.Int64)">
            <summary>
            データ量に相当する表示位置を取得します
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis.GetPosition(System.Double)">
            <summary>
            データ量に相当する表示位置を取得します
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis.Position(System.Int32)">
            <summary>
            ピクセル位置を正規化します
            </summary>
            <param name="position"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis.Position(System.Single)">
            <summary>
            ピクセル位置を正規化します
            </summary>
            <param name="position"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis.Position(System.Double)">
            <summary>
            ピクセル位置を正規化します
            </summary>
            <param name="position"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis.GetVolume(System.Single)">
            <summary>
            ピクセル数に相当するデータ量を取得します
            </summary>
            <param name="pixel"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis.GetValue(System.Single)">
            <summary>
            ピクセル位置に相当するデータ量を取得します
            </summary>
            <param name="pixel"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis.ToString(System.Int64)">
            <summary>
            データ量を示す文字列を取得します
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis.ToString(System.Double)">
            <summary>
            データ量を示す文字列を取得します
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis.ToString(System.Single,System.Int32)">
            <summary>
            ピクセル位置に相当するデータ量を示す文字列を取得します
            </summary>
            <param name="pixel"></param>
            <param name="width"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis.IsContinueLine(BelicsClass.UI.Graph.BL_Graph.BL_GraphData_Base,BelicsClass.UI.Graph.BL_Graph.BL_GraphData_Base)">
            <summary>
            線を結線するか否かを取得します
            </summary>
            <param name="now"></param>
            <param name="prev"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis.IsVisible(System.Int64)">
            <summary>
            データ量が表示領域内であるか否かを取得します
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis.Scroll_Changed(System.Int32)">
            <summary>
            スクロール操作による描画位置を調整します
            </summary>
            <param name="NewValue"></param>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis.Scroll_Update">
            <summary>
            スクロールバーを更新します
            </summary>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis.Name">
            <summary>軸名称を取得または設定します</summary>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis.Range">
            <summary>軸スケール(1pixelあたりのデータ量)を取得または設定します。100を設定すると1pixelあたり100として描画されます</summary>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis.GuidelineWidthInner">
            <summary>チャート内のガイド目盛線を描画するデータ量を取得または設定します(0で描画しません)</summary>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis.GuidelineWidthOuter">
            <summary>チャート外の軸目盛線を描画するデータ量を取得または設定します(0で描画しません)</summary>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis.GuidelineWidthInnerVolume">
            <summary>チャート内のガイド目盛線を描画するデータ量を取得または設定します(0で描画しません)</summary>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis.GuidelineWidthOuterVolume">
            <summary>チャート外の軸目盛線を描画するデータ量を取得または設定します(0で描画しません)</summary>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis.SeparateVolume">
            <summary>データ無しとして線を切り離す基準となるデータ量を取得または設定します。</summary>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis.AxisPosition">
            <summary>軸目盛の表示位置</summary>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis.AxisWidth">
            <summary>軸目盛の表示幅（高さ）</summary>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis.AxisFormat">
            <summary>軸目盛の表示フォーマット</summary>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis.RightToLeft">
            <summary>右(上)から左(下)の方向を正とする</summary>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis.Zoom">
            <summary>軸値の倍率</summary>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis.Scale">
            <summary>軸値の倍率</summary>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis.Offset">
            <summary>最新の表示位置を表す値</summary>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis.SmoothMove">
            <summary>メモリ区切り時間を追いかけて表示を移動する</summary>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis.IsHold">
            <summary>表示が固定されているか否かを表すフラグ</summary>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis.HoldOffset">
            <summary>固定されている表示位置を表す値</summary>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis.CursorPixel">
            <summary>カーソル位置を取得または設定します</summary>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis.LocalScale">
            <summary>固定されている表示位置を表す値</summary>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis.ControlWidth">
            <summary>軸目盛エリアの表示幅</summary>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis.Scrollbar">
            <summary>スクロールバーコントロールを取得または設定します</summary>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis.ControlOwner">
            <summary>グラフコントロールを取得または設定します</summary>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis.ScrollPosition">
            <summary>直前のスクロールバー位置を取得します</summary>
        </member>
        <member name="T:BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis.axisPosition">
            <summary>軸目盛の表示位置を表す列挙体</summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis.axisPosition.None">
            <summary>軸目盛表示なし</summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis.axisPosition.Left">
            <summary>左</summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis.axisPosition.Right">
            <summary>右</summary>
        </member>
        <member name="F:BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis.axisPosition.Bottom">
            <summary>下</summary>
        </member>
        <member name="T:BelicsClass.UI.Graph.BL_Graph.BL_GraphAxisDateTime">
            <summary>
            軸の設定を管理するクラスです(時間用)
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphAxisDateTime.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphAxisDateTime.#ctor(System.String,System.Int64,System.Int32,System.Int32,System.Int64,BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis.axisPosition,System.Int32,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="range"></param>
            <param name="guidewidth_inner"></param>
            <param name="guidewidth_outer"></param>
            <param name="separate_volume"></param>
            <param name="position"></param>
            <param name="width"></param>
            <param name="format"></param>
            <param name="righttoleft"></param>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphAxisDateTime.ToString(System.Int64)">
            <summary>
            日時を表す文字列を取得します
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="T:BelicsClass.UI.Graph.BL_Graph.BL_GraphSeries">
            <summary>
            軸のデータを管理するクラスです
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphSeries.#ctor(BelicsClass.UI.Graph.BL_Graph,System.String,BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis,BelicsClass.UI.Graph.BL_Graph.BL_GraphAxis,System.Drawing.Pen,BelicsClass.UI.Graph.BL_Graph.BL_GraphData_Base[])">
            <summary>
            コンストラクタ
            </summary>
            <param name="parent"></param>
            <param name="name"></param>
            <param name="axisX"></param>
            <param name="axisY"></param>
            <param name="brushpen"></param>
            <param name="pointCollection"></param>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphSeries.Draw(System.Drawing.Graphics,System.Int32,System.Int32)">
            <summary>
            XYプロット領域を描画します
            </summary>
            <param name="g"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphSeries.GetYValue(System.Int64)">
            <summary>
            X軸値に対応するY軸値を取得します
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphSeries.GetCursorYValue">
            <summary>
            カーソル位置のY軸値を表す文字列取得します
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphSeries.GetCursorYValueText">
            <summary>
            カーソル位置のY軸値を表す文字列取得します
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.Graph.BL_Graph.BL_GraphSeries.Add(BelicsClass.UI.Graph.BL_Graph.BL_GraphData_Base)">
            <summary>
            XYデータを追加して、保持データ内での最大・最小値を更新します
            </summary>
            <param name="newpoint"></param>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Graph.BL_GraphSeries.Name">
            <summary>シリーズ名称を取得または設定します</summary>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Graph.BL_GraphSeries.AxisX">
            <summary>X軸設定を取得または設定します</summary>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Graph.BL_GraphSeries.AxisY">
            <summary>Y軸設定を取得または設定します</summary>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Graph.BL_GraphSeries.PointCollection">
            <summary>シリーズのデータを取得します</summary>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Graph.BL_GraphSeries.BrushPen">
            <summary>線の描画色を取得または設定します</summary>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Graph.BL_GraphSeries.MinimumX">
            <summary>X軸値の最小オブジェクトを取得します</summary>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Graph.BL_GraphSeries.MaximumX">
            <summary>X軸値の最大オブジェクトを取得します</summary>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Graph.BL_GraphSeries.MinimumY">
            <summary>Y軸値の最小オブジェクトを取得します</summary>
        </member>
        <member name="P:BelicsClass.UI.Graph.BL_Graph.BL_GraphSeries.MaximumY">
            <summary>Y軸値の最大オブジェクトを取得します</summary>
        </member>
        <member name="T:BelicsClass.Database.BL_Oracle">
            <summary>
            ORACLEへ接続します。
            Oracle Client Software 8.1.7以降が必要です。
            </summary>
        </member>
        <member name="M:BelicsClass.Database.BL_Oracle.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:BelicsClass.Database.BL_Oracle.GetConnectionString(System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="initialCatalog"></param>
            <param name="dataSource"></param>
            <param name="userID"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Database.BL_Oracle.GetDbCommand(System.String,System.Data.Common.DbConnection)">
            <summary>
            
            </summary>
            <param name="cmdText"></param>
            <param name="connection"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Database.BL_Oracle.GetDbDataAdapter(System.Data.Common.DbCommand)">
            <summary>
            
            </summary>
            <param name="selectCommand"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Database.BL_Oracle.GetDbCommandBuilder(System.Data.Common.DbDataAdapter)">
            <summary>
            
            </summary>
            <param name="adapter"></param>
            <returns></returns>
        </member>
        <member name="T:BelicsClass.Common.BL_Impersonate">
            <summary>
            Windows ユーザは、.NET Framework では WindowsIdentity クラスで表します。このクラスのメンバに、他のユーザに偽装する Impersonate メソッドがあります。
            しかし、ログインするという行為は、.NET Frameowork の外にある概念です。したがって、.NET Framwework では、ユーザ名とパスワードを確認するような仕組みは提供されていません。なので、Platform Invoke（プラットフォーム呼び出し P/Invoke）を行います。
            今回使用するのは、LogonUser 関数です。第２引数で指定したドメインに属する、第１引数で指定したユーザに、第３引数で指定したパスワードを使ってログインを試みます。ローカル ユーザに偽装する場合、第２引数にはマシン名を入力します。
            偽装を解除するには、偽装操作を行う前の Windows ユーザーを表す、WindowsImpersonationContext クラスのメンバ メソッドである、Undo メソッドを使います。
            なお、第４引数で指定した、LOGON32_LOGON_INTERACTIVE は、デスクトップとの対話処理をするために、偽装するユーザのプロファイルを読み込みます。これにより、レジストリの HKCU ハイブを操作したり、画面のあるプロセスを起動することが出来るようになります。これはまた、セキュリティ上のリスクともなり得ますので、第４引数の指定はよく注意しておこなってください。
            一連の流れを説明します。
             1.
            現在偽装していないことを確認する（RevertToSelf）
             2.
            偽装するユーザの、ユーザ名とパスワードを確認する（LogonUser）
             3.
            現在ログイン中のユーザのコンテキストを複製する（DuplicateToken）
             4.
            偽装したユーザで処理を行う
             5.
            偽装を解除する（Undo）
            このうち、「偽装したユーザで処理を行う」以外は、定型処理になります。今回紹介する Impersonate クラスは、定型処理を１つのクラスとしてまとめました（Facade パターン？）。
            Impersonate クラスは IDisposable インターフェイスを実装します。ここで Dispose メソッドは、「偽装を解除する」処理を行います。
            ---使い方---
            Impersonate impersonate = null;
            try {
                impersonate = Impersonate.ImpersonateValidUser("user", "domain", "password");
                // 何らかの処理
            } finally {
                if (impersonate != null) impersonate.Dispose();
            }
            </summary>
        </member>
        <member name="M:BelicsClass.Common.BL_Impersonate.ImpersonateValidUser(System.String,System.String,System.String)">
            <summary>
            別ユーザーの権限での処理を開始する
            Users権限しかないユーザーでログイン中に、Administrators権限が必要な処理を行う場合などに利用してください
            </summary>
            <param name="userName"></param>
            <param name="domain"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Common.BL_Impersonate.Dispose">
            <summary>
            別ユーザーの権限での処理を終了する
            </summary>
        </member>
        <member name="M:BelicsClass.Common.BL_Impersonate.Finalize">
            <summary>
            デストラクタ
            </summary>
        </member>
        <member name="T:BelicsClass.UI.BL_SubForm_MonitorMemory">
            <summary>
            
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_MonitorMemory.FunctionStrings">
            <summary>
            ファンクションキー文字列をMainFormに取得させるために必要です。
            </summary>
            <returns></returns>
        </member>
        <member name="F:BelicsClass.UI.BL_SubForm_MonitorMemory.mem">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_MonitorMemory.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_MonitorMemory.#ctor(System.Boolean)">
            <summary>
            
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_MonitorMemory.#ctor(BelicsClass.ObjectSync.BL_FaceMemorySyncNotify)">
            <summary>
            
            </summary>
            <param name="mem"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_MonitorMemory.#ctor(BelicsClass.ObjectSync.BL_FaceMemorySyncNotify,System.Boolean)">
            <summary>
            
            </summary>
            <param name="mem"></param>
            <param name="resizer"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_MonitorMemory.#ctor(BelicsClass.ObjectSync.BL_FaceMemorySyncNotify,System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="mem"></param>
            <param name="resizer"></param>
            <param name="noreadmemory"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_MonitorMemory.SubForm_Base_Load(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_MonitorMemory.SubForm_Base_Activated(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_MonitorMemory.SubForm_Base_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_MonitorMemory.SubForm_Base_Function02_Clicked(System.Object)">
            <summary>
            
            </summary>
            <param name="sender"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_MonitorMemory.SubForm_Base_Function08_Clicked(System.Object)">
            <summary>
            
            </summary>
            <param name="sender"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_MonitorMemory.SubForm_Base_Function12_Clicked(System.Object)">
            <summary>
            
            </summary>
            <param name="sender"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_MonitorMemory.checkBoxBoolean_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_MonitorMemory.lvwField_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_MonitorMemory.SubForm_Base_Function04_Clicked(System.Object)">
            <summary>
            
            </summary>
            <param name="sender"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_MonitorMemory.SubForm_Base_Function05_Clicked(System.Object)">
            <summary>
            
            </summary>
            <param name="sender"></param>
        </member>
        <member name="F:BelicsClass.UI.BL_SubForm_MonitorMemory.components">
            <summary>
            必要なデザイナー変数です。
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_MonitorMemory.Dispose(System.Boolean)">
            <summary>
            使用中のリソースをすべてクリーンアップします。
            </summary>
            <param name="disposing">マネージ リソースが破棄される場合 true、破棄されない場合は false です。</param>
        </member>
        <member name="M:BelicsClass.UI.BL_SubForm_MonitorMemory.InitializeComponent">
            <summary>
            デザイナー サポートに必要なメソッドです。このメソッドの内容を
            コード エディターで変更しないでください。
            </summary>
        </member>
        <member name="F:BelicsClass.UI.BL_SubForm_MonitorMemory.lvwField">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_SubForm_MonitorMemory.checkBoxBoolean">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_SubForm_MonitorMemory.textBoxUpdateValue">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_SubForm_MonitorMemory.label1">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_SubForm_MonitorMemory.treeView1">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_SubForm_MonitorMemory.splitContainer1">
            <summary></summary>
        </member>
        <member name="P:BelicsClass.UI.BL_SubForm_MonitorMemory._TitleString">
            <summary>
            ウィンドウタイトル文字列をMainFormに取得させるために必要です。
            </summary>
            <returns></returns>
        </member>
        <member name="T:BelicsClass.UI.BL_ScreenFilter">
            <summary>
            半透明クリック防護フォーム
            </summary>
        </member>
        <member name="F:BelicsClass.UI.BL_ScreenFilter.components">
            <summary>
            必要なデザイナ変数です。
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_ScreenFilter.Dispose(System.Boolean)">
            <summary>
            使用中のリソースをすべてクリーンアップします。
            </summary>
            <param name="disposing">マネージ リソースが破棄される場合 true、破棄されない場合は false です。</param>
        </member>
        <member name="M:BelicsClass.UI.BL_ScreenFilter.InitializeComponent">
            <summary>
            デザイナ サポートに必要なメソッドです。このメソッドの内容を
            コード エディタで変更しないでください。
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_ScreenFilter.#ctor">
            <summary>
            コンストラクタです
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_ScreenFilter.SetFilerAria(System.Windows.Forms.Form)">
            <summary>
            フォームサイズの初期化
            ExcludeLocationとExcludeSizeが設定されているときにのみ有効です。
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_ScreenFilter.ShowKeep(System.Windows.Forms.Form,System.Drawing.Color,System.Double)">
            <summary>
            防護フォームを表示します
            </summary>
            <param name="owner">防護対象のオーナーフォーム</param>
            <param name="backColor">防護フィルタの背景色</param>
            <param name="Opacity">防護フィルタの不透明度</param>
        </member>
        <member name="M:BelicsClass.UI.BL_ScreenFilter.ShowKeep(System.Windows.Forms.Form)">
            <summary>
            防護フォームを表示します。
            </summary>
            <param name="owner">防護対象のオーナーフォーム</param>
        </member>
        <member name="M:BelicsClass.UI.BL_ScreenFilter.TransparentFilterForm_Load(System.Object,System.EventArgs)">
            <summary>
            フォームロード
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_ScreenFilter.OnClick(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_ScreenFilter.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:BelicsClass.UI.BL_ScreenFilter.ExcludeLocation">
            <summary>
            防護対象外エリアの左上座標を設定・取得します。
            </summary>
        </member>
        <member name="P:BelicsClass.UI.BL_ScreenFilter.ExcludeSize">
            <summary>
            防護対象外エリアのサイズを設定・取得します。
            </summary>
        </member>
        <member name="T:BelicsClass.UI.BL_KeyHook">
            <summary>
            キーフック制御クラス
            キー操作をフックした際に、イベント「KeyHookEvent」をコールします。
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_KeyHook.#ctor">
            <summary>
            コンストラクタ
            キーフック開始
            フック処理に失敗すると例外を吐きます。
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_KeyHook.#ctor(System.Windows.Forms.Form)">
            <summary>
            コンストラクタ
            キーフック開始
            フック処理に失敗すると例外を吐きます。
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_KeyHook.Dispose">
            <summary>
            破棄
            キーフック解除
            </summary>
        </member>
        <member name="E:BelicsClass.UI.BL_KeyHook.KeyHookEvent">
            <summary>
            キーフックイベント
            </summary>
        </member>
        <member name="T:BelicsClass.UI.BL_KeyHook.KBDLLHOOKSTRUCT">
            <summary>
            キーボード情報構造体(WIN32)
            </summary>
        </member>
        <member name="F:BelicsClass.UI.BL_KeyHook.KBDLLHOOKSTRUCT.vkCode">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_KeyHook.KBDLLHOOKSTRUCT.scanCode">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_KeyHook.KBDLLHOOKSTRUCT.flags">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_KeyHook.KBDLLHOOKSTRUCT.time">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_KeyHook.KBDLLHOOKSTRUCT.dwExtraInfo">
            <summary></summary>
        </member>
        <member name="T:BelicsClass.UI.BL_KeyHook.KBDLLHOOKSTRUCTFlags">
            <summary>
            Flags
            </summary>
        </member>
        <member name="F:BelicsClass.UI.BL_KeyHook.KBDLLHOOKSTRUCTFlags.LLKHF_EXTENDED">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_KeyHook.KBDLLHOOKSTRUCTFlags.LLKHF_INJECTED">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_KeyHook.KBDLLHOOKSTRUCTFlags.LLKHF_ALTDOWN">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.BL_KeyHook.KBDLLHOOKSTRUCTFlags.LLKHF_UP">
            <summary></summary>
        </member>
        <member name="T:BelicsClass.UI.BL_KeyHook.HookInfo">
            <summary>
            キーボード押下情報クラス
            </summary>
        </member>
        <member name="F:BelicsClass.UI.BL_KeyHook.HookInfo.vkCode">
            <summary>キーコード</summary>
        </member>
        <member name="F:BelicsClass.UI.BL_KeyHook.HookInfo.scanCode">
            <summary>スキャンコード</summary>
        </member>
        <member name="F:BelicsClass.UI.BL_KeyHook.HookInfo.flags">
            <summary>フラグ</summary>
        </member>
        <member name="F:BelicsClass.UI.BL_KeyHook.HookInfo.time">
            <summary>時間</summary>
        </member>
        <member name="F:BelicsClass.UI.BL_KeyHook.HookInfo.dwExtraInfo">
            <summary>拡張情報</summary>
        </member>
        <member name="M:BelicsClass.UI.BL_KeyHook.HookInfo.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_KeyHook.HookInfo.#ctor(BelicsClass.UI.BL_KeyHook.KBDLLHOOKSTRUCT)">
            <summary>
            コンストラクタ
            </summary>
            <param name="kb">キーボード押下情報クラス</param>
        </member>
        <member name="T:BelicsClass.UI.BL_KeyHook.KeyHookEventHandler">
            <summary>
            キーフックイベントハンドラー
            </summary>
            <param name="sender"></param>
            <param name="hookinfo"></param>
        </member>
        <member name="T:BelicsClass.UI.Report.BL_ReportControl_Base">
            <summary>
            レポートフォームを管理するコントロールの基本クラス
            フォームに貼り付けて使用してください。
            </summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportControl_Base.components">
            <summary> 
            必要なデザイナー変数です。
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportControl_Base.Dispose(System.Boolean)">
            <summary> 
            使用中のリソースをすべてクリーンアップします。
            </summary>
            <param name="disposing">マネージ リソースが破棄される場合 true、破棄されない場合は false です。</param>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportControl_Base.InitializeComponent">
            <summary> 
            デザイナー サポートに必要なメソッドです。このメソッドの内容を 
            コード エディターで変更しないでください。
            </summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportControl_Base.panelPrintForm">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportControl_Base.printerPreview">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportControl_Base.comboBoxPrinterList">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportControl_Base.listBoxPageList">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportControl_Base.splitContainer1">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportControl_Base.splitContainer2">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportControl_Base.buttonPrint">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportControl_Base.buttonSetting">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportControl_Base.buttonChange">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportControl_Base.buttonCancel">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportControl_Base.buttonUnselectAll">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportControl_Base.buttonSelectAll">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportControl_Base.buttonPrinterSetting">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportControl_Base.m_dicFonts">
            <summary>フォント一覧</summary>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportControl_Base.LoadFontsFromDirectory">
            <summary>
            PDF展開用のフォント一覧を列挙しておく(結構処理時間がかかります)
            </summary>
            <returns></returns>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportControl_Base.m_threadArgs">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportControl_Base.m_thread">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportControl_Base.Document">
            <summary> 内部データです。 </summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportControl_Base.Options">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportControl_Base.Report_DateTime">
            <summary>
            レポート日時
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportControl_Base.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportControl_Base.#ctor(System.Boolean)">
            <summary>
            コンストラクタ
            </summary>
            <param name="collapsed"></param>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportControl_Base.PrintMe(BelicsClass.UI.Report.BL_ReportView_Base[],BelicsClass.UI.Report.BL_ReportControl_Base.PrintOptions,System.Boolean,System.Boolean)">
            <summary>
            レポートのプレビュー表示／印刷処理を行います
            </summary>
            <param name="pages">レポートのページコントロール配列をページ分</param>
            <param name="print_options">印刷オプション</param>
            <param name="direct_printout">プレビュー</param>
            <param name="print_background"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportControl_Base.Initialize">
            <summary>
            レポートに必要な情報を初期化します
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportControl_Base.Initialize(System.Boolean)">
            <summary>
            レポートに必要な情報を初期化します
            </summary>
            <param name="bUsePDF">PDF出力を使わない場合 false</param>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportControl_Base.printerPreview_MouseClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            マウスクリック時の動作
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportControl_Base.pages">
            <summary>
            印刷ページリスト
            </summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportControl_Base.initialized">
            <summary>
            初期化済みフラグ
            </summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportControl_Base.print_parameters">
            <summary>データ抽出条件群</summary>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportControl_Base.Report_Initialize(System.Object[],BelicsClass.UI.Report.BL_ReportControl_Base.PrintOptions)">
            <summary>
            レポート初期化
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportControl_Base.Report_FetchData(System.Object[])">
            <summary>
            複数ページの印刷データを取得します。
            </summary>
            <param name="print_parameters"></param>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportControl_Base.Report_Preview(BelicsClass.UI.Report.BL_ReportControl_Base.PrintOptions)">
            <summary>
            レポート表示更新
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportControl_Base.Report_PreviewTopPage">
            <summary>
            先頭ページをプレビューします
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportControl_Base.Report_PreviewLastPage">
            <summary>
            最終ページをプレビューします
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportControl_Base.Report_PreviewNextPage">
            <summary>
            次ページをプレビューします
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportControl_Base.Report_PreviewPreviousPage">
            <summary>
            前ページをプレビューします
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportControl_Base.Report_Printout">
            <summary>
            印刷します
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportControl_Base.Report_Printout(BelicsClass.UI.Report.BL_ReportControl_Base.PrintOptions)">
            <summary>
            印刷します
            </summary>
            <param name="print_options"></param>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportControl_Base.Report_EditStart">
            <summary>
            編集開始します
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportControl_Base.Report_EditEnd">
            <summary>
            編集終了します
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportControl_Base.Report_EditCancel">
            <summary>
            編集キャンセルします
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportControl_Base.InsertPage(System.Int32,BelicsClass.UI.Report.BL_ReportView_Base)">
            <summary>
            ページを挿入します
            </summary>
            <param name="pageno"></param>
            <param name="source"></param>
        </member>
        <member name="P:BelicsClass.UI.Report.BL_ReportControl_Base.Report_PageCount">
            <summary>
            レポートページ数
            </summary>
        </member>
        <member name="P:BelicsClass.UI.Report.BL_ReportControl_Base.m_Userid">
            <summary>PDFパスワード保護</summary>
        </member>
        <member name="P:BelicsClass.UI.Report.BL_ReportControl_Base.m_Password">
            <summary>PDFパスワード保護</summary>
        </member>
        <member name="P:BelicsClass.UI.Report.BL_ReportControl_Base.HideReportSetting">
            <summary>
            レポート設定領域の可視状態を取得・設定します
            </summary>
        </member>
        <member name="P:BelicsClass.UI.Report.BL_ReportControl_Base.HideReportControl">
            <summary>
            レポート操作領域の可視状態を取得・設定します
            </summary>
        </member>
        <member name="P:BelicsClass.UI.Report.BL_ReportControl_Base.Initialized">
            <summary>
            初期化済みフラグを取得・設定します。
            </summary>
        </member>
        <member name="T:BelicsClass.UI.Report.BL_ReportControl_Base.PrintOptions">
            <summary> プリントオプション </summary>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportControl_Base.PrintOptions.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_ReportControl_Base.PrintOptions.Duplicate(BelicsClass.UI.Report.BL_ReportControl_Base.PrintOptions)">
            <summary>
            複製
            </summary>
            <param name="src">複製元</param>
            <returns></returns>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportControl_Base.PrintOptions.bPrinter">
            <summary>プリンター出力指示</summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportControl_Base.PrintOptions.bPdf">
            <summary>PDF出力指示</summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportControl_Base.PrintOptions.FilePath">
            <summary>PDF保存先ファイルパス</summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportControl_Base.PrintOptions.DocumentName">
            <summary>ドキュメント名</summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportControl_Base.PrintOptions.FixedSiglePenStyle">
            <summary>コントロールのBorderStyleがFixedSingleのときのPen</summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportControl_Base.PrintOptions.Fixed3DPenStyle">
            <summary>コントロールのBorderStyleがFixed3DのときのPen</summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportControl_Base.PrintOptions.TargetPages">
            <summary>印刷対象となるページNoを複数ページ指定します</summary>
        </member>
        <member name="T:BelicsClass.UI.Report.BL_ReportControl_Base.threadArgs">
            <summary> スレッドに渡すデータの塊</summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportControl_Base.threadArgs.m_pages">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportControl_Base.threadArgs.m_progress">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportControl_Base.threadArgs.m_options">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportControl_Base.threadArgs.m_document">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportControl_Base.threadArgs.m_pdfdoc">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Report.BL_ReportControl_Base.threadArgs.m_pdf">
            <summary></summary>
        </member>
        <member name="T:BelicsClass.UI.Controls.BL_VirtualListView">
            <summary>
            仮想リストビューを簡易表示するためのリストビュー継承クラス。
            内部のコレクションに表示データを格納することで、リストビューが表示されます。
            </summary>
        </member>
        <member name="F:BelicsClass.UI.Controls.BL_VirtualListView.WM_MOUSEMOVE">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Controls.BL_VirtualListView.WM_MOUSEHOVER">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Controls.BL_VirtualListView.SelectedItems">
            <summary>
            選択アイテムリスト
            </summary>
        </member>
        <member name="F:BelicsClass.UI.Controls.BL_VirtualListView.Items">
            <summary>
            リスト保持データ
            </summary>
        </member>
        <member name="F:BelicsClass.UI.Controls.BL_VirtualListView.SortedItems">
            <summary>
            リスト保持データ
            </summary>
        </member>
        <member name="F:BelicsClass.UI.Controls.BL_VirtualListView.SortedColumn">
            <summary>
            ソート適用中カラム
            </summary>
        </member>
        <member name="F:BelicsClass.UI.Controls.BL_VirtualListView.NeedRedraw">
            <summary>
            再描画が必要かどうか
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Controls.BL_VirtualListView.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Controls.BL_VirtualListView.Finalize">
            <summary>
            デストラクタ
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Controls.BL_VirtualListView.ItemsClear">
            <summary>
            
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Controls.BL_VirtualListView.EnsureVisible(System.String)">
            <summary>
            
            </summary>
            <param name="item0"></param>
        </member>
        <member name="M:BelicsClass.UI.Controls.BL_VirtualListView.EnsureVisible(BelicsClass.UI.Controls.BL_VirtualListView.BL_VirtualListViewItem)">
            <summary>
            
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:BelicsClass.UI.Controls.BL_VirtualListView.SelectItem(System.String)">
            <summary>
            
            </summary>
            <param name="item0"></param>
        </member>
        <member name="M:BelicsClass.UI.Controls.BL_VirtualListView.SelectItem(BelicsClass.UI.Controls.BL_VirtualListView.BL_VirtualListViewItem)">
            <summary>
            
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:BelicsClass.UI.Controls.BL_VirtualListView.RefreshMe">
            <summary>
            カラム・リストアイテム数を再設定する
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Controls.BL_VirtualListView.RefreshMe(System.Boolean)">
            <summary>
            カラム・リストアイテム数を再設定する
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Controls.BL_VirtualListView.VirtualListView_RetrieveVirtualItem(System.Object,System.Windows.Forms.RetrieveVirtualItemEventArgs)">
            <summary>
            描画データをセットする
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.Controls.BL_VirtualListView.OnSelectedIndexChanged(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.Controls.BL_VirtualListView.OnSizeChanged(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.Controls.BL_VirtualListView.WndProc(System.Windows.Forms.Message@)">
            <summary>
            
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:BelicsClass.UI.Controls.BL_VirtualListView.OnColumnClick(System.Windows.Forms.ColumnClickEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.Controls.BL_VirtualListView.OnDrawColumnHeader(System.Windows.Forms.DrawListViewColumnHeaderEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.Controls.BL_VirtualListView.OnDrawItem(System.Windows.Forms.DrawListViewItemEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.Controls.BL_VirtualListView.OnDrawSubItem(System.Windows.Forms.DrawListViewSubItemEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.Controls.BL_VirtualListView.SaveColumnWidth(System.String)">
            <summary>
            列幅の設定状態をファイルへ保存します。
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:BelicsClass.UI.Controls.BL_VirtualListView.LoadColumnWidth(System.String)">
            <summary>
            列幅の設定状態をファイルから読み込んで復元します。
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:BelicsClass.UI.Controls.BL_VirtualListView.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            選択行をコピーします。
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:BelicsClass.UI.Controls.BL_VirtualListView.StripeBackColor1">
            <summary>
            奇数行の背景色
            </summary>
        </member>
        <member name="P:BelicsClass.UI.Controls.BL_VirtualListView.StripeBackColor2">
            <summary>
            偶数行の背景色
            </summary>
        </member>
        <member name="P:BelicsClass.UI.Controls.BL_VirtualListView.IsStripeColored">
            <summary>
            奇数行・偶数行で交互に色分け表示するかどうか
            </summary>
        </member>
        <member name="T:BelicsClass.UI.Controls.BL_VirtualListView.BL_VirtualListViewItemList">
            <summary>
            リストビューのアイテムリスト
            </summary>
        </member>
        <member name="F:BelicsClass.UI.Controls.BL_VirtualListView.BL_VirtualListViewItemList.parent">
            <summary>
            リストビューコントロール
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Controls.BL_VirtualListView.BL_VirtualListViewItemList.AddLimit(BelicsClass.UI.Controls.BL_VirtualListView.BL_VirtualListViewItem,System.Int32)">
            <summary>
            保持データの最大数を指定して、データを追加します
            </summary>
            <param name="item"></param>
            <param name="limit"></param>
        </member>
        <member name="M:BelicsClass.UI.Controls.BL_VirtualListView.BL_VirtualListViewItemList.AddLimit(BelicsClass.UI.Controls.BL_VirtualListView.BL_VirtualListViewItem[],System.Int32)">
            <summary>
            保持データの最大数を指定して、データ追加します
            </summary>
            <param name="items"></param>
            <param name="limit"></param>
        </member>
        <member name="M:BelicsClass.UI.Controls.BL_VirtualListView.BL_VirtualListViewItemList.AddLimit(System.Collections.Generic.SortedList{System.String,BelicsClass.UI.Controls.BL_VirtualListView.BL_VirtualListViewItem},System.Int32)">
            <summary>
            保持データの最大数を指定して、データ追加します
            </summary>
            <param name="items"></param>
            <param name="limit"></param>
        </member>
        <member name="M:BelicsClass.UI.Controls.BL_VirtualListView.BL_VirtualListViewItemList.InsertLimit(System.Int32,BelicsClass.UI.Controls.BL_VirtualListView.BL_VirtualListViewItem,System.Int32)">
            <summary>
            保持データの最大数を指定して、データを追加します
            </summary>
            <param name="index"></param>
            <param name="item"></param>
            <param name="limit"></param>
        </member>
        <member name="M:BelicsClass.UI.Controls.BL_VirtualListView.BL_VirtualListViewItemList.InsertLimit(System.Int32,BelicsClass.UI.Controls.BL_VirtualListView.BL_VirtualListViewItem[],System.Int32)">
            <summary>
            保持データの最大数を指定して、データ追加します
            </summary>
            <param name="index"></param>
            <param name="items"></param>
            <param name="limit"></param>
        </member>
        <member name="M:BelicsClass.UI.Controls.BL_VirtualListView.BL_VirtualListViewItemList.InsertLimit(System.Int32,System.Collections.Generic.SortedList{System.String,BelicsClass.UI.Controls.BL_VirtualListView.BL_VirtualListViewItem},System.Int32)">
            <summary>
            保持データの最大数を指定して、データ追加します
            </summary>
            <param name="index"></param>
            <param name="items"></param>
            <param name="limit"></param>
        </member>
        <member name="T:BelicsClass.UI.Controls.BL_VirtualListView.BL_LvwCell">
            <summary>
            １カラムのデータを保持するクラス
            列別に色変更ができるようになります。
            </summary>
        </member>
        <member name="F:BelicsClass.UI.Controls.BL_VirtualListView.BL_LvwCell.Data">
            <summary>データ</summary>
        </member>
        <member name="F:BelicsClass.UI.Controls.BL_VirtualListView.BL_LvwCell.Tag">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Controls.BL_VirtualListView.BL_LvwCell.BackColor">
            <summary>背景色</summary>
        </member>
        <member name="F:BelicsClass.UI.Controls.BL_VirtualListView.BL_LvwCell.ForeColor">
            <summary>表示色</summary>
        </member>
        <member name="F:BelicsClass.UI.Controls.BL_VirtualListView.BL_LvwCell.font">
            <summary>表示フォント</summary>
        </member>
        <member name="M:BelicsClass.UI.Controls.BL_VirtualListView.BL_LvwCell.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:BelicsClass.UI.Controls.BL_VirtualListView.BL_LvwCell.#ctor(System.Object)">
            <summary>コンストラクタ</summary>
            <param name="data"></param>
        </member>
        <member name="M:BelicsClass.UI.Controls.BL_VirtualListView.BL_LvwCell.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:BelicsClass.UI.Controls.BL_VirtualListView.BL_VirtualListViewItem">
            <summary>
            リストビューのアイテム
            </summary>
        </member>
        <member name="F:BelicsClass.UI.Controls.BL_VirtualListView.BL_VirtualListViewItem.Tag">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.UI.Controls.BL_VirtualListView.BL_VirtualListViewItem.BackColor">
            <summary>
            行背景色
            </summary>
        </member>
        <member name="F:BelicsClass.UI.Controls.BL_VirtualListView.BL_VirtualListViewItem.ForeColor">
            <summary>
            行表示色
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Controls.BL_VirtualListView.BL_VirtualListViewItem.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Controls.BL_VirtualListView.BL_VirtualListViewItem.#ctor(System.Object)">
            <summary>
            コンストラクタ
            </summary>
            <param name="item"></param>
        </member>
        <member name="T:BelicsClass.PLC.DeviceCode">
            <summary>デバイスコードを定義します</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.CIO_B">
            <summary>チャネルI/O（ビット）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.WR_B">
            <summary>内部補助リレー（ビット）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.HR_B">
            <summary>保持リレー（ビット）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.AR_B">
            <summary>特殊保持リレー（ビット）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.CIO_BF">
            <summary>チャネルI/O（強制ON/OFF付ビット）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.WR_BF">
            <summary>内部補助リレー（強制ON/OFF付ビット）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.HR_BF">
            <summary>保持リレー（強制ON/OFF付ビット）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.CIO">
            <summary>チャネルI/O（ワード）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.WR">
            <summary>内部補助リレー（ワード）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.HR">
            <summary>保持リレー（ワード）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.AR">
            <summary>特殊保持リレー（ワード）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.CIO_F">
            <summary>チャネルI/O（強制ON/OFF付ワード）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.WR_F">
            <summary>内部補助リレー（強制ON/OFF付ワード）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.HR_F">
            <summary>保持リレー（強制ON/OFF付ワード）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.TIM">
            <summary>タイマ（アップフラグ）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.CNT">
            <summary>カウンタ（アップフラグ）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.TIM2">
            <summary>タイマ（強制ON/OFF付きアップフラグ）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.CNT2">
            <summary>カウンタ（強制ON/OFF付きアップフラグ）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.TIM_N">
            <summary>タイマ（現在値）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.CNT_N">
            <summary>カウンタ（現在値）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.DM_B">
            <summary>データメモリ（ビット）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.DM">
            <summary>データメモリ（ワード）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.EM0_B">
            <summary>EMバンク0（ビット）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.EM1_B">
            <summary>EMバンク1（ビット）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.EM2_B">
            <summary>EMバンク2（ビット）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.EM3_B">
            <summary>EMバンク3（ビット）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.EM4_B">
            <summary>EMバンク4（ビット）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.EM5_B">
            <summary>EMバンク5（ビット）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.EM6_B">
            <summary>EMバンク6（ビット）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.EM7_B">
            <summary>EMバンク7（ビット）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.EM8_B">
            <summary>EMバンク8（ビット）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.EM9_B">
            <summary>EMバンク9（ビット）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.EMA_B">
            <summary>EMバンクA（ビット）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.EMB_B">
            <summary>EMバンクB（ビット）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.EMC_B">
            <summary>EMバンクC（ビット）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.EMD_B">
            <summary>EMバンクD（ビット）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.EME_B">
            <summary>EMバンクE（ビット）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.EMF_B">
            <summary>EMバンクF（ビット）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.EM10_B">
            <summary>EMバンク10（ビット）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.EM11_B">
            <summary>EMバンク11（ビット）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.EM12_B">
            <summary>EMバンク12（ビット）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.EM13_B">
            <summary>EMバンク13（ビット）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.EM14_B">
            <summary>EMバンク14（ビット）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.EM15_B">
            <summary>EMバンク15（ビット）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.EM16_B">
            <summary>EMバンク16（ビット）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.EM17_B">
            <summary>EMバンク17（ビット）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.EM18_B">
            <summary>EMバンク18（ビット）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.EM0">
            <summary>EMバンク0（ワード）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.EM1">
            <summary>EMバンク1（ワード）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.EM2">
            <summary>EMバンク2（ワード）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.EM3">
            <summary>EMバンク3（ワード）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.EM4">
            <summary>EMバンク4（ワード）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.EM5">
            <summary>EMバンク5（ワード）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.EM6">
            <summary>EMバンク6（ワード）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.EM7">
            <summary>EMバンク7（ワード）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.EM8">
            <summary>EMバンク8（ワード）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.EM9">
            <summary>EMバンク9（ワード）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.EMA">
            <summary>EMバンクA（ワード）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.EMB">
            <summary>EMバンクB（ワード）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.EMC">
            <summary>EMバンクC（ワード）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.EMD">
            <summary>EMバンクD（ワード）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.EME">
            <summary>EMバンクE（ワード）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.EMF">
            <summary>EMバンクF（ワード）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.EM10">
            <summary>EMバンク10（ワード）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.EM11">
            <summary>EMバンク11（ワード）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.EM12">
            <summary>EMバンク12（ワード）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.EM13">
            <summary>EMバンク13（ワード）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.EM14">
            <summary>EMバンク14（ワード）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.EM15">
            <summary>EMバンク15（ワード）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.EM16">
            <summary>EMバンク16（ワード）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.EM17">
            <summary>EMバンク17（ワード）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.EM18">
            <summary>EMバンク18（ワード）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.EM_BC">
            <summary>EMカレントバンク（ビット）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.EM_C">
            <summary>EMカレントバンク（ワード）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.EM_CBN">
            <summary>EMカレントバンクNo</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.TK_B">
            <summary>タスクフラグ（ビット）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.TK_S">
            <summary>タスクフラグ（ステータス）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.IR">
            <summary>インデックスレジスタ</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.DR">
            <summary>データレジスタ</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.CP_B">
            <summary>クロックパルス（ビット）</summary>
        </member>
        <member name="F:BelicsClass.PLC.DeviceCode.CF_B">
            <summary>コンディションフラグ（ビット）</summary>
        </member>
        <member name="T:BelicsClass.PLC.OMRON_FINS">
            <summary>
            PLC通信クラス（オムロン　ＦＩＮＳコマンド用）
            </summary>
        </member>
        <member name="M:BelicsClass.PLC.OMRON_FINS.Connect(System.String,System.Int32)">
            <summary>
            PLCと接続します。
            </summary>
            <param name="ip_address">接続するPLCのIPアドレス。</param>
            <param name="port">接続するPLCのポート№。</param>
            <returns>true:正常,false:異常</returns>
        </member>
        <member name="M:BelicsClass.PLC.OMRON_FINS.Disconnect">
            <summary>
            PLCとの接続を解除します。
            </summary>
        </member>
        <member name="M:BelicsClass.PLC.OMRON_FINS.NodeInfoCommand">
            <summary>
            PLCにノードアドレス情報コマンドを送信します。
            </summary>
            <returns>true:正常,false:異常</returns>
        </member>
        <member name="M:BelicsClass.PLC.OMRON_FINS.NodeInfoCommandAck">
            <summary>
            PLCからノードアドレス情報コマンドの返答を受信します。
            </summary>
            <returns>true:正常,false:異常</returns>
        </member>
        <member name="M:BelicsClass.PLC.OMRON_FINS.ReadCommand(System.Byte,System.Int32,System.Int32)">
            <summary>
            PLCにメモリエリアの読出コマンドを送信します。
            </summary>
            <param name="deviceCode">読み込むデバイスのデバイスコード。</param>
            <param name="offset">読み込むデバイスのオフセット値。</param>
            <param name="point">読み込むデバイスの点数。</param>
            <returns>true:正常,false:異常</returns>
        </member>
        <member name="M:BelicsClass.PLC.OMRON_FINS.ReadCommandAck(System.Int32@)">
            <summary>
            PLCからメモリエリアの読出コマンドの返答を受信します。
            </summary>
            <param name="length">読み込んだデバイスのバイト数。</param>
            <returns>受信したデータのバイト配列</returns>
        </member>
        <member name="M:BelicsClass.PLC.OMRON_FINS.WriteCommand(System.Byte,System.Int32,System.Int32,System.Byte[])">
            <summary>
            PLCにメモリエリアの書込コマンドを送信します。
            </summary>
            <param name="deviceCode">書き込むデバイスのデバイスコード。</param>
            <param name="offset">書き込むデバイスのオフセット値。</param>
            <param name="point">書き込むデバイスの点数。</param>
            <param name="writeData">書き込むデバイスのデータが格納されているバイト配列。</param>
            <returns>true:正常,false:異常</returns>
        </member>
        <member name="M:BelicsClass.PLC.OMRON_FINS.WriteCommandAck">
            <summary>
            PLCからメモリエリアの書込コマンドの返答を受信します。
            </summary>
            <returns></returns>
        </member>
        <member name="P:BelicsClass.PLC.OMRON_FINS.IsConnected">
            <summary>
            ソケットの接続状態を取得します。接続している場合は true。それ以外の場合は false。
            </summary>
        </member>
        <member name="T:BelicsClass.PLC.OMRON">
            <summary>
            PLC通信クラス（オムロン　Ｃコマンドモード用）
            </summary>
        </member>
        <member name="M:BelicsClass.PLC.OMRON.Connect(BelicsClass.Rs232c.BL_Rs232c.PortNo,BelicsClass.Rs232c.BL_Rs232c.BaudRate,BelicsClass.Rs232c.BL_Rs232c.ByteSize,BelicsClass.Rs232c.BL_Rs232c.Parity,BelicsClass.Rs232c.BL_Rs232c.StopBits)">
            <summary>
            デバイスをオープンします。
            </summary>
            <param name="portNo">オープンするデバイスのポート№。</param>
            <param name="baudRate">オープンするデバイスのボーレート。</param>
            <param name="byteSize">オープンするデバイスのデータビット長。</param>
            <param name="parity">オープンするデバイスのパリティビット。</param>
            <param name="stopBits">オープンするデバイスのストップビット。</param>
            <returns>true:正常,false:異常</returns>
        </member>
        <member name="M:BelicsClass.PLC.OMRON.Close">
            <summary>
            デバイスをクローズします。
            </summary>
        </member>
        <member name="M:BelicsClass.PLC.OMRON.Send(System.Byte[])">
            <summary>
            デバイスにバイト配列のデータを書き込みます。
            </summary>
            <param name="data">書き込むデータが格納されているバイト配列。</param>
            <returns>true:正常,false:異常</returns>
        </member>
        <member name="M:BelicsClass.PLC.OMRON.Receive(System.Int32@)">
            <summary>
            デバイスからバイト配列でデータを読み込みます。
            </summary>
            <param name="bytes_size">受信したバイト数。未受信のときは、-1。BCCが異常のときは、-2。</param>
            <returns>受信したデータのバイト配列</returns>
        </member>
        <member name="M:BelicsClass.PLC.OMRON.bcc_check(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            BCCチェック
            </summary>
            <param name="data">チェックするデータ</param>
            <param name="pos">開始位置</param>
            <param name="size">チェックする長さ</param>
            <param name="bcc">BCCデータ</param>
            <param name="bcc_pos">BCC位置</param>
            <returns>true:正常,false:異常</returns>
        </member>
        <member name="M:BelicsClass.PLC.OMRON.bcc_set(System.Byte[],System.Int32,System.Int32,System.Byte[]@)">
            <summary>
            BCCセット
            </summary>
            <param name="data">チェックするデータ</param>
            <param name="pos">開始位置</param>
            <param name="size">チェックする長さ</param>
            <param name="bcc">BCCデータ</param>
        </member>
        <member name="T:BelicsClass.PLC.BL_MCProtocol">
            <summary>
            MCプロトコルを使用してPLCと通信するクラスです。
            </summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.SupportRandomRead">
            <summary>ランダム読出し可能(複数ブロック読出し可能)</summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.SupportRandomWrite">
            <summary>ランダム書込み可能</summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.isASCII">
            <summary>ASCIIモード</summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceType">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.CommandType">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.KV5000">
            <summary>
            KV-5000で扱うことの出来るアドレスへ丸める
            </summary>
        </member>
        <member name="M:BelicsClass.PLC.BL_MCProtocol.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.Error">
            <summary>
            PLC通信エラーフラグ
            </summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.ErrorDescription">
            <summary>
            通信エラー内容
            </summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.Socket">
            <summary>ソケットクラスのインスタンス</summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.SocketUDP">
            <summary>UDPソケットクラスのインスタンス</summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.ipaddressUDP">
            <summary>UDP送信先IPアドレス(IPEndPoint)</summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.RemoteEP">
            <summary>接続先のIPエンドポイント</summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.ReceiveBytes">
            <summary>ソケット読み出しバッファ</summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.Com">
            <summary>シリアル通信クラスのインスタンス</summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.queRead">
            <summary>
            読み込み要求キュー
            </summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.queWrite">
            <summary>
            書き込み要求キュー
            </summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.ReadDevices">
            <summary>
            連続読み込み要求情報
            </summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.read_eventdevices">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.write_eventdevices">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.PLC.BL_MCProtocol.#ctor(BelicsClass.Rs232c.BL_Rs232c.PortNo,BelicsClass.Rs232c.BL_Rs232c.BaudRate,BelicsClass.Rs232c.BL_Rs232c.ByteSize,BelicsClass.Rs232c.BL_Rs232c.Parity,BelicsClass.Rs232c.BL_Rs232c.StopBits,BelicsClass.Rs232c.BL_Rs232c.FormatType)">
            <summary>
            コンストラクタ(RS232C)
            </summary>
            <param name="portNo">COMポートNo</param>
            <param name="baudRate">ボーレート</param>
            <param name="byteSize">データ長</param>
            <param name="parity">パリティ</param>
            <param name="stopBits">ストップビット</param>
            <param name="formatType">フォーマット種別</param>
        </member>
        <member name="M:BelicsClass.PLC.BL_MCProtocol.#ctor(System.Boolean,System.String,System.Int32)">
            <summary>
            コンストラクタ(LAN)
            </summary>
            <param name="isUDP">UDP</param>
            <param name="ipaddress">IPアドレス</param>
            <param name="portno">ソケットポートNo</param>
        </member>
        <member name="M:BelicsClass.PLC.BL_MCProtocol.#ctor(System.Boolean,System.String,System.Int32,System.Int32)">
            <summary>
            コンストラクタ(LAN)
            </summary>
            <param name="isUDP">UDP</param>
            <param name="ipaddress">IPアドレス</param>
            <param name="portno">ソケットリモートポートNo</param>
            <param name="localport">ソケットローカルポートNo</param>
        </member>
        <member name="M:BelicsClass.PLC.BL_MCProtocol.#ctor(System.Boolean,System.String,System.Int32,System.Boolean)">
            <summary>
            コンストラクタ(LAN)
            </summary>
            <param name="isUDP">UDP</param>
            <param name="ipaddress">IPアドレス</param>
            <param name="portno">ソケットリモートポートNo</param>
            <param name="SupportRandomAccess">複数ブロック一括読み出し可能</param>
        </member>
        <member name="M:BelicsClass.PLC.BL_MCProtocol.#ctor(System.Boolean,System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            コンストラクタ(LAN)
            </summary>
            <param name="isUDP">UDP</param>
            <param name="ipaddress">IPアドレス</param>
            <param name="portno">ソケットリモートポートNo</param>
            <param name="SupportRandomAccess">複数ブロック一括読み出し可能</param>
            <param name="isASCII">ASCIIモード</param>
        </member>
        <member name="M:BelicsClass.PLC.BL_MCProtocol.#ctor(System.Boolean,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            コンストラクタ(LAN)
            </summary>
            <param name="isUDP">UDP</param>
            <param name="ipaddress">IPアドレス</param>
            <param name="portno">ソケットリモートポートNo</param>
            <param name="localport">ソケットローカルポートNo</param>
            <param name="SupportRandomAccess">複数ブロック一括読み出し可能</param>
        </member>
        <member name="M:BelicsClass.PLC.BL_MCProtocol.#ctor(System.Boolean,System.String,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            コンストラクタ(LAN)
            </summary>
            <param name="isUDP">UDP</param>
            <param name="ipaddress">IPアドレス</param>
            <param name="portno">ソケットリモートポートNo</param>
            <param name="localport">ソケットローカルポートNo</param>
            <param name="SupportRandomAccess">複数ブロック一括読み出し可能</param>
            <param name="isASCII">ASCIIモード</param>
        </member>
        <member name="M:BelicsClass.PLC.BL_MCProtocol.#ctor(System.String,System.Int32)">
            <summary>
            コンストラクタ(LAN)
            </summary>
            <param name="ipaddress">IPアドレス</param>
            <param name="portno">ソケットポートNo</param>
        </member>
        <member name="M:BelicsClass.PLC.BL_MCProtocol.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            コンストラクタ(LAN)
            </summary>
            <param name="ipaddress">IPアドレス</param>
            <param name="portno">ソケットポートNo</param>
            <param name="localport">ソケットローカルポートNo</param>
        </member>
        <member name="M:BelicsClass.PLC.BL_MCProtocol.#ctor(System.String,System.Int32,System.Boolean)">
            <summary>
            コンストラクタ(LAN)
            </summary>
            <param name="ipaddress">IPアドレス</param>
            <param name="portno">ソケットポートNo</param>
            <param name="SupportRandomAccess">複数ブロック一括読み出し可能</param>
        </member>
        <member name="M:BelicsClass.PLC.BL_MCProtocol.#ctor(System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            コンストラクタ(LAN)
            </summary>
            <param name="ipaddress">IPアドレス</param>
            <param name="portno">ソケットポートNo</param>
            <param name="localport">ソケットローカルポートNo</param>
            <param name="SupportRandomAccess">複数ブロック一括読み出し可能</param>
        </member>
        <member name="M:BelicsClass.PLC.BL_MCProtocol.#ctor(System.String,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            コンストラクタ(LAN)
            </summary>
            <param name="ipaddress">IPアドレス</param>
            <param name="portno">ソケットポートNo</param>
            <param name="localport">ソケットローカルポートNo</param>
            <param name="SupportRandomAccess">複数ブロック一括読み出し可能</param>
            <param name="isASCII">ASCIIモード</param>
        </member>
        <member name="M:BelicsClass.PLC.BL_MCProtocol.StartControl(System.Int32,System.Threading.ThreadPriority)">
            <summary>
            通信を開始します。
            </summary>
            <param name="sleep"></param>
            <param name="priority"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_MCProtocol.StopControl">
            <summary>
            通信を停止します。
            </summary>
        </member>
        <member name="M:BelicsClass.PLC.BL_MCProtocol.DoControl(System.Object)">
            <summary>
            通信処理
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_MCProtocol.Read(System.Int32,System.Boolean,BelicsClass.PLC.BL_MCProtocol.DeviceInfo[])">
            <summary>
            指定デバイスのブロッキング読み込み
            </summary>
            <param name="timeoutMilliseconds"></param>
            <param name="noevent"></param>
            <param name="device"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_MCProtocol.Write(System.Int32,BelicsClass.PLC.BL_MCProtocol.DeviceInfo[])">
            <summary>
            指定デバイスのブロッキング書き込み
            </summary>
            <param name="timeoutMilliseconds"></param>
            <param name="device"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_MCProtocol.Read(BelicsClass.PLC.BL_MCProtocol.DeviceInfo[])">
            <summary>
            指定デバイス読み込み
            </summary>
            <param name="device"></param>
        </member>
        <member name="M:BelicsClass.PLC.BL_MCProtocol.Write(BelicsClass.PLC.BL_MCProtocol.DeviceInfo[])">
            <summary>
            
            </summary>
            <param name="device"></param>
        </member>
        <member name="P:BelicsClass.PLC.BL_MCProtocol.PackageWriteOnly">
            <summary>
            一括書込み・一括読込みのみ
            </summary>
        </member>
        <member name="E:BelicsClass.PLC.BL_MCProtocol.EventValueChanged">
            <summary>
            デバイス値の変化イベント
            </summary>
        </member>
        <member name="E:BelicsClass.PLC.BL_MCProtocol.EventPlcError">
            <summary>
            PLC通信エラーイベント
            </summary>
        </member>
        <member name="E:BelicsClass.PLC.BL_MCProtocol.EventPlcConnected">
            <summary>
            PLC接続イベント
            </summary>
        </member>
        <member name="E:BelicsClass.PLC.BL_MCProtocol.EventPlcDisconnected">
            <summary>
            PLC切断イベント
            </summary>
        </member>
        <member name="P:BelicsClass.PLC.BL_MCProtocol.IsConnected">
            <summary>接続状態を取得します。</summary>
        </member>
        <member name="P:BelicsClass.PLC.BL_MCProtocol.ReadScanTimes">
            <summary>
            読み込み処理の処理速度(ms)を取得します。
            </summary>
        </member>
        <member name="P:BelicsClass.PLC.BL_MCProtocol.WriteScanTimes">
            <summary>
            書き込み処理の処理速度(ms)を取得します。
            </summary>
        </member>
        <member name="T:BelicsClass.PLC.BL_MCProtocol.DeviceTypes">
            <summary>
            接続種別
            </summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceTypes.Unknown">
            <summary>未定</summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceTypes.TCP">
            <summary>TCP</summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceTypes.UDP">
            <summary>UDP</summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceTypes.RS232C">
            <summary>RS-232C(形式3)</summary>
        </member>
        <member name="T:BelicsClass.PLC.BL_MCProtocol.CommandTypes">
            <summary>
            コマンドタイプ
            </summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.CommandTypes.MELSEC_A_CPU">
            <summary>ACPU共通コマンド</summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.CommandTypes.MELSEC_AnA_CPU">
            <summary>AnA/AnAUCPU共通コマンド</summary>
        </member>
        <member name="T:BelicsClass.PLC.BL_MCProtocol.DeviceInfo">
            <summary>
            アクセス対象のDM情報を管理します。
            </summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.deviceCode">
            <summary>
            対象のデバイスコードを保持します。
            </summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.deviceAddress">
            <summary>
            対象のデバイスアドレスを保持します。
            </summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.dataLength">
            <summary>
            対象のデータ数を保持します。
            </summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.deviceBitPosition">
            <summary>
            対象のデバイスビット位置を保持します。
            </summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.negative">
            <summary>
            反転属性を保持します。
            </summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.valueType">
            <summary>
            値の表現方法の種別を保持します。
            </summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.endian">
            <summary>
            エンディアン種別を保持します。
            </summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.data">
            <summary>
            読み出しデータ／書き込みデータを保持します。
            </summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.data_pre">
            <summary>
            直前の読み出しデータ／書き込みデータを保持します。
            </summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.readed">
            <summary>
            読み込み管理フラグ
            </summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.writing">
            <summary>
            書き込み管理フラグ
            </summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.writed">
            <summary>
            書き込み管理フラグ
            </summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.noevent">
            <summary>
            イベント不要
            </summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.changed">
            <summary>
            変化フラグ
            </summary>
        </member>
        <member name="M:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.Clone">
            <summary>
            自インスタンスのクローンを生成します。
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.#ctor">
            <summary>
            デフォルトコンストラクタ
            </summary>
        </member>
        <member name="M:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.#ctor(BelicsClass.PLC.BL_MCProtocol.DeviceInfo.DeviceCode,System.Int32,System.Int32,BelicsClass.PLC.BL_MCProtocol.DeviceInfo.ValueType)">
            <summary>
            コンストラクタ
            </summary>
            <param name="deviceCode"></param>
            <param name="deviceAddress"></param>
            <param name="dataLength"></param>
            <param name="valueType"></param>
        </member>
        <member name="M:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.#ctor(BelicsClass.PLC.BL_MCProtocol.DeviceInfo.DeviceCode,System.Int32,System.Int32,BelicsClass.PLC.BL_MCProtocol.DeviceInfo.ValueType,BelicsClass.PLC.BL_MCProtocol.DeviceInfo.Endian)">
            <summary>
            コンストラクタ
            </summary>
            <param name="deviceCode"></param>
            <param name="deviceAddress"></param>
            <param name="dataLength"></param>
            <param name="valueType"></param>
            <param name="endian"></param>
        </member>
        <member name="M:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.GetDeviceCode(System.String)">
            <summary>
            デバイスコード名称からデバイス種別を取得します。
            </summary>
            <param name="deviceCode"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.GetValueType(System.String)">
            <summary>
            データ種別名称からデータ種別を取得します。
            </summary>
            <param name="valueType"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.Equal(BelicsClass.PLC.BL_MCProtocol.DeviceInfo)">
            <summary>
            
            </summary>
            <param name="device"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.Get">
            <summary>
            値を取得します
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.Get(System.Int32)">
            <summary>
            値を取得します
            </summary>
            <param name="position">オフセット位置</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.Get(System.Int32,BelicsClass.PLC.BL_MCProtocol.DeviceInfo.ValueType)">
            <summary>
            値を取得します
            </summary>
            <param name="position">オフセット位置</param>
            <param name="vt">値種別</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.Get``1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.Get``1(System.Int32)">
            <summary>
            ビット位置を指定して状態を取得します。
            </summary>
            <param name="position">オフセット位置</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.Get``1(System.Int32,BelicsClass.PLC.BL_MCProtocol.DeviceInfo.ValueType)">
            <summary>
            ビット位置を指定して状態を取得します。
            </summary>
            <param name="position">オフセット位置</param>
            <param name="vt">値種別</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.Set(System.Int16)">
            <summary>
            
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.Set(System.Int16,System.Int32)">
            <summary>
            値を設定します。
            </summary>
            <param name="val"></param>
            <param name="position"></param>
        </member>
        <member name="M:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.Set(System.UInt16)">
            <summary>
            
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.Set(System.UInt16,System.Int32)">
            <summary>
            値を設定します。
            </summary>
            <param name="val"></param>
            <param name="position"></param>
        </member>
        <member name="M:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.Set(System.Int32)">
            <summary>
            
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.Set(System.Int32,System.Int32)">
            <summary>
            値を設定します。
            </summary>
            <param name="val"></param>
            <param name="position"></param>
        </member>
        <member name="M:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.Set(System.UInt32)">
            <summary>
            
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.Set(System.UInt32,System.Int32)">
            <summary>
            値を設定します。
            </summary>
            <param name="val"></param>
            <param name="position"></param>
        </member>
        <member name="M:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.Set(System.Int64)">
            <summary>
            
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.Set(System.Int64,System.Int32)">
            <summary>
            値を設定します。
            </summary>
            <param name="val"></param>
            <param name="position"></param>
        </member>
        <member name="M:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.Set(System.UInt64)">
            <summary>
            
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.Set(System.UInt64,System.Int32)">
            <summary>
            値を設定します。
            </summary>
            <param name="val"></param>
            <param name="position"></param>
        </member>
        <member name="M:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.Set(System.Single)">
            <summary>
            
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.Set(System.Single,System.Int32)">
            <summary>
            値を設定します。
            </summary>
            <param name="val"></param>
            <param name="position"></param>
        </member>
        <member name="M:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.Set(System.Double)">
            <summary>
            
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.Set(System.Double,System.Int32)">
            <summary>
            値を設定します。
            </summary>
            <param name="val"></param>
            <param name="position"></param>
        </member>
        <member name="M:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.Set(System.String)">
            <summary>
            
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.Set(System.String,System.Int32)">
            <summary>
            値を設定します。
            </summary>
            <param name="val"></param>
            <param name="position"></param>
        </member>
        <member name="M:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.Set(System.Boolean)">
            <summary>
            値を設定します。
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.Set(System.Boolean,System.Int32)">
            <summary>
            ビット位置を指定して状態を設定します。
            </summary>
            <param name="val"></param>
            <param name="position"></param>
        </member>
        <member name="M:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.GetAddress(System.Int32)">
            <summary>
            指定ポジションのアドレスを取得します。
            </summary>
            <param name="position"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.GetAddress">
            <summary>
            アドレスを取得します。
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.GetDeviceCode">
            <summary>
            デバイスコードを取得します。
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.UnitSize">
            <summary>
            デバイスのサイズ単位を取得します。
            </summary>
        </member>
        <member name="P:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.DeviceSize">
            <summary>
            デバイスサイズ(ワード数)を取得します。
            </summary>
        </member>
        <member name="P:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.ByteSize">
            <summary>
            バイトサイズを取得します。
            </summary>
        </member>
        <member name="P:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.deviceKind">
            <summary>
            デバイス種別を取得します。
            </summary>
        </member>
        <member name="P:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.deviceAddresstype">
            <summary>
            アドレス指定方法の種別を取得します。
            </summary>
        </member>
        <member name="P:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.deviceAddressSequence">
            <summary>
            アドレスの指定方法を取得します。
            </summary>
        </member>
        <member name="P:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.AddressString">
            <summary>
            アドレス文字列を取得します。
            </summary>
        </member>
        <member name="T:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.Endian">
            <summary>
            エンディアン種別を定義します。
            </summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.Endian.LITTLE">
            <summary>リトルエンディアン</summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.Endian.BIG">
            <summary>ビッグエンディアン</summary>
        </member>
        <member name="T:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.DeviceKind">
            <summary>
            デバイスの種別を定義します。
            </summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.DeviceKind.UNKNOWN">
            <summary>不明</summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.DeviceKind.BIT">
            <summary>ビット</summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.DeviceKind.WORD">
            <summary>ワード</summary>
        </member>
        <member name="T:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.DeviceAddressType">
            <summary>
            アドレス指定方法の種別を定義します。
            </summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.DeviceAddressType.UNKNOWN">
            <summary>不明</summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.DeviceAddressType.DEC">
            <summary>10進表記</summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.DeviceAddressType.HEX">
            <summary>16進表記</summary>
        </member>
        <member name="T:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.DeviceAddressSequence">
            <summary>
            アドレスの指定方法を定義します。
            </summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.DeviceAddressSequence.NORMAL">
            <summary>通常の連番指定</summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.DeviceAddressSequence.FLOWBY16">
            <summary>１６アドレス毎に桁上がり</summary>
        </member>
        <member name="T:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.DeviceCode">
            <summary>
            デバイス種別を定義します。
            </summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.DeviceCode.UNKNOWN">
            <summary>不明</summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.DeviceCode.SM">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.DeviceCode.SD">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.DeviceCode.X">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.DeviceCode.Y">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.DeviceCode.M">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.DeviceCode.L">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.DeviceCode.F">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.DeviceCode.V">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.DeviceCode.B">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.DeviceCode.D">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.DeviceCode.W">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.DeviceCode.TS">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.DeviceCode.TC">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.DeviceCode.TN">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.DeviceCode.SS">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.DeviceCode.SC">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.DeviceCode.SN">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.DeviceCode.CS">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.DeviceCode.CC">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.DeviceCode.CN">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.DeviceCode.SB">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.DeviceCode.SW">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.DeviceCode.S">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.DeviceCode.DX">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.DeviceCode.DY">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.DeviceCode.Z">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.DeviceCode.R">
            <summary></summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.DeviceCode.ZR">
            <summary></summary>
        </member>
        <member name="T:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.ValueType">
            <summary>
            値の表現方法の種別を定義します。
            </summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.ValueType.UNKNOWN">
            <summary>UNKNOWN</summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.ValueType.BIT">
            <summary>BIT</summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.ValueType.BIN16">
            <summary>BINARY 16BIT</summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.ValueType.UBIN16">
            <summary>UNSIGNED BINARY 16BIT</summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.ValueType.BIN32">
            <summary>BINARY 32BIT</summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.ValueType.UBIN32">
            <summary>UNSIGNED BINARY 32BIT</summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.ValueType.BIN64">
            <summary>BINARY 64BIT</summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.ValueType.UBIN64">
            <summary>UNSIGNED BINARY 64BIT</summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.ValueType.FLOAT">
            <summary>FLOAT</summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.ValueType.DOUBLE">
            <summary>DOUBLE</summary>
        </member>
        <member name="F:BelicsClass.PLC.BL_MCProtocol.DeviceInfo.ValueType.STRING">
            <summary>STRING</summary>
        </member>
        <member name="T:BelicsClass.PLC.BL_MCProtocol.Event_Handler_ValueChanged">
            <summary>
            デバイス値の変化イベントのデリゲート宣言
            </summary>
            <param name="plc"></param>
            <param name="deviceinfo"></param>
        </member>
        <member name="T:BelicsClass.PLC.BL_MCProtocol.Event_Handler_PlcError">
            <summary>
            PLC通信エラーイベントのデリゲート宣言
            </summary>
            <param name="plc"></param>
            <param name="error"></param>
            <param name="errordescription"></param>
        </member>
        <member name="T:BelicsClass.PLC.BL_MCProtocol.Event_Handler_Connected">
            <summary>
            PLC接続イベントのデリゲート宣言
            </summary>
            <param name="plc"></param>
        </member>
        <member name="T:BelicsClass.PLC.BL_MCProtocol.Event_Handler_Disconnected">
            <summary>
            PLC切断イベントのデリゲート宣言
            </summary>
            <param name="plc"></param>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioInputHandShake(System.IntPtr,System.Byte@,System.UInt32,System.UInt32@,InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioInputHandShake(System.IntPtr,System.UInt16@,System.UInt32,System.UInt32@,InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioInputHandShake(System.IntPtr,System.UInt32@,System.UInt32,System.UInt32@,InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioInputHandShake(System.IntPtr,System.Byte[],System.UInt32,System.UInt32@,InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioInputHandShake(System.IntPtr,System.UInt16[],System.UInt32,System.UInt32@,InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioInputHandShake(System.IntPtr,System.UInt32[],System.UInt32,System.UInt32@,InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioInputHandShake(System.IntPtr,System.IntPtr,System.UInt32,System.UInt32@,InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioInputHandShake(System.IntPtr,System.Byte@,System.UInt32,System.UInt32@,System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioInputHandShake(System.IntPtr,System.UInt16@,System.UInt32,System.UInt32@,System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioInputHandShake(System.IntPtr,System.UInt32@,System.UInt32,System.UInt32@,System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioInputHandShake(System.IntPtr,System.Byte[],System.UInt32,System.UInt32@,System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioInputHandShake(System.IntPtr,System.UInt16[],System.UInt32,System.UInt32@,System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioInputHandShake(System.IntPtr,System.UInt32[],System.UInt32,System.UInt32@,System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioInputHandShake(System.IntPtr,System.IntPtr,System.UInt32,System.UInt32@,System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioInputHandShake(System.IntPtr,System.Byte@,System.UInt32,System.UInt32[],InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioInputHandShake(System.IntPtr,System.UInt16@,System.UInt32,System.UInt32[],InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioInputHandShake(System.IntPtr,System.UInt32@,System.UInt32,System.UInt32[],InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioInputHandShake(System.IntPtr,System.Byte[],System.UInt32,System.UInt32[],InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioInputHandShake(System.IntPtr,System.UInt16[],System.UInt32,System.UInt32[],InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioInputHandShake(System.IntPtr,System.UInt32[],System.UInt32,System.UInt32[],InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioInputHandShake(System.IntPtr,System.IntPtr,System.UInt32,System.UInt32[],InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioInputHandShake(System.IntPtr,System.Byte@,System.UInt32,System.UInt32[],System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioInputHandShake(System.IntPtr,System.UInt16@,System.UInt32,System.UInt32[],System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioInputHandShake(System.IntPtr,System.UInt32@,System.UInt32,System.UInt32[],System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioInputHandShake(System.IntPtr,System.Byte[],System.UInt32,System.UInt32[],System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioInputHandShake(System.IntPtr,System.UInt16[],System.UInt32,System.UInt32[],System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioInputHandShake(System.IntPtr,System.UInt32[],System.UInt32,System.UInt32[],System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioInputHandShake(System.IntPtr,System.IntPtr,System.UInt32,System.UInt32[],System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioInputHandShake(System.IntPtr,System.Byte@,System.UInt32,System.IntPtr,InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioInputHandShake(System.IntPtr,System.UInt16@,System.UInt32,System.IntPtr,InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioInputHandShake(System.IntPtr,System.UInt32@,System.UInt32,System.IntPtr,InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioInputHandShake(System.IntPtr,System.Byte[],System.UInt32,System.IntPtr,InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioInputHandShake(System.IntPtr,System.UInt16[],System.UInt32,System.IntPtr,InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioInputHandShake(System.IntPtr,System.UInt32[],System.UInt32,System.IntPtr,InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioInputHandShake(System.IntPtr,System.IntPtr,System.UInt32,System.IntPtr,InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioInputHandShake(System.IntPtr,System.Byte@,System.UInt32,System.IntPtr,System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioInputHandShake(System.IntPtr,System.UInt16@,System.UInt32,System.IntPtr,System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioInputHandShake(System.IntPtr,System.UInt32@,System.UInt32,System.IntPtr,System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioInputHandShake(System.IntPtr,System.Byte[],System.UInt32,System.IntPtr,System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioInputHandShake(System.IntPtr,System.UInt16[],System.UInt32,System.IntPtr,System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioInputHandShake(System.IntPtr,System.UInt32[],System.UInt32,System.IntPtr,System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioInputHandShakeEx(System.IntPtr,System.Byte@,System.UInt32,InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@,InterfaceCorpDllWrap.IFCDIO_ANY.LPOVERLAPPED_COMPLETION_ROUTINE)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioInputHandShakeEx(System.IntPtr,System.UInt16@,System.UInt32,InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@,InterfaceCorpDllWrap.IFCDIO_ANY.LPOVERLAPPED_COMPLETION_ROUTINE)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioInputHandShakeEx(System.IntPtr,System.UInt32@,System.UInt32,InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@,InterfaceCorpDllWrap.IFCDIO_ANY.LPOVERLAPPED_COMPLETION_ROUTINE)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioInputHandShakeEx(System.IntPtr,System.Byte[],System.UInt32,InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@,InterfaceCorpDllWrap.IFCDIO_ANY.LPOVERLAPPED_COMPLETION_ROUTINE)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioInputHandShakeEx(System.IntPtr,System.UInt16[],System.UInt32,InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@,InterfaceCorpDllWrap.IFCDIO_ANY.LPOVERLAPPED_COMPLETION_ROUTINE)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioInputHandShakeEx(System.IntPtr,System.UInt32[],System.UInt32,InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@,InterfaceCorpDllWrap.IFCDIO_ANY.LPOVERLAPPED_COMPLETION_ROUTINE)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioInputHandShakeEx(System.IntPtr,System.IntPtr,System.UInt32,InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@,InterfaceCorpDllWrap.IFCDIO_ANY.LPOVERLAPPED_COMPLETION_ROUTINE)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioInputHandShakeEx(System.IntPtr,System.Byte@,System.UInt32,System.IntPtr,InterfaceCorpDllWrap.IFCDIO_ANY.LPOVERLAPPED_COMPLETION_ROUTINE)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioInputHandShakeEx(System.IntPtr,System.UInt16@,System.UInt32,System.IntPtr,InterfaceCorpDllWrap.IFCDIO_ANY.LPOVERLAPPED_COMPLETION_ROUTINE)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioInputHandShakeEx(System.IntPtr,System.UInt32@,System.UInt32,System.IntPtr,InterfaceCorpDllWrap.IFCDIO_ANY.LPOVERLAPPED_COMPLETION_ROUTINE)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioInputHandShakeEx(System.IntPtr,System.Byte[],System.UInt32,System.IntPtr,InterfaceCorpDllWrap.IFCDIO_ANY.LPOVERLAPPED_COMPLETION_ROUTINE)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioInputHandShakeEx(System.IntPtr,System.UInt16[],System.UInt32,System.IntPtr,InterfaceCorpDllWrap.IFCDIO_ANY.LPOVERLAPPED_COMPLETION_ROUTINE)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioInputHandShakeEx(System.IntPtr,System.UInt32[],System.UInt32,System.IntPtr,InterfaceCorpDllWrap.IFCDIO_ANY.LPOVERLAPPED_COMPLETION_ROUTINE)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioOutputHandShake(System.IntPtr,System.Byte@,System.UInt32,System.UInt32@,InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioOutputHandShake(System.IntPtr,System.UInt16@,System.UInt32,System.UInt32@,InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioOutputHandShake(System.IntPtr,System.UInt32@,System.UInt32,System.UInt32@,InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioOutputHandShake(System.IntPtr,System.Byte[],System.UInt32,System.UInt32@,InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioOutputHandShake(System.IntPtr,System.UInt16[],System.UInt32,System.UInt32@,InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioOutputHandShake(System.IntPtr,System.UInt32[],System.UInt32,System.UInt32@,InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioOutputHandShake(System.IntPtr,System.IntPtr,System.UInt32,System.UInt32@,InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioOutputHandShake(System.IntPtr,System.Byte@,System.UInt32,System.UInt32@,System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioOutputHandShake(System.IntPtr,System.UInt16@,System.UInt32,System.UInt32@,System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioOutputHandShake(System.IntPtr,System.UInt32@,System.UInt32,System.UInt32@,System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioOutputHandShake(System.IntPtr,System.Byte[],System.UInt32,System.UInt32@,System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioOutputHandShake(System.IntPtr,System.UInt16[],System.UInt32,System.UInt32@,System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioOutputHandShake(System.IntPtr,System.UInt32[],System.UInt32,System.UInt32@,System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioOutputHandShake(System.IntPtr,System.IntPtr,System.UInt32,System.UInt32@,System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioOutputHandShake(System.IntPtr,System.Byte@,System.UInt32,System.UInt32[],InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioOutputHandShake(System.IntPtr,System.UInt16@,System.UInt32,System.UInt32[],InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioOutputHandShake(System.IntPtr,System.UInt32@,System.UInt32,System.UInt32[],InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioOutputHandShake(System.IntPtr,System.Byte[],System.UInt32,System.UInt32[],InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioOutputHandShake(System.IntPtr,System.UInt16[],System.UInt32,System.UInt32[],InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioOutputHandShake(System.IntPtr,System.UInt32[],System.UInt32,System.UInt32[],InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioOutputHandShake(System.IntPtr,System.IntPtr,System.UInt32,System.UInt32[],InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioOutputHandShake(System.IntPtr,System.Byte@,System.UInt32,System.UInt32[],System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioOutputHandShake(System.IntPtr,System.UInt16@,System.UInt32,System.UInt32[],System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioOutputHandShake(System.IntPtr,System.UInt32@,System.UInt32,System.UInt32[],System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioOutputHandShake(System.IntPtr,System.Byte[],System.UInt32,System.UInt32[],System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioOutputHandShake(System.IntPtr,System.UInt16[],System.UInt32,System.UInt32[],System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioOutputHandShake(System.IntPtr,System.UInt32[],System.UInt32,System.UInt32[],System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioOutputHandShake(System.IntPtr,System.IntPtr,System.UInt32,System.UInt32[],System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioOutputHandShake(System.IntPtr,System.Byte@,System.UInt32,System.IntPtr,InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioOutputHandShake(System.IntPtr,System.UInt16@,System.UInt32,System.IntPtr,InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioOutputHandShake(System.IntPtr,System.UInt32@,System.UInt32,System.IntPtr,InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioOutputHandShake(System.IntPtr,System.Byte[],System.UInt32,System.IntPtr,InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioOutputHandShake(System.IntPtr,System.UInt16[],System.UInt32,System.IntPtr,InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioOutputHandShake(System.IntPtr,System.UInt32[],System.UInt32,System.IntPtr,InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioOutputHandShake(System.IntPtr,System.IntPtr,System.UInt32,System.IntPtr,InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioOutputHandShake(System.IntPtr,System.Byte@,System.UInt32,System.IntPtr,System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioOutputHandShake(System.IntPtr,System.UInt16@,System.UInt32,System.IntPtr,System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioOutputHandShake(System.IntPtr,System.UInt32@,System.UInt32,System.IntPtr,System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioOutputHandShake(System.IntPtr,System.Byte[],System.UInt32,System.IntPtr,System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioOutputHandShake(System.IntPtr,System.UInt16[],System.UInt32,System.IntPtr,System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioOutputHandShake(System.IntPtr,System.UInt32[],System.UInt32,System.IntPtr,System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioOutputHandShakeEx(System.IntPtr,System.Byte@,System.UInt32,InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@,InterfaceCorpDllWrap.IFCDIO_ANY.LPOVERLAPPED_COMPLETION_ROUTINE)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioOutputHandShakeEx(System.IntPtr,System.UInt16@,System.UInt32,InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@,InterfaceCorpDllWrap.IFCDIO_ANY.LPOVERLAPPED_COMPLETION_ROUTINE)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioOutputHandShakeEx(System.IntPtr,System.UInt32@,System.UInt32,InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@,InterfaceCorpDllWrap.IFCDIO_ANY.LPOVERLAPPED_COMPLETION_ROUTINE)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioOutputHandShakeEx(System.IntPtr,System.Byte[],System.UInt32,InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@,InterfaceCorpDllWrap.IFCDIO_ANY.LPOVERLAPPED_COMPLETION_ROUTINE)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioOutputHandShakeEx(System.IntPtr,System.UInt16[],System.UInt32,InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@,InterfaceCorpDllWrap.IFCDIO_ANY.LPOVERLAPPED_COMPLETION_ROUTINE)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioOutputHandShakeEx(System.IntPtr,System.UInt32[],System.UInt32,InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@,InterfaceCorpDllWrap.IFCDIO_ANY.LPOVERLAPPED_COMPLETION_ROUTINE)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioOutputHandShakeEx(System.IntPtr,System.IntPtr,System.UInt32,InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@,InterfaceCorpDllWrap.IFCDIO_ANY.LPOVERLAPPED_COMPLETION_ROUTINE)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioOutputHandShakeEx(System.IntPtr,System.Byte@,System.UInt32,System.IntPtr,InterfaceCorpDllWrap.IFCDIO_ANY.LPOVERLAPPED_COMPLETION_ROUTINE)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioOutputHandShakeEx(System.IntPtr,System.UInt16@,System.UInt32,System.IntPtr,InterfaceCorpDllWrap.IFCDIO_ANY.LPOVERLAPPED_COMPLETION_ROUTINE)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioOutputHandShakeEx(System.IntPtr,System.UInt32@,System.UInt32,System.IntPtr,InterfaceCorpDllWrap.IFCDIO_ANY.LPOVERLAPPED_COMPLETION_ROUTINE)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioOutputHandShakeEx(System.IntPtr,System.Byte[],System.UInt32,System.IntPtr,InterfaceCorpDllWrap.IFCDIO_ANY.LPOVERLAPPED_COMPLETION_ROUTINE)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioOutputHandShakeEx(System.IntPtr,System.UInt16[],System.UInt32,System.IntPtr,InterfaceCorpDllWrap.IFCDIO_ANY.LPOVERLAPPED_COMPLETION_ROUTINE)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioOutputHandShakeEx(System.IntPtr,System.UInt32[],System.UInt32,System.IntPtr,InterfaceCorpDllWrap.IFCDIO_ANY.LPOVERLAPPED_COMPLETION_ROUTINE)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioEventRequestPending(System.IntPtr,System.UInt32,System.UInt32@,InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioEventRequestPending(System.IntPtr,System.UInt32,System.UInt32@,System.IntPtr)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioEventRequestPending(System.IntPtr,System.UInt32,System.UInt32[],InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioEventRequestPending(System.IntPtr,System.UInt32,System.UInt32[],System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioEventRequestPending(System.IntPtr,System.UInt32,System.IntPtr,InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioEventRequestPendingEx(System.IntPtr,System.UInt32[],System.UInt32[],InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioEventRequestPendingEx(System.IntPtr,System.UInt32[],System.UInt32[],System.IntPtr)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO_ANY.DioEventRequestPendingEx(System.IntPtr,System.UInt32[],System.IntPtr,InterfaceCorpDllWrap.IFCDIO_ANY.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioInputHandShake(System.UInt32,System.Byte@,System.UInt32,System.UInt32@,InterfaceCorpDllWrap.IFCDIO.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioInputHandShake(System.UInt32,System.UInt16@,System.UInt32,System.UInt32@,InterfaceCorpDllWrap.IFCDIO.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioInputHandShake(System.UInt32,System.UInt32@,System.UInt32,System.UInt32@,InterfaceCorpDllWrap.IFCDIO.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioInputHandShake(System.UInt32,System.Byte[],System.UInt32,System.UInt32@,InterfaceCorpDllWrap.IFCDIO.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioInputHandShake(System.UInt32,System.UInt16[],System.UInt32,System.UInt32@,InterfaceCorpDllWrap.IFCDIO.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioInputHandShake(System.UInt32,System.UInt32[],System.UInt32,System.UInt32@,InterfaceCorpDllWrap.IFCDIO.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioInputHandShake(System.UInt32,System.IntPtr,System.UInt32,System.UInt32@,InterfaceCorpDllWrap.IFCDIO.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioInputHandShake(System.UInt32,System.Byte@,System.UInt32,System.UInt32@,System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioInputHandShake(System.UInt32,System.UInt16@,System.UInt32,System.UInt32@,System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioInputHandShake(System.UInt32,System.UInt32@,System.UInt32,System.UInt32@,System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioInputHandShake(System.UInt32,System.Byte[],System.UInt32,System.UInt32@,System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioInputHandShake(System.UInt32,System.UInt16[],System.UInt32,System.UInt32@,System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioInputHandShake(System.UInt32,System.UInt32[],System.UInt32,System.UInt32@,System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioInputHandShake(System.UInt32,System.IntPtr,System.UInt32,System.UInt32@,System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioInputHandShake(System.UInt32,System.Byte@,System.UInt32,System.UInt32[],InterfaceCorpDllWrap.IFCDIO.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioInputHandShake(System.UInt32,System.UInt16@,System.UInt32,System.UInt32[],InterfaceCorpDllWrap.IFCDIO.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioInputHandShake(System.UInt32,System.UInt32@,System.UInt32,System.UInt32[],InterfaceCorpDllWrap.IFCDIO.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioInputHandShake(System.UInt32,System.Byte[],System.UInt32,System.UInt32[],InterfaceCorpDllWrap.IFCDIO.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioInputHandShake(System.UInt32,System.UInt16[],System.UInt32,System.UInt32[],InterfaceCorpDllWrap.IFCDIO.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioInputHandShake(System.UInt32,System.UInt32[],System.UInt32,System.UInt32[],InterfaceCorpDllWrap.IFCDIO.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioInputHandShake(System.UInt32,System.IntPtr,System.UInt32,System.UInt32[],InterfaceCorpDllWrap.IFCDIO.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioInputHandShake(System.UInt32,System.Byte@,System.UInt32,System.UInt32[],System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioInputHandShake(System.UInt32,System.UInt16@,System.UInt32,System.UInt32[],System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioInputHandShake(System.UInt32,System.UInt32@,System.UInt32,System.UInt32[],System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioInputHandShake(System.UInt32,System.Byte[],System.UInt32,System.UInt32[],System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioInputHandShake(System.UInt32,System.UInt16[],System.UInt32,System.UInt32[],System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioInputHandShake(System.UInt32,System.UInt32[],System.UInt32,System.UInt32[],System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioInputHandShake(System.UInt32,System.IntPtr,System.UInt32,System.UInt32[],System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioInputHandShake(System.UInt32,System.Byte@,System.UInt32,System.IntPtr,InterfaceCorpDllWrap.IFCDIO.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioInputHandShake(System.UInt32,System.UInt16@,System.UInt32,System.IntPtr,InterfaceCorpDllWrap.IFCDIO.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioInputHandShake(System.UInt32,System.UInt32@,System.UInt32,System.IntPtr,InterfaceCorpDllWrap.IFCDIO.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioInputHandShake(System.UInt32,System.Byte[],System.UInt32,System.IntPtr,InterfaceCorpDllWrap.IFCDIO.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioInputHandShake(System.UInt32,System.UInt16[],System.UInt32,System.IntPtr,InterfaceCorpDllWrap.IFCDIO.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioInputHandShake(System.UInt32,System.UInt32[],System.UInt32,System.IntPtr,InterfaceCorpDllWrap.IFCDIO.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioInputHandShake(System.UInt32,System.IntPtr,System.UInt32,System.IntPtr,InterfaceCorpDllWrap.IFCDIO.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioInputHandShake(System.UInt32,System.Byte@,System.UInt32,System.IntPtr,System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioInputHandShake(System.UInt32,System.UInt16@,System.UInt32,System.IntPtr,System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioInputHandShake(System.UInt32,System.UInt32@,System.UInt32,System.IntPtr,System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioInputHandShake(System.UInt32,System.Byte[],System.UInt32,System.IntPtr,System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioInputHandShake(System.UInt32,System.UInt16[],System.UInt32,System.IntPtr,System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioInputHandShake(System.UInt32,System.UInt32[],System.UInt32,System.IntPtr,System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioInputHandShakeEx(System.UInt32,System.Byte@,System.UInt32,InterfaceCorpDllWrap.IFCDIO.OVERLAPPED@,InterfaceCorpDllWrap.IFCDIO.LPOVERLAPPED_COMPLETION_ROUTINE)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioInputHandShakeEx(System.UInt32,System.UInt16@,System.UInt32,InterfaceCorpDllWrap.IFCDIO.OVERLAPPED@,InterfaceCorpDllWrap.IFCDIO.LPOVERLAPPED_COMPLETION_ROUTINE)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioInputHandShakeEx(System.UInt32,System.UInt32@,System.UInt32,InterfaceCorpDllWrap.IFCDIO.OVERLAPPED@,InterfaceCorpDllWrap.IFCDIO.LPOVERLAPPED_COMPLETION_ROUTINE)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioInputHandShakeEx(System.UInt32,System.Byte[],System.UInt32,InterfaceCorpDllWrap.IFCDIO.OVERLAPPED@,InterfaceCorpDllWrap.IFCDIO.LPOVERLAPPED_COMPLETION_ROUTINE)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioInputHandShakeEx(System.UInt32,System.UInt16[],System.UInt32,InterfaceCorpDllWrap.IFCDIO.OVERLAPPED@,InterfaceCorpDllWrap.IFCDIO.LPOVERLAPPED_COMPLETION_ROUTINE)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioInputHandShakeEx(System.UInt32,System.UInt32[],System.UInt32,InterfaceCorpDllWrap.IFCDIO.OVERLAPPED@,InterfaceCorpDllWrap.IFCDIO.LPOVERLAPPED_COMPLETION_ROUTINE)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioInputHandShakeEx(System.UInt32,System.IntPtr,System.UInt32,InterfaceCorpDllWrap.IFCDIO.OVERLAPPED@,InterfaceCorpDllWrap.IFCDIO.LPOVERLAPPED_COMPLETION_ROUTINE)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioInputHandShakeEx(System.UInt32,System.Byte@,System.UInt32,System.IntPtr,InterfaceCorpDllWrap.IFCDIO.LPOVERLAPPED_COMPLETION_ROUTINE)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioInputHandShakeEx(System.UInt32,System.UInt16@,System.UInt32,System.IntPtr,InterfaceCorpDllWrap.IFCDIO.LPOVERLAPPED_COMPLETION_ROUTINE)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioInputHandShakeEx(System.UInt32,System.UInt32@,System.UInt32,System.IntPtr,InterfaceCorpDllWrap.IFCDIO.LPOVERLAPPED_COMPLETION_ROUTINE)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioInputHandShakeEx(System.UInt32,System.Byte[],System.UInt32,System.IntPtr,InterfaceCorpDllWrap.IFCDIO.LPOVERLAPPED_COMPLETION_ROUTINE)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioInputHandShakeEx(System.UInt32,System.UInt16[],System.UInt32,System.IntPtr,InterfaceCorpDllWrap.IFCDIO.LPOVERLAPPED_COMPLETION_ROUTINE)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioInputHandShakeEx(System.UInt32,System.UInt32[],System.UInt32,System.IntPtr,InterfaceCorpDllWrap.IFCDIO.LPOVERLAPPED_COMPLETION_ROUTINE)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioOutputHandShake(System.UInt32,System.Byte@,System.UInt32,System.UInt32@,InterfaceCorpDllWrap.IFCDIO.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioOutputHandShake(System.UInt32,System.UInt16@,System.UInt32,System.UInt32@,InterfaceCorpDllWrap.IFCDIO.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioOutputHandShake(System.UInt32,System.UInt32@,System.UInt32,System.UInt32@,InterfaceCorpDllWrap.IFCDIO.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioOutputHandShake(System.UInt32,System.Byte[],System.UInt32,System.UInt32@,InterfaceCorpDllWrap.IFCDIO.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioOutputHandShake(System.UInt32,System.UInt16[],System.UInt32,System.UInt32@,InterfaceCorpDllWrap.IFCDIO.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioOutputHandShake(System.UInt32,System.UInt32[],System.UInt32,System.UInt32@,InterfaceCorpDllWrap.IFCDIO.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioOutputHandShake(System.UInt32,System.IntPtr,System.UInt32,System.UInt32@,InterfaceCorpDllWrap.IFCDIO.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioOutputHandShake(System.UInt32,System.Byte@,System.UInt32,System.UInt32@,System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioOutputHandShake(System.UInt32,System.UInt16@,System.UInt32,System.UInt32@,System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioOutputHandShake(System.UInt32,System.UInt32@,System.UInt32,System.UInt32@,System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioOutputHandShake(System.UInt32,System.Byte[],System.UInt32,System.UInt32@,System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioOutputHandShake(System.UInt32,System.UInt16[],System.UInt32,System.UInt32@,System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioOutputHandShake(System.UInt32,System.UInt32[],System.UInt32,System.UInt32@,System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioOutputHandShake(System.UInt32,System.IntPtr,System.UInt32,System.UInt32@,System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioOutputHandShake(System.UInt32,System.Byte@,System.UInt32,System.UInt32[],InterfaceCorpDllWrap.IFCDIO.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioOutputHandShake(System.UInt32,System.UInt16@,System.UInt32,System.UInt32[],InterfaceCorpDllWrap.IFCDIO.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioOutputHandShake(System.UInt32,System.UInt32@,System.UInt32,System.UInt32[],InterfaceCorpDllWrap.IFCDIO.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioOutputHandShake(System.UInt32,System.Byte[],System.UInt32,System.UInt32[],InterfaceCorpDllWrap.IFCDIO.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioOutputHandShake(System.UInt32,System.UInt16[],System.UInt32,System.UInt32[],InterfaceCorpDllWrap.IFCDIO.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioOutputHandShake(System.UInt32,System.UInt32[],System.UInt32,System.UInt32[],InterfaceCorpDllWrap.IFCDIO.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioOutputHandShake(System.UInt32,System.IntPtr,System.UInt32,System.UInt32[],InterfaceCorpDllWrap.IFCDIO.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioOutputHandShake(System.UInt32,System.Byte@,System.UInt32,System.UInt32[],System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioOutputHandShake(System.UInt32,System.UInt16@,System.UInt32,System.UInt32[],System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioOutputHandShake(System.UInt32,System.UInt32@,System.UInt32,System.UInt32[],System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioOutputHandShake(System.UInt32,System.Byte[],System.UInt32,System.UInt32[],System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioOutputHandShake(System.UInt32,System.UInt16[],System.UInt32,System.UInt32[],System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioOutputHandShake(System.UInt32,System.UInt32[],System.UInt32,System.UInt32[],System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioOutputHandShake(System.UInt32,System.IntPtr,System.UInt32,System.UInt32[],System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioOutputHandShake(System.UInt32,System.Byte@,System.UInt32,System.IntPtr,InterfaceCorpDllWrap.IFCDIO.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioOutputHandShake(System.UInt32,System.UInt16@,System.UInt32,System.IntPtr,InterfaceCorpDllWrap.IFCDIO.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioOutputHandShake(System.UInt32,System.UInt32@,System.UInt32,System.IntPtr,InterfaceCorpDllWrap.IFCDIO.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioOutputHandShake(System.UInt32,System.Byte[],System.UInt32,System.IntPtr,InterfaceCorpDllWrap.IFCDIO.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioOutputHandShake(System.UInt32,System.UInt16[],System.UInt32,System.IntPtr,InterfaceCorpDllWrap.IFCDIO.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioOutputHandShake(System.UInt32,System.UInt32[],System.UInt32,System.IntPtr,InterfaceCorpDllWrap.IFCDIO.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioOutputHandShake(System.UInt32,System.IntPtr,System.UInt32,System.IntPtr,InterfaceCorpDllWrap.IFCDIO.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioOutputHandShake(System.UInt32,System.Byte@,System.UInt32,System.IntPtr,System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioOutputHandShake(System.UInt32,System.UInt16@,System.UInt32,System.IntPtr,System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioOutputHandShake(System.UInt32,System.UInt32@,System.UInt32,System.IntPtr,System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioOutputHandShake(System.UInt32,System.Byte[],System.UInt32,System.IntPtr,System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioOutputHandShake(System.UInt32,System.UInt16[],System.UInt32,System.IntPtr,System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioOutputHandShake(System.UInt32,System.UInt32[],System.UInt32,System.IntPtr,System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioOutputHandShakeEx(System.UInt32,System.Byte@,System.UInt32,InterfaceCorpDllWrap.IFCDIO.OVERLAPPED@,InterfaceCorpDllWrap.IFCDIO.LPOVERLAPPED_COMPLETION_ROUTINE)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioOutputHandShakeEx(System.UInt32,System.UInt16@,System.UInt32,InterfaceCorpDllWrap.IFCDIO.OVERLAPPED@,InterfaceCorpDllWrap.IFCDIO.LPOVERLAPPED_COMPLETION_ROUTINE)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioOutputHandShakeEx(System.UInt32,System.UInt32@,System.UInt32,InterfaceCorpDllWrap.IFCDIO.OVERLAPPED@,InterfaceCorpDllWrap.IFCDIO.LPOVERLAPPED_COMPLETION_ROUTINE)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioOutputHandShakeEx(System.UInt32,System.Byte[],System.UInt32,InterfaceCorpDllWrap.IFCDIO.OVERLAPPED@,InterfaceCorpDllWrap.IFCDIO.LPOVERLAPPED_COMPLETION_ROUTINE)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioOutputHandShakeEx(System.UInt32,System.UInt16[],System.UInt32,InterfaceCorpDllWrap.IFCDIO.OVERLAPPED@,InterfaceCorpDllWrap.IFCDIO.LPOVERLAPPED_COMPLETION_ROUTINE)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioOutputHandShakeEx(System.UInt32,System.UInt32[],System.UInt32,InterfaceCorpDllWrap.IFCDIO.OVERLAPPED@,InterfaceCorpDllWrap.IFCDIO.LPOVERLAPPED_COMPLETION_ROUTINE)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioOutputHandShakeEx(System.UInt32,System.IntPtr,System.UInt32,InterfaceCorpDllWrap.IFCDIO.OVERLAPPED@,InterfaceCorpDllWrap.IFCDIO.LPOVERLAPPED_COMPLETION_ROUTINE)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioOutputHandShakeEx(System.UInt32,System.Byte@,System.UInt32,System.IntPtr,InterfaceCorpDllWrap.IFCDIO.LPOVERLAPPED_COMPLETION_ROUTINE)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioOutputHandShakeEx(System.UInt32,System.UInt16@,System.UInt32,System.IntPtr,InterfaceCorpDllWrap.IFCDIO.LPOVERLAPPED_COMPLETION_ROUTINE)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioOutputHandShakeEx(System.UInt32,System.UInt32@,System.UInt32,System.IntPtr,InterfaceCorpDllWrap.IFCDIO.LPOVERLAPPED_COMPLETION_ROUTINE)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioOutputHandShakeEx(System.UInt32,System.Byte[],System.UInt32,System.IntPtr,InterfaceCorpDllWrap.IFCDIO.LPOVERLAPPED_COMPLETION_ROUTINE)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioOutputHandShakeEx(System.UInt32,System.UInt16[],System.UInt32,System.IntPtr,InterfaceCorpDllWrap.IFCDIO.LPOVERLAPPED_COMPLETION_ROUTINE)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioOutputHandShakeEx(System.UInt32,System.UInt32[],System.UInt32,System.IntPtr,InterfaceCorpDllWrap.IFCDIO.LPOVERLAPPED_COMPLETION_ROUTINE)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioEventRequestPending(System.UInt32,System.UInt32,System.UInt32@,InterfaceCorpDllWrap.IFCDIO.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioEventRequestPending(System.UInt32,System.UInt32,System.UInt32@,System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioEventRequestPendingEx(System.UInt32,System.UInt32[],System.UInt32[],InterfaceCorpDllWrap.IFCDIO.OVERLAPPED@)">
            <summary>
            This function or variable is unsafe.
            </summary>
        </member>
        <member name="M:InterfaceCorpDllWrap.IFCDIO.DioEventRequestPendingEx(System.UInt32,System.UInt32[],System.UInt32[],System.IntPtr)">
            <summary>
            This function or variable may be unsafe.
            </summary>
        </member>
        <member name="T:CgpibConst">
            <summary></summary>
        </member>
        <member name="F:CgpibConst.HLP_SAMPLES">
            <summary></summary>
        </member>
        <member name="F:CgpibConst.HLP_SAMPLES_MASTER">
            <summary></summary>
        </member>
        <member name="F:CgpibConst.HLP_SAMPLES_SLAVE">
            <summary></summary>
        </member>
        <member name="F:CgpibConst.HLP_SAMPLES_MLTMETER">
            <summary></summary>
        </member>
        <member name="F:CgpibConst.HLP_SAMPLES_DVS">
            <summary></summary>
        </member>
        <member name="F:CgpibConst.HLP_SAMPLES_OSCILLO">
            <summary></summary>
        </member>
        <member name="F:CgpibConst.HLP_SAMPLES_POLLING">
            <summary></summary>
        </member>
        <member name="F:CgpibConst.HLP_SAMPLES_PARALLEL">
            <summary></summary>
        </member>
        <member name="F:CgpibConst.HLP_SAMPLES_MLTLINE">
            <summary></summary>
        </member>
        <member name="F:CgpibConst.ID_TIMER">
            <summary></summary>
        </member>
        <member name="F:CgpibConst.ID_TIMER_TERMINATE">
            <summary></summary>
        </member>
        <member name="F:CgpibConst.ID_TIMER_TRANSMISSION">
            <summary></summary>
        </member>
        <member name="F:CgpibConst.ID_TIMER_RECEPTION">
            <summary></summary>
        </member>
        <member name="F:CgpibConst.TIMERCOUNT">
            <summary></summary>
        </member>
        <member name="F:CgpibConst.TIMERCOUNT_TERMINATE">
            <summary></summary>
        </member>
        <member name="T:CgpibCs.Cgpib">
            <summary>
            Cgpib の概要の説明です。
            </summary>
        </member>
        <member name="F:CgpibCs.Cgpib.szHelpFileName95">
            <summary>
            アンマネージDLL(apigpib(1,2,3,4).DLL)のインポート
            </summary>
        </member>
        <member name="F:CgpibCs.Cgpib.szHelpFileNameNT">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.#ctor">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Ini">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Ifc(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Ren">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Resetren">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Talk(System.UInt32[],System.UInt32,System.String)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.TalkBinary(System.UInt32[],System.UInt32,System.Byte[])">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Listen(System.UInt32[],System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.ListenBinary(System.UInt32[],System.UInt32@,System.Byte[])">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Poll(System.UInt32[],System.UInt32[])">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Srq(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Stb(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Delim(System.UInt32,System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Timeout(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Chkstb(System.UInt32@,System.UInt32@)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Readreg(System.UInt32,System.UInt32@)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Dma(System.UInt32,System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Exit">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Comand(System.UInt32[])">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Dmainuse">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Ststop(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Dmastop">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Ppollmode(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Stppoll(System.UInt32[],System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Exppoll(System.UInt32@)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Stwait(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Waittime(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Readbus(System.UInt32@)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Sfile(System.UInt32[],System.UInt32,System.String)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Rfile(System.UInt32[],System.UInt32,System.String)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Sdc(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Dcl">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Get(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Gtl(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Llo">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Tct(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Crst(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Copc(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Cwai(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Ccls(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Ctrg(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Cpre(System.UInt32,System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Cese(System.UInt32,System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Csre(System.UInt32,System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qidn(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qopt(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qpud(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qrdt(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qcal(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qlrn(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qtst(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qopc(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qemc(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qgmc(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qlmc(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qist(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qpre(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qese(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qesr(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qpsc(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qsre(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qstb(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qddt(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.TaLaBit(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Boardsts(System.UInt32,System.UInt32@)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.SrqEvent(System.Int32,System.UInt16,System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.SrqEventEx(System.Int32,System.UInt16,System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.SrqOn">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.DevFind(System.UInt32[])">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.InpB(System.Int16)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.InpW(System.Int16)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.InpD(System.Int16)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.OutB(System.Int16,System.Byte)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.OutW(System.Int16,System.Int16)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.OutD(System.Int16,System.Int32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.SetEvent(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.SetEventSrq(System.Int32,System.UInt16,System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.SetEventDet(System.Int32,System.UInt16,System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.SetEventDec(System.Int32,System.UInt16,System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.SetEventIfc(System.Int32,System.UInt16,System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.EnableNextEvent">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.SrqEx(System.UInt32,System.UInt32,System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.UpperCode(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvSettings(System.String,System.String,System.String,System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvSettingsToStr(System.UInt32,System.UInt32,System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvStrToDbl(System.String,System.Double@)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvStrToDblArray(System.String,System.Double[],System.UInt32@)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvStrToFlt(System.String,System.Single@)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvStrToFltArray(System.String,System.Single[],System.UInt32@)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvDblToStr(System.Text.StringBuilder,System.UInt32@,System.Double)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvDblArrayToStr(System.Text.StringBuilder,System.UInt32@,System.Double[],System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvFltToStr(System.Text.StringBuilder,System.UInt32@,System.Single)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvFltArrayToStr(System.Text.StringBuilder,System.UInt32@,System.Single[],System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.PollEx(System.UInt32[],System.UInt32[],System.UInt32[])">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.SlowMode(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvCvSettings(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvCvi(System.Byte[],System.Int16@)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvCviArray(System.Byte[],System.Int16[],System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvCvs(System.Byte[],System.Single@)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvCvsArray(System.Byte[],System.Single[],System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvCvd(System.Byte[],System.Double@)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvCvdArray(System.Byte[],System.Double[],System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.TalkEx(System.UInt32[],System.UInt32@,System.String)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.TalkExBinary(System.UInt32[],System.UInt32@,System.Byte[])">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.ListenEx(System.UInt32[],System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.ListenExBinary(System.UInt32[],System.UInt32@,System.Byte[])">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.TalkAsync(System.UInt32[],System.UInt32@,System.String)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.TalkAsyncBinary(System.UInt32[],System.UInt32@,System.Byte[])">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.ListenAsync(System.UInt32[],System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.ListenAsyncBinary(System.UInt32[],System.UInt32@,System.Byte[])">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CommandAsync(System.UInt32[])">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CheckAsync(System.UInt32,System.UInt32@)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.StopAsync">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.DevFindEx(System.Int16,System.Int16,System.Int16@)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.BoardstsEx(System.UInt32,System.UInt32,System.UInt32@)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Ini2">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Ifc2(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Ren2">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Resetren2">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Talk2(System.UInt32[],System.UInt32,System.String)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.TalkBinary2(System.UInt32[],System.UInt32,System.Byte[])">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Listen2(System.UInt32[],System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.ListenBinary2(System.UInt32[],System.UInt32@,System.Byte[])">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Poll2(System.UInt32[],System.UInt32[])">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Srq2(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Stb2(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Delim2(System.UInt32,System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Timeout2(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Chkstb2(System.UInt32@,System.UInt32@)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Readreg2(System.UInt32,System.UInt32@)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Dma2(System.UInt32,System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Exit2">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Comand2(System.UInt32[])">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Dmainuse2">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Ststop2(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Dmastop2">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Ppollmode2(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Stppoll2(System.UInt32[],System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Exppoll2(System.UInt32@)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Stwait2(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Waittime2(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Readbus2(System.UInt32@)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Sfile2(System.UInt32[],System.UInt32,System.String)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Rfile2(System.UInt32[],System.UInt32,System.String)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Sdc2(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Dcl2">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Get2(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Gtl2(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Llo2">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Tct2(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Crst2(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Copc2(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Cwai2(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Ccls2(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Ctrg2(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Cpre2(System.UInt32,System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Cese2(System.UInt32,System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Csre2(System.UInt32,System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qidn2(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qopt2(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qpud2(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qrdt2(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qcal2(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qlrn2(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qtst2(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qopc2(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qemc2(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qgmc2(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qlmc2(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qist2(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qpre2(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qese2(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qesr2(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qpsc2(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qsre2(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qstb2(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qddt2(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.TaLaBit2(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Boardsts2(System.UInt32,System.UInt32@)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.SrqEvent2(System.Int32,System.UInt16,System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.SrqEventEx2(System.Int32,System.UInt16,System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.SrqOn2">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.DevFind2(System.UInt32[])">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.InpB2(System.Int16)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.InpW2(System.Int16)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.InpD2(System.Int16)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.OutB2(System.Int16,System.Byte)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.OutW2(System.Int16,System.Int16)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.OutD2(System.Int16,System.Int32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.SetEvent2(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.SetEventSrq2(System.Int32,System.UInt16,System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.SetEventDet2(System.Int32,System.UInt16,System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.SetEventDec2(System.Int32,System.UInt16,System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.SetEventIfc2(System.Int32,System.UInt16,System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.EnableNextEvent2">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.SrqEx2(System.UInt32,System.UInt32,System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.UpperCode2(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvSettings2(System.String,System.String,System.String,System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvSettingsToStr2(System.UInt32,System.UInt32,System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvStrToDbl2(System.String,System.Double@)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvStrToDblArray2(System.String,System.Double[],System.UInt32@)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvStrToFlt2(System.String,System.Single@)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvStrToFltArray2(System.String,System.Single[],System.UInt32@)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvDblToStr2(System.Text.StringBuilder,System.UInt32@,System.Double)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvDblArrayToStr2(System.Text.StringBuilder,System.UInt32@,System.Double[],System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvFltToStr2(System.Text.StringBuilder,System.UInt32@,System.Single)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvFltArrayToStr2(System.Text.StringBuilder,System.UInt32@,System.Single[],System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.PollEx2(System.UInt32[],System.UInt32[],System.UInt32[])">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.SlowMode2(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvCvSettings2(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvCvi2(System.Byte[],System.Int16@)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvCviArray2(System.Byte[],System.Int16[],System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvCvs2(System.Byte[],System.Single@)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvCvsArray2(System.Byte[],System.Single[],System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvCvd2(System.Byte[],System.Double@)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvCvdArray2(System.Byte[],System.Double[],System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.TalkEx2(System.UInt32[],System.UInt32@,System.String)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.TalkExBinary2(System.UInt32[],System.UInt32@,System.Byte[])">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.ListenEx2(System.UInt32[],System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.ListenExBinary2(System.UInt32[],System.UInt32@,System.Byte[])">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.TalkAsync2(System.UInt32[],System.UInt32@,System.String)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.TalkAsyncBinary2(System.UInt32[],System.UInt32@,System.Byte[])">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.ListenAsync2(System.UInt32[],System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.ListenAsyncBinary2(System.UInt32[],System.UInt32@,System.Byte[])">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CommandAsync2(System.UInt32[])">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CheckAsync2(System.UInt32,System.UInt32@)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.StopAsync2">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.DevFindEx2(System.Int16,System.Int16,System.Int16@)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.BoardstsEx2(System.UInt32,System.UInt32,System.UInt32@)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Ini3">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Ifc3(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Ren3">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Resetren3">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Talk3(System.UInt32[],System.UInt32,System.String)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.TalkBinary3(System.UInt32[],System.UInt32,System.Byte[])">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Listen3(System.UInt32[],System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.ListenBinary3(System.UInt32[],System.UInt32@,System.Byte[])">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Poll3(System.UInt32[],System.UInt32[])">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Srq3(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Stb3(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Delim3(System.UInt32,System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Timeout3(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Chkstb3(System.UInt32@,System.UInt32@)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Readreg3(System.UInt32,System.UInt32@)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Dma3(System.UInt32,System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Exit3">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Comand3(System.UInt32[])">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Dmainuse3">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Ststop3(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Dmastop3">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Ppollmode3(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Stppoll3(System.UInt32[],System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Exppoll3(System.UInt32@)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Stwait3(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Waittime3(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Readbus3(System.UInt32@)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Sfile3(System.UInt32[],System.UInt32,System.String)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Rfile3(System.UInt32[],System.UInt32,System.String)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Sdc3(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Dcl3">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Get3(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Gtl3(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Llo3">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Tct3(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Crst3(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Copc3(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Cwai3(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Ccls3(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Ctrg3(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Cpre3(System.UInt32,System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Cese3(System.UInt32,System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Csre3(System.UInt32,System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qidn3(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qopt3(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qpud3(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qrdt3(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qcal3(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qlrn3(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qtst3(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qopc3(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qemc3(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qgmc3(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qlmc3(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qist3(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qpre3(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qese3(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qesr3(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qpsc3(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qsre3(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qstb3(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qddt3(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.TaLaBit3(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Boardsts3(System.UInt32,System.UInt32@)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.SrqEvent3(System.Int32,System.UInt16,System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.SrqEventEx3(System.Int32,System.UInt16,System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.SrqOn3">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.DevFind3(System.UInt32[])">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.InpB3(System.Int16)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.InpW3(System.Int16)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.InpD3(System.Int16)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.OutB3(System.Int16,System.Byte)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.OutW3(System.Int16,System.Int16)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.OutD3(System.Int16,System.Int32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.SetEvent3(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.SetEventSrq3(System.Int32,System.UInt16,System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.SetEventDet3(System.Int32,System.UInt16,System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.SetEventDec3(System.Int32,System.UInt16,System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.SetEventIfc3(System.Int32,System.UInt16,System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.EnableNextEvent3">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.SrqEx3(System.UInt32,System.UInt32,System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.UpperCode3(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvSettings3(System.String,System.String,System.String,System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvSettingsToStr3(System.UInt32,System.UInt32,System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvStrToDbl3(System.String,System.Double@)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvStrToDblArray3(System.String,System.Double[],System.UInt32@)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvStrToFlt3(System.String,System.Single@)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvStrToFltArray3(System.String,System.Single[],System.UInt32@)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvDblToStr3(System.Text.StringBuilder,System.UInt32@,System.Double)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvDblArrayToStr3(System.Text.StringBuilder,System.UInt32@,System.Double[],System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvFltToStr3(System.Text.StringBuilder,System.UInt32@,System.Single)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvFltArrayToStr3(System.Text.StringBuilder,System.UInt32@,System.Single[],System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.PollEx3(System.UInt32[],System.UInt32[],System.UInt32[])">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.SlowMode3(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvCvSettings3(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvCvi3(System.Byte[],System.Int16@)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvCviArray3(System.Byte[],System.Int16[],System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvCvs3(System.Byte[],System.Single@)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvCvsArray3(System.Byte[],System.Single[],System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvCvd3(System.Byte[],System.Double@)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvCvdArray3(System.Byte[],System.Double[],System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.TalkEx3(System.UInt32[],System.UInt32@,System.String)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.TalkExBinary3(System.UInt32[],System.UInt32@,System.Byte[])">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.ListenEx3(System.UInt32[],System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.ListenExBinary3(System.UInt32[],System.UInt32@,System.Byte[])">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.TalkAsync3(System.UInt32[],System.UInt32@,System.String)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.TalkAsyncBinary3(System.UInt32[],System.UInt32@,System.Byte[])">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.ListenAsync3(System.UInt32[],System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.ListenAsyncBinary3(System.UInt32[],System.UInt32@,System.Byte[])">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CommandAsync3(System.UInt32[])">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CheckAsync3(System.UInt32,System.UInt32@)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.StopAsync3">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.DevFindEx3(System.Int16,System.Int16,System.Int16@)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.BoardstsEx3(System.UInt32,System.UInt32,System.UInt32@)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Ini4">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Ifc4(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Ren4">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Resetren4">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Talk4(System.UInt32[],System.UInt32,System.String)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.TalkBinary4(System.UInt32[],System.UInt32,System.Byte[])">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Listen4(System.UInt32[],System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.ListenBinary4(System.UInt32[],System.UInt32@,System.Byte[])">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Poll4(System.UInt32[],System.UInt32[])">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Srq4(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Stb4(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Delim4(System.UInt32,System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Timeout4(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Chkstb4(System.UInt32@,System.UInt32@)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Readreg4(System.UInt32,System.UInt32@)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Dma4(System.UInt32,System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Exit4">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Comand4(System.UInt32[])">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Dmainuse4">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Ststop4(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Dmastop4">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Ppollmode4(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Stppoll4(System.UInt32[],System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Exppoll4(System.UInt32@)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Stwait4(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Waittime4(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Readbus4(System.UInt32@)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Sfile4(System.UInt32[],System.UInt32,System.String)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Rfile4(System.UInt32[],System.UInt32,System.String)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Sdc4(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Dcl4">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Get4(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Gtl4(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Llo4">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Tct4(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Crst4(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Copc4(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Cwai4(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Ccls4(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Ctrg4(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Cpre4(System.UInt32,System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Cese4(System.UInt32,System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Csre4(System.UInt32,System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qidn4(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qopt4(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qpud4(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qrdt4(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qcal4(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qlrn4(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qtst4(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qopc4(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qemc4(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qgmc4(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qlmc4(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qist4(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qpre4(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qese4(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qesr4(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qpsc4(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qsre4(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qstb4(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Qddt4(System.UInt32,System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.TaLaBit4(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Boardsts4(System.UInt32,System.UInt32@)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.SrqEvent4(System.Int32,System.UInt16,System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.SrqEventEx4(System.Int32,System.UInt16,System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.SrqOn4">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.DevFind4(System.UInt32[])">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.InpB4(System.Int16)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.InpW4(System.Int16)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.InpD4(System.Int16)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.OutB4(System.Int16,System.Byte)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.OutW4(System.Int16,System.Int16)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.OutD4(System.Int16,System.Int32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.SetEvent4(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.SetEventSrq4(System.Int32,System.UInt16,System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.SetEventDet4(System.Int32,System.UInt16,System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.SetEventDec4(System.Int32,System.UInt16,System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.SetEventIfc4(System.Int32,System.UInt16,System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.EnableNextEvent4">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.SrqEx4(System.UInt32,System.UInt32,System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.UpperCode4(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvSettings4(System.String,System.String,System.String,System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvSettingsToStr4(System.UInt32,System.UInt32,System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvStrToDbl4(System.String,System.Double@)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvStrToDblArray4(System.String,System.Double[],System.UInt32@)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvStrToFlt4(System.String,System.Single@)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvStrToFltArray4(System.String,System.Single[],System.UInt32@)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvDblToStr4(System.Text.StringBuilder,System.UInt32@,System.Double)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvDblArrayToStr4(System.Text.StringBuilder,System.UInt32@,System.Double[],System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvFltToStr4(System.Text.StringBuilder,System.UInt32@,System.Single)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvFltArrayToStr4(System.Text.StringBuilder,System.UInt32@,System.Single[],System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.PollEx4(System.UInt32[],System.UInt32[],System.UInt32[])">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.SlowMode4(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvCvSettings4(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvCvi4(System.Byte[],System.Int16@)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvCviArray4(System.Byte[],System.Int16[],System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvCvs4(System.Byte[],System.Single@)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvCvsArray4(System.Byte[],System.Single[],System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvCvd4(System.Byte[],System.Double@)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CnvCvdArray4(System.Byte[],System.Double[],System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.TalkEx4(System.UInt32[],System.UInt32@,System.String)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.TalkExBinary4(System.UInt32[],System.UInt32@,System.Byte[])">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.ListenEx4(System.UInt32[],System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.ListenExBinary4(System.UInt32[],System.UInt32@,System.Byte[])">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.TalkAsync4(System.UInt32[],System.UInt32@,System.String)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.TalkAsyncBinary4(System.UInt32[],System.UInt32@,System.Byte[])">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.ListenAsync4(System.UInt32[],System.UInt32@,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.ListenAsyncBinary4(System.UInt32[],System.UInt32@,System.Byte[])">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CommandAsync4(System.UInt32[])">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.CheckAsync4(System.UInt32,System.UInt32@)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.StopAsync4">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.DevFindEx4(System.Int16,System.Int16,System.Int16@)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.BoardstsEx4(System.UInt32,System.UInt32,System.UInt32@)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.gpGetAsyncKeyState(System.Int32)">
            <summary></summary>
        </member>
        <member name="M:CgpibCs.Cgpib.Help(System.Int32,System.String,System.Int32,System.UInt32)">
            <summary></summary>
        </member>
        <member name="T:BelicsClass.Common.TOUCHINPUT">
            <summary>
            Touch API defined structures [winuser.h]
            </summary>
        </member>
        <member name="T:BelicsClass.Common.POINTS">
            <summary>
            A Simple POINTS Interop structure
            </summary>
        </member>
        <member name="T:BelicsClass.Common.POINT">
            <summary>
            A Simple POINT Interop structure
            </summary>
        </member>
        <member name="T:BelicsClass.Common.GESTURECONFIG">
            <summary>
            Gesture Config Interop Structure
            </summary>
        </member>
        <member name="T:BelicsClass.Common.GESTUREINFO">
            <summary>
            Gesture Info Interop Structure
            </summary>
        </member>
        <member name="M:BelicsClass.Common.Kernel32.GetCurrentThreadId">
            <summary>
            Get the native thread id
            </summary>
            <returns>Thread ID</returns>
        </member>
        <member name="T:BelicsClass.Network.BL_TcpP2PClient">
            <summary>
            TcpP2PClient の概要の説明です。
            </summary>
        </member>
        <member name="M:BelicsClass.Network.BL_TcpP2PClient.#ctor(System.Net.IPAddress,System.Int32,System.Net.IPAddress,System.Int32,System.Int32,System.Int32)">
            <summary>
            コンストラクタです。
            </summary>
            <param name="localIP">自分のIPアドレスを指定します。特に指定が無い場合はIPAddress.Anyを指定してください。</param>
            <param name="localPort">自分のポート番号を指定します。特に指定が無い場合は0を指定してください。</param>
            <param name="serverIP">接続先(サーバ)のIPアドレスを指定します。</param>
            <param name="serverPort">接続先(サーバ)のポート番号を指定します。</param>
            <param name="sendBufferCount">送信データのバッファ数を指定します。連続送信回数を考慮して設定してください。</param>
            <param name="receiveBufferCount">受信データのバッファ数を指定します。連続受信回数を考慮して設定してください。</param>
        </member>
        <member name="M:BelicsClass.Network.BL_TcpP2PClient.#ctor(System.Net.IPAddress,System.Int32,System.Net.IPAddress,System.Int32,System.Int32,System.Int32,BelicsClass.Network.BL_TcpP2P.BL_FormatType)">
            <summary>
            コンストラクタです。
            </summary>
            <param name="localIP">自分のIPアドレスを指定します。特に指定が無い場合はIPAddress.Anyを指定してください。</param>
            <param name="localPort">自分のポート番号を指定します。特に指定が無い場合は0を指定してください。</param>
            <param name="serverIP">接続先(サーバ)のIPアドレスを指定します。</param>
            <param name="serverPort">接続先(サーバ)のポート番号を指定します。</param>
            <param name="sendBufferCount">送信データのバッファ数を指定します。連続送信回数を考慮して設定してください。</param>
            <param name="receiveBufferCount">受信データのバッファ数を指定します。連続受信回数を考慮して設定してください。</param>
            <param name="formatType">フォーマット種別を指定します。</param>
        </member>
        <member name="F:BelicsClass.Network.BL_TcpP2PClient.m_Local">
            <summary>ローカルのエンドポイントです。</summary>
        </member>
        <member name="F:BelicsClass.Network.BL_TcpP2PClient.m_Remote">
            <summary>接続先です。</summary>
        </member>
        <member name="M:BelicsClass.Network.BL_TcpP2PClient.Link">
            <summary>
            リンクする
            </summary>
        </member>
        <member name="E:BelicsClass.Network.BL_TcpP2PClient.EventError">
            <summary>
            TCPエラーが発生した際に発生するイベントです
            </summary>
        </member>
        <member name="T:BelicsClass.Common.BL_Shutdown">
            <summary>
            Windowsをシャットダウンするクラス
            </summary>
        </member>
        <member name="F:BelicsClass.Common.BL_Shutdown.Force">
            <summary>
            EWX_FORCE
            上記パラメータと同時に設定します。
            プロセスを強制的に終了させます。
            このフラグを指定すると、システムは、現在実行されているアプリケーションへ 
            WM_QUERYENDSESSION メッセージや WM_ENDSESSION メッセージを送信しません。
            この結果、アプリケーションがデータを失う可能性もあります。
            したがって、このフラグは、緊急時にのみ指定してください。
            </summary>
        </member>
        <member name="F:BelicsClass.Common.BL_Shutdown.ForceIfHung">
            <summary>
            EWX_FORCEIFHUNG
            Windows 2000：プロセスが WM_QUERYENDSESSION または WM_ENDSESSION メッセージに
            応答しない場合、それらのプロセスを終了させます。EWX_FORCE フラグを指定すると、
            EWX_FORCEIFHUNG フラグは無視されます。    
            </summary>
        </member>
        <member name="F:BelicsClass.Common.BL_Shutdown.Logoff">
            <summary>
            EWX_LOGOFF
            呼び出し側のプロセスのセキュリティコンテキストで実行されている
            すべてのプロセスを終了し、現在のユーザーをログオフさせます。
            </summary>
        </member>
        <member name="F:BelicsClass.Common.BL_Shutdown.Poweroff">
            <summary>
            EWX_POWEROFF 
            システムをシャットダウンした後、電源を切ります。
            システムは、パワーオフ機能をサポートしていなければなりません。 
            Windows NT/2000/XP：呼び出し側のプロセスに、SE_SHUTDOWN_NAME 特権が必要です。
            </summary>
        </member>
        <member name="F:BelicsClass.Common.BL_Shutdown.Reboot">
            <summary>
            EWX_REBOOT
            システムをシャットダウンした後、システムを再起動します。
            Windows NT/2000/XP：呼び出し側のプロセスに、SE_SHUTDOWN_NAME 特権が必要です。
            </summary>
        </member>
        <member name="F:BelicsClass.Common.BL_Shutdown.Shutdown">
            <summary>
            EWX_SHUTDOWN
            システムをシャットダウンして、電源を切っても安全な状態にします。
            すべてのバッファをディスクへフラッシュし（バッファの内容をディスクに書き込み）、
            動作していたすべてのプロセスを停止します。    
            Windows NT/2000/XP：呼び出し側のプロセスに、SE_SHUTDOWN_NAME 特権が必要です。
            </summary>
        </member>
        <member name="M:BelicsClass.Common.BL_Shutdown.ExitWindowsEx(System.Int32,System.Int32)">
            <summary>
            <param name="flag">シャットダウン操作</param>
            <param name="reserved">予約済み</param>
            <returns></returns>
            </summary>
        </member>
        <member name="M:BelicsClass.Common.BL_Shutdown.OpenProcessToken(System.IntPtr,System.Int32,System.IntPtr@)">
            <summary>
            プロセスに関連付けられているアクセストークンを開きます。
            BOOL OpenProcessToken(
                HANDLE ProcessHandle, // プロセスのハンドル
                DWORD DesiredAccess,  // プロセスに対して希望するアクセス権
                PHANDLE TokenHandle   // 開かれたアクセストークンのハンドルへのポインタ
            );
            </summary>
        </member>
        <member name="M:BelicsClass.Common.BL_Shutdown.LookupPrivilegeValue(System.String,System.String,System.Int64@)">
            <summary>
            指定されたシステムで使われているローカル一意識別子（LUID）を取得し、
            指定された特権名をローカルで表現します。
            BOOL LookupPrivilegeValue(
                LPCTSTR lpSystemName, // システムを指定する文字列のアドレス
                LPCTSTR lpName,  // 特権を指定する文字列のアドレス
                PLUID lpLuid     // ローカル一意識別子のアドレス
            );
            </summary>
        </member>
        <member name="M:BelicsClass.Common.BL_Shutdown.AdjustTokenPrivileges(System.IntPtr,System.Boolean,BelicsClass.Common.BL_Shutdown.TOKEN_PRIVILEGES@,System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            指定したアクセストークン内の特権を有効または無効にします。
            TOKEN_ADJUST_PRIVILEGES アクセス権が必要です。
            BOOL AdjustTokenPrivileges(
                HANDLE TokenHandle,  // 特権を保持するトークンのハンドル
                BOOL DisableAllPrivileges,   // すべての特権を無効にするためのフラグ
                PTOKEN_PRIVILEGES NewState,  // 新しい特権情報へのポインタ
                DWORD BufferLength,  // PreviousState バッファのバイト単位のサイズ
                PTOKEN_PRIVILEGES PreviousState, // 変更を加えられた特権の元の状態を受け取る
                PDWORD ReturnLength  // PreviousState バッファが必要とするサイズを受け取る
                );
            </summary>
        </member>
        <member name="M:BelicsClass.Common.BL_Shutdown.DoExitWindows(System.Int32)">
            <summary>
            If the function succeeds, the return value is nonzero.
            </summary>
            <param name="flag"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Common.BL_Shutdown.SetShutdownPrivilege">
            <summary>
            Windows NT/2000/XP　でシャットダウンするには、
            SE_SHUTDOWN_NAME 特権が必要なので、その特権をセットする。
            </summary>
        </member>
        <member name="T:BelicsClass.Common.BL_Shutdown.LUID_AND_ATTRIBUTES">
            <summary>
            typedef struct _LUID_AND_ATTRIBUTES { 
               LUID   Luid;
               DWORD  Attributes;
            } LUID_AND_ATTRIBUTES, *PLUID_AND_ATTRIBUTES;
            </summary>
        </member>
        <member name="F:BelicsClass.Common.BL_Shutdown.LUID_AND_ATTRIBUTES.Luid">
            <summary>
            ローカルユニーク
            </summary>
        </member>
        <member name="F:BelicsClass.Common.BL_Shutdown.LUID_AND_ATTRIBUTES.Attributes">
            <summary>
            アトリビュート
            </summary>
        </member>
        <member name="T:BelicsClass.Common.BL_Shutdown.TOKEN_PRIVILEGES">
            <summary>
            typedef struct _TOKEN_PRIVILEGES {
                DWORD PrivilegeCount;
                LUID_AND_ATTRIBUTES Privileges[];
            } TOKEN_PRIVILEGES, *PTOKEN_PRIVILEGES; 
            StructLayout の Pack=4 は必要。これにより、
            4byte 境界でパッキングする。
            </summary>
        </member>
        <member name="F:BelicsClass.Common.BL_Shutdown.TOKEN_PRIVILEGES.PrivilegeCount">
            <summary>
            PrivilegeCount
            </summary>
        </member>
        <member name="F:BelicsClass.Common.BL_Shutdown.TOKEN_PRIVILEGES.Privileges">
            <summary>
            Privileges
            </summary>
        </member>
        <member name="T:BelicsClass.Common.BL_ObjectSyncAttribute">
            <summary>
            BL_ObjectSyncクラス機能のためのメモリ管理属性を表します。
            </summary>
        </member>
        <member name="F:BelicsClass.Common.BL_ObjectSyncAttribute.version">
            <summary></summary>
        </member>
        <member name="T:BelicsClass.UI.BL_MainForm_Base_LargeFunctions">
            <summary>
            メインフォームの基本クラスです。
            ファンクションキーのボタン表示が大きめです
            </summary>
        </member>
        <member name="F:BelicsClass.UI.BL_MainForm_Base_LargeFunctions.components">
            <summary>
            必要なデザイナー変数です。
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base_LargeFunctions.Dispose(System.Boolean)">
            <summary>
            使用中のリソースをすべてクリーンアップします。
            </summary>
            <param name="disposing">マネージ リソースが破棄される場合 true、破棄されない場合は false です。</param>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base_LargeFunctions.InitializeComponent">
            <summary>
            デザイナー サポートに必要なメソッドです。このメソッドの内容を
            コード エディターで変更しないでください。
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base_LargeFunctions.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base_LargeFunctions.#ctor(System.Boolean)">
            <summary>
            コンストラクタ
            </summary>
            <param name="enable_gesture"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base_LargeFunctions.#ctor(System.Drawing.Bitmap)">
            <summary>
            コンストラクタ
            </summary>
            <param name="wallpaper"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base_LargeFunctions.#ctor(System.Drawing.Bitmap,System.Boolean)">
            <summary>
            コンストラクタ
            </summary>
            <param name="wallpaper"></param>
            <param name="enable_gesture"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base_LargeFunctions.#ctor(System.Drawing.Icon)">
            <summary>
            コンストラクタ
            </summary>
            <param name="icon"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base_LargeFunctions.#ctor(System.Drawing.Icon,System.Boolean)">
            <summary>
            コンストラクタ
            </summary>
            <param name="icon"></param>
            <param name="enable_gesture"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base_LargeFunctions.#ctor(System.Drawing.Bitmap,System.Drawing.Icon)">
            <summary>
            コンストラクタ
            </summary>
            <param name="wallpaper"></param>
            <param name="icon"></param>
        </member>
        <member name="M:BelicsClass.UI.BL_MainForm_Base_LargeFunctions.#ctor(System.Drawing.Bitmap,System.Drawing.Icon,System.Boolean)">
            <summary>
            コンストラクタ
            </summary>
            <param name="wallpaper"></param>
            <param name="icon"></param>
            <param name="enable_gesture"></param>
        </member>
        <member name="T:BelicsClass.ProcessManage.BL_ProcessWait">
            <summary>
            外部プロセスの終了を待機するクラスです。
            </summary>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_ProcessWait.#ctor(System.String)">
            <summary>
            プロセスが終了するまで現在のスレッドの実行をブロックします。
            </summary>
            <param name="fileName">プロセスを起動するときに使用するファイル名を指定します。</param>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_ProcessWait.#ctor(System.String,System.String)">
            <summary>
            プロセスが終了するまで現在のスレッドの実行をブロックします。
            </summary>
            <param name="fileName">プロセスを起動するときに使用するファイル名を指定します。</param>
            <param name="option">プロセスを起動するときに使用するコマンドライン引数を指定します。</param>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_ProcessWait.#ctor(System.Diagnostics.ProcessStartInfo)">
            <summary>
            プロセスが終了するまで現在のスレッドの実行をブロックします。
            </summary>
            <param name="mode">プロセスを起動するときに使用する値のセットを指定します。</param>
        </member>
        <member name="T:BelicsClass.ProcessManage.BL_Memory">
            <summary>
            共有メモリクラス
            </summary>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_Memory.CreateMemory(System.String,System.UInt32,System.String)">
            <summary>
            共有メモリを作成し､ オープンします。
            </summary>
            <param name="objectName">作成する共有メモリ名。</param>
            <param name="byteSize">作成する共有メモリのバイトサイズ。</param>
            <param name="groupName">アクセス許可を追加するグループ名。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_Memory.CreateMemory(System.String,System.UInt32)">
            <summary>
            共有メモリを作成し､ オープンします。
            </summary>
            <param name="objectName">作成する共有メモリ名。</param>
            <param name="byteSize">作成する共有メモリのバイトサイズ。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_Memory.IsExist(System.String)">
            <summary>
            共有メモリの存在をチェックします
            </summary>
            <param name="objectName">共有メモリ名称</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_Memory.ReleaseMemory">
            <summary>
            共有メモリを解放します。
            </summary>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_Memory.ReadMemory(System.Int32,System.UInt32,System.Boolean)">
            <summary>
            共有メモリからバイト配列でデータを読み込みます。
            </summary>
            <param name="index">共有メモリの読み込みを開始するオフセット値。</param>
            <param name="byteSize">共有メモリから読み込むバイト数。</param>
            <param name="lockFlag">共有メモリに排他ロックする場合は true。それ以外の場合は false。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_Memory.ReadMemory(System.Int32,System.UInt32)">
            <summary>
            共有メモリからバイト配列でデータを読み込みます。
            </summary>
            <param name="index">共有メモリの読み込みを開始するオフセット値。</param>
            <param name="byteSize">共有メモリから読み込むバイト数。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_Memory.WriteMemory(System.Int32,System.Byte[],System.UInt32,System.Boolean)">
            <summary>
            共有メモリにバイト配列のデータを書き込みます。
            </summary>
            <param name="index">共有メモリの書き込みを開始するオフセット値。</param>
            <param name="data">共有メモリに書き込むデータが格納されているバイト配列。</param>
            <param name="byteSize">共有メモリに書き込むバイト数。</param>
            <param name="lockFlag">共有メモリに排他ロックする場合は true。それ以外の場合は false。</param>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_Memory.WriteMemory(System.Int32,System.Byte[],System.UInt32)">
            <summary>
            共有メモリにバイト配列のデータを書き込みます。
            </summary>
            <param name="index">共有メモリの書き込みを開始するオフセット値。</param>
            <param name="data">共有メモリに書き込むデータが格納されているバイト配列。</param>
            <param name="byteSize">共有メモリに書き込むバイト数。</param>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_Memory.Lock">
            <summary>
            共有メモリへの排他ロックを行います。
            </summary>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_Memory.Unlock">
            <summary>
            共有メモリへの排他ロック解除を行います。
            </summary>
        </member>
        <member name="P:BelicsClass.ProcessManage.BL_Memory.Memory">
            <summary>
            メモリー実体を取得します
            </summary>
        </member>
        <member name="P:BelicsClass.ProcessManage.BL_Memory.ErrorCode">
            <summary>
            異常コードを取得します。
            </summary>
        </member>
        <member name="P:BelicsClass.ProcessManage.BL_Memory.ErrorMessage">
            <summary>
            異常内容を取得します。
            </summary>
        </member>
        <member name="T:BelicsClass.Network.BL_RawSocket">
            <summary>
            ソケットクラス
            </summary>
        </member>
        <member name="M:BelicsClass.Network.BL_RawSocket.#ctor(System.String,System.Int32)">
            <summary>
            ソケットクラス
            </summary>
            <param name="ip_address">使用するソケットのIPアドレス。</param>
            <param name="port">使用するソケットのポート№。</param>
        </member>
        <member name="M:BelicsClass.Network.BL_RawSocket.#ctor(System.Int32)">
            <summary>
            ソケットクラス
            </summary>
            <param name="port">使用するソケットのポート№。</param>
        </member>
        <member name="M:BelicsClass.Network.BL_RawSocket.Open(BelicsClass.Network.BL_RawSocket.OpenMode,BelicsClass.Network.BL_RawSocket.FormatType)">
            <summary>
            ソケットのオープンをします。
            </summary>
            <param name="openMode">オープンするソケットのタイプ。</param>
            <param name="formatType">オープンするソケットのフォーマット。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Network.BL_RawSocket.Close">
            <summary>
            ソケットのクローズをします。
            </summary>
        </member>
        <member name="M:BelicsClass.Network.BL_RawSocket.Send(System.String)">
            <summary>
            ソケットにデータを書き込みます。
            </summary>
            <param name="data">書き込むデータが格納されている文字列。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Network.BL_RawSocket.Receive">
            <summary>
            ソケットからデータを読み込みます。
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Network.BL_RawSocket.Receive(System.Int32)">
            <summary>
            ソケットからデータを読み込みます。
            </summary>
            <param name="timeOut">タイムアウト値。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Network.BL_RawSocket.SendBytes(System.Byte[])">
            <summary>
            ソケットにバイト配列のデータを書き込みます。
            </summary>
            <param name="data">書き込むデータが格納されているバイト配列。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Network.BL_RawSocket.ReceiveBytes(System.Int32@)">
            <summary>
            ソケットからバイト配列でデータを読み込みます。
            </summary>
            <param name="bytes_size">受信したバイト数。未受信のときは、-1。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Network.BL_RawSocket.ReceiveBytes">
            <summary>
            ソケットからバイト配列でデータを読み込みます。
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Network.BL_RawSocket.ReceiveBytes(System.Int32)">
            <summary>
            ソケットからバイト配列でデータを読み込みます。
            </summary>
            <param name="timeOut">タイムアウト値。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Network.BL_RawSocket.ReceiveBytes(System.Int32@,System.Int32)">
            <summary>
            ソケットからバイト配列でデータを読み込みます。
            </summary>
            <param name="bytes_size">受信したバイト数。未受信のときは、-1。</param>
            <param name="timeOut">タイムアウト値。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Network.BL_RawSocket.SendBytesDirect(System.Byte[])">
            <summary>
            ソケットに FormatType列挙型 の設定を付加せずにデータを書き込みます。
            </summary>
            <param name="data">書き込むデータが格納されているバイト配列。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Network.BL_RawSocket.ReceiveBytesDirect">
            <summary>
            ソケットから FormatType列挙型 の設定を無視してバイト配列でデータを読み込みます。
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Network.BL_RawSocket.OnAccept(System.IAsyncResult)">
            <summary>
            
            </summary>
            <param name="ar"></param>
        </member>
        <member name="M:BelicsClass.Network.BL_RawSocket.OnConnect(System.IAsyncResult)">
            <summary>
            
            </summary>
            <param name="ar"></param>
        </member>
        <member name="M:BelicsClass.Network.BL_RawSocket.OnSend(System.IAsyncResult)">
            <summary>
            
            </summary>
            <param name="ar"></param>
        </member>
        <member name="M:BelicsClass.Network.BL_RawSocket.OnReceive(System.IAsyncResult)">
            <summary>
            
            </summary>
            <param name="ar"></param>
        </member>
        <member name="E:BelicsClass.Network.BL_RawSocket.ConnectEvent">
            <summary>
            接続すると発生します。
            </summary>
        </member>
        <member name="E:BelicsClass.Network.BL_RawSocket.DisconnectEvent">
            <summary>
            切断すると発生します。
            </summary>
        </member>
        <member name="E:BelicsClass.Network.BL_RawSocket.ReceiveEvent">
            <summary>
            受信すると発生します。
            </summary>
        </member>
        <member name="P:BelicsClass.Network.BL_RawSocket.KeepAliveTimer">
            <summary>
            ソケットの生存確認時間を設定します。単位はミリ秒。※接続する前に設定して下さい。
            </summary>
        </member>
        <member name="P:BelicsClass.Network.BL_RawSocket.ConnectTimeOut">
            <summary>
            ソケットの接続タイムアウト時間を取得、設定します。単位はミリ秒。
            </summary>
        </member>
        <member name="P:BelicsClass.Network.BL_RawSocket.IsConnected">
            <summary>
            接続状態を取得します。接続している場合は true。それ以外の場合は false。
            </summary>
        </member>
        <member name="P:BelicsClass.Network.BL_RawSocket.IsDisconnected">
            <summary>
            切断状態を取得します。接続していて切断した場合は true。それ以外の場合は false。
            </summary>
        </member>
        <member name="P:BelicsClass.Network.BL_RawSocket.RemoteIpAddress">
            <summary>
            接続先のIPアドレスを取得します。
            </summary>
        </member>
        <member name="P:BelicsClass.Network.BL_RawSocket.RemotePort">
            <summary>
            接続先のポート№を取得します。
            </summary>
        </member>
        <member name="P:BelicsClass.Network.BL_RawSocket.ErrorCode">
            <summary>
            異常コードを取得します。
            </summary>
        </member>
        <member name="P:BelicsClass.Network.BL_RawSocket.ErrorMessage">
            <summary>
            異常内容を取得します。
            </summary>
        </member>
        <member name="T:BelicsClass.Network.BL_RawSocket.ReceiveEventHandler">
            <summary>
            イベントを処理するメソッドを表します。
            </summary>
        </member>
        <member name="T:BelicsClass.Network.BL_RawSocket.ReceiveEventArgs">
            <summary>
            受信すると発生するイベントの引数。
            </summary>
        </member>
        <member name="P:BelicsClass.Network.BL_RawSocket.ReceiveEventArgs.BytesData">
            <summary>
            受信したデータが格納されているバイト配列を取得します。
            </summary>
        </member>
        <member name="T:BelicsClass.Network.BL_RawSocket.OpenMode">
            <summary>
            オープンモード
            </summary>
        </member>
        <member name="F:BelicsClass.Network.BL_RawSocket.OpenMode.Host">
            <summary>
            ホスト側
            </summary>
        </member>
        <member name="F:BelicsClass.Network.BL_RawSocket.OpenMode.Client">
            <summary>
            クライアント側
            </summary>
        </member>
        <member name="T:BelicsClass.Network.BL_RawSocket.FormatType">
            <summary>
            フォーマット
            </summary>
        </member>
        <member name="F:BelicsClass.Network.BL_RawSocket.FormatType.None">
            <summary>
            なし
            </summary>
        </member>
        <member name="F:BelicsClass.Network.BL_RawSocket.FormatType.CR">
            <summary>
            ～CR
            </summary>
        </member>
        <member name="F:BelicsClass.Network.BL_RawSocket.FormatType.CR_LF">
            <summary>
            ～CR+LF
            </summary>
        </member>
        <member name="F:BelicsClass.Network.BL_RawSocket.FormatType.STX_ETX">
            <summary>
            STX～ETX
            </summary>
        </member>
        <member name="F:BelicsClass.Network.BL_RawSocket.FormatType.BL_FORMAT">
            <summary>
            特殊フォーマット
            </summary>
        </member>
        <member name="T:BelicsClass.UI.Report.BL_PrinterPreviewControl">
            <summary>
            
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_PrinterPreviewControl.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_PrinterPreviewControl.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_PrinterPreviewControl.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.UI.Report.BL_PrinterPreviewControl.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:BelicsClass.ProcessManage.BL_Monitor">
            <summary>
            排他制御クラス(１プロセス内)
            </summary>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_Monitor.Lock">
            <summary>
            
            </summary>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_Monitor.Lock(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_Monitor.Unlock">
            <summary>
            
            </summary>
        </member>
        <member name="M:BelicsClass.ProcessManage.BL_Monitor.IsLock">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:BelicsClass.ObjectSync.BL_TypedQueueMemorySync`1">
            <summary>
            共有メモリを介してキュー機能を提供します
            
            抽象クラスTは公開デフォルトコンストラクタが実装されていなければなりません
            データ追加側とデータ取出側で、同一名称を指定してください
            複数のデータ追加側が存在する場合、データ追加順序は保証されません
            
            不必要になった本オブジェクトはDisposeしなければなりません
            抽象クラスT は BL_Object から派生されたデータ型が必要です。
            
            </summary>
            <typeparam name="T">キューで取り扱う型</typeparam>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TypedQueueMemorySync`1.#ctor(System.String)">
            <summary>
            コンストラクタ
            キューの最大エントリー数は３２個で初期化されます
            </summary>
            <param name="que_name"></param>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TypedQueueMemorySync`1.#ctor(System.String,System.Int32)">
            <summary>
            コンストラクタ
            </summary>
            <param name="que_name">キュー名称</param>
            <param name="interval">タイムアウト監視周期の指定時間</param>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TypedQueueMemorySync`1.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            コンストラクタ
            </summary>
            <param name="que_name">キュー名称</param>
            <param name="interval">タイムアウト監視周期の指定時間</param>
            <param name="size">エントリー数</param>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TypedQueueMemorySync`1.Finalize">
            <summary>
            デストラクタ
            </summary>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TypedQueueMemorySync`1.Dispose">
            <summary>
            破棄
            キューのエントリー監視スレッドを停止します
            </summary>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TypedQueueMemorySync`1.Enqueue(`0)">
            <summary>
            キューへ指定オブジェクトをエントリーします
            規定のTクラス型データ要素を対象
            </summary>
            <param name="data">エントリーするオブジェクト</param>
            <returns>キューがいっぱいの場合 false を返します</returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TypedQueueMemorySync`1.Enqueue(`0,System.Int32)">
            <summary>
            キューへ指定オブジェクトをエントリーします
            規定のクラス型から派生した任意のUクラス型データ要素を対象
            </summary>
            <param name="data">エントリーするオブジェクト</param>
            <param name="enque_timeout_milliseconds">キューがいっぱいの場合、エントリーできるまで待機する時間(ms)</param>
            <returns>キューがいっぱいの場合 false を返します</returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TypedQueueMemorySync`1.Dequeue">
            <summary>
            キューの先頭から１件取得して、キューから削除します
            規定のTクラス型データ要素を対象
            </summary>
            <returns>データが存在しない場合や、異なるクラス型の場合はnullを返します</returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TypedQueueMemorySync`1.Dequeue(System.Int32)">
            <summary>
            キューの先頭から１件取得して、キューから削除します
            規定のTクラス型データ要素を対象
            </summary>
            <param name="deque_timeout_milliseconds">キューが空の場合、エントリーされるまで待機する時間(ms)</param>
            <returns>データが存在しない場合や、異なるクラス型の場合はnullを返します</returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TypedQueueMemorySync`1.Peek">
            <summary>
            キューの先頭から１件取得しますが、キューからは削除しません
            規定のTクラス型データ要素を対象
            </summary>
            <returns>データが存在しない場合や、異なるクラス型の場合はnullを返します</returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TypedQueueMemorySync`1.Peek(System.Int32)">
            <summary>
            キューの先頭から１件取得しますが、キューからは削除しません
            規定のTクラス型データ要素を対象
            </summary>
            <param name="deque_timeout_milliseconds">キューが空の場合、エントリーされるまで待機する時間(ms)</param>
            <returns>データが存在しない場合や、異なるクラス型の場合はnullを返します</returns>
        </member>
        <member name="E:BelicsClass.ObjectSync.BL_TypedQueueMemorySync`1.EventQueued">
            <summary>
            キューのヘッダーが更新されたことを通知するイベント
            </summary>
        </member>
        <member name="E:BelicsClass.ObjectSync.BL_TypedQueueMemorySync`1.EventDequeued">
            <summary>
            キューのヘッダーが更新されたことを通知するイベント
            </summary>
        </member>
        <member name="P:BelicsClass.ObjectSync.BL_TypedQueueMemorySync`1.Count">
            <summary>
            キューにエントリーされているデータ数を取得します
            </summary>
        </member>
        <member name="P:BelicsClass.ObjectSync.BL_TypedQueueMemorySync`1.Size">
            <summary>
            キューにエントリーされているデータ数を取得します
            </summary>
        </member>
        <member name="T:BelicsClass.ObjectSync.BL_TypedQueueMemorySync`1.Event_Handler_Queued">
            <summary>
            キューのヘッダーが更新されたことを通知するイベントデリゲート
            </summary>
            <param name="sender">発生源</param>
            <param name="data">更新されたフィールド名</param>
        </member>
        <member name="T:BelicsClass.ObjectSync.BL_TypedQueueMemorySync`1.QueueHeader">
            <summary>
            キューヘッダー管理クラス
            </summary>
        </member>
        <member name="F:BelicsClass.ObjectSync.BL_TypedQueueMemorySync`1.QueueHeader.tail">
            <summary>次エントリーを保持するための共有メモリ名に付加する番号</summary>
        </member>
        <member name="F:BelicsClass.ObjectSync.BL_TypedQueueMemorySync`1.QueueHeader.head">
            <summary>先頭エントリーを保持するための共有メモリ名に付加する番号</summary>
        </member>
        <member name="F:BelicsClass.ObjectSync.BL_TypedQueueMemorySync`1.QueueHeader.queMemories">
            <summary>キュー要素を保持するための共有メモリ名の一覧</summary>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TypedQueueMemorySync`1.QueueHeader.#ctor">
            <summary>
            デフォルトコンストラクタ
            </summary>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TypedQueueMemorySync`1.QueueHeader.#ctor(System.String,System.Int32)">
            <summary>
            コンストラクタ
            </summary>
            <param name="que_name">キューヘッダーの共有メモリ名称</param>
            <param name="interval">タイムアウト監視周期(ms)</param>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TypedQueueMemorySync`1.QueueHeader.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            コンストラクタ
            </summary>
            <param name="que_name">キューヘッダーの共有メモリ名称</param>
            <param name="interval">タイムアウト監視周期(ms)</param>
            <param name="size">キューに格納できる最大要素数</param>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TypedQueueMemorySync`1.QueueHeader.Enqueue(`0,System.Int32)">
            <summary>
            キューにエントリーします
            </summary>
            <param name="data">エントリーするデータ(BL_ObjectSync派生型クラスのインスタンスが必要です)</param>
            <param name="enque_timeout_millseconds">キューがいっぱいの場合、エントリーできるまで待機する時間(ms)</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TypedQueueMemorySync`1.QueueHeader.Dequeue(System.Int32,System.Boolean)">
            <summary>
            キューから取り出します
            </summary>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TypedQueueMemorySync`1.QueueHeader.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="P:BelicsClass.ObjectSync.BL_TypedQueueMemorySync`1.QueueHeader.Count">
            <summary>待機データ数</summary>
        </member>
        <member name="P:BelicsClass.ObjectSync.BL_TypedQueueMemorySync`1.QueueHeader.Item(System.Int64)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:BelicsClass.ObjectSync.BL_TypedQueueMemorySync`1.QueueHeader.QueueData">
            <summary>
            キュー要素を保持するためのクラス
            </summary>
        </member>
        <member name="F:BelicsClass.ObjectSync.BL_TypedQueueMemorySync`1.QueueHeader.QueueData.Data">
            <summary>キュー要素</summary>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TypedQueueMemorySync`1.QueueHeader.QueueData.#ctor">
            <summary></summary>
        </member>
        <member name="M:BelicsClass.ObjectSync.BL_TypedQueueMemorySync`1.QueueHeader.QueueData.#ctor(System.String,System.Int64)">
            <summary>
            
            </summary>
            <param name="sharemem_name"></param>
            <param name="pos"></param>
        </member>
        <member name="T:CSubFuncCs.CSubFunc">
            <summary>
            SubFunc の概要の説明です。
            </summary>
        </member>
        <member name="F:CSubFuncCs.CSubFunc.isBoardMounted">
            <summary></summary>
        </member>
        <member name="M:CSubFuncCs.CSubFunc.#ctor">
            <summary></summary>
        </member>
        <member name="M:CSubFuncCs.CSubFunc.CheckRet(System.String,System.UInt32,System.String@)">
            <summary></summary>
        </member>
        <member name="M:CSubFuncCs.CSubFunc.Pows(System.Int32,System.Int32)">
            <summary></summary>
        </member>
        <member name="M:CSubFuncCs.CSubFunc.chr2hex(System.String)">
            <summary></summary>
        </member>
        <member name="M:CSubFuncCs.CSubFunc.GpibInit(System.String@)">
            <summary></summary>
        </member>
        <member name="M:CSubFuncCs.CSubFunc.GpibPrint(System.UInt32,System.String)">
            <summary></summary>
        </member>
        <member name="M:CSubFuncCs.CSubFunc.GpibInput(System.UInt32,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CSubFuncCs.CSubFunc.GpibInputB(System.UInt32,System.Text.StringBuilder)">
            <summary></summary>
        </member>
        <member name="M:CSubFuncCs.CSubFunc.GpibCommand(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CSubFuncCs.CSubFunc.GpibExit">
            <summary></summary>
        </member>
        <member name="M:CSubFuncCs.CSubFunc.WaitOPC(System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CSubFuncCs.CSubFunc.Str2Num(System.String,System.UInt32,System.Int32[]@,System.UInt32)">
            <summary></summary>
        </member>
        <member name="M:CSubFuncCs.CSubFunc.DrawGraph(System.Windows.Forms.Control,System.Int32[],System.UInt32,System.Int32,System.Int32)">
            <summary></summary>
        </member>
        <member name="T:BelicsClass.Common.BL_Stopwatch64">
            <summary>
            ストップウォッチ６４クラス
            </summary>
        </member>
        <member name="M:BelicsClass.Common.BL_Stopwatch64.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:BelicsClass.Common.BL_Stopwatch64.Reset">
            <summary>
            ストップウォッチをリセットします。
            </summary>
        </member>
        <member name="M:BelicsClass.Common.BL_Stopwatch64.Start">
            <summary>
            ストップウォッチを開始します。
            </summary>
        </member>
        <member name="M:BelicsClass.Common.BL_Stopwatch64.Stop">
            <summary>
            ストップウォッチを停止します。
            </summary>
        </member>
        <member name="P:BelicsClass.Common.BL_Stopwatch64.IsRunning">
            <summary>
            タイマー実行中を表します。
            </summary>
        </member>
        <member name="P:BelicsClass.Common.BL_Stopwatch64.ElapsedMilliseconds">
            <summary>
            経過ミリ秒を取得します。
            </summary>
        </member>
        <member name="T:BelicsClass.RFID.BL_RF550">
            <summary>
            KEYENCE RDIDコントローラ RF550のコマンド送受信を行う機能を提供します
            </summary>
        </member>
        <member name="M:BelicsClass.RFID.BL_RF550.Connect(System.String,System.Int32)">
            <summary>
            RFIDと接続します。
            </summary>
            <param name="ip_address">接続するRFIDのIPアドレス。</param>
            <param name="port">接続するRFIDのポート№。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.RFID.BL_RF550.Disconnect">
            <summary>
            PLCとの接続を解除します。
            </summary>
        </member>
        <member name="M:BelicsClass.RFID.BL_RF550.ReadCommand(System.Int32,System.Int32)">
            <summary>
            読み込みコマンドの登録
            </summary>
            <param name="address"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.RFID.BL_RF550.WriteCommand(System.Int32,System.String)">
            <summary>
            書き込みコマンドの登録
            </summary>
            <param name="address"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.RFID.BL_RF550.CommandAck(System.Int32@)">
            <summary>
            レスポンスデータの評価と登録
            </summary>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="P:BelicsClass.RFID.BL_RF550.IsConnected">
            <summary>
            ソケットの接続状態を取得します。接続している場合は true。それ以外の場合は false。
            </summary>
        </member>
        <member name="P:BelicsClass.RFID.BL_RF550.ErrorCode">
            <summary>
            異常コードを取得します。
            </summary>
        </member>
        <member name="P:BelicsClass.RFID.BL_RF550.ErrorMessage">
            <summary>
            異常内容を取得します。
            </summary>
        </member>
        <member name="T:BelicsClass.Network.BL_WCFClient`1">
            <summary>
            
            </summary>
        </member>
        <member name="M:BelicsClass.Network.BL_WCFClient`1.StartNamedPipe(System.String)">
            <summary>
            チャンネルを作成します
            </summary>
            <param name="address"></param>
        </member>
        <member name="M:BelicsClass.Network.BL_WCFClient`1.StartTcp(System.String)">
            <summary>
            チャンネルを作成します
            </summary>
            <param name="address"></param>
        </member>
        <member name="M:BelicsClass.Network.BL_WCFClient`1.CloseChannel">
            <summary>
            チャンネルを閉じます
            </summary>
        </member>
        <member name="M:BelicsClass.Network.BL_WCFClient`1.channel_Closed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.Network.BL_WCFClient`1.channel_Closing(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.Network.BL_WCFClient`1.channel_Opened(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.Network.BL_WCFClient`1.channel_Opening(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BelicsClass.Network.BL_WCFClient`1.channel_Faulted(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="E:BelicsClass.Network.BL_WCFClient`1.OnChangeState">
            <summary></summary>
        </member>
        <member name="P:BelicsClass.Network.BL_WCFClient`1.Connecter">
            <summary>
            
            </summary>
        </member>
        <member name="P:BelicsClass.Network.BL_WCFClient`1.State">
            <summary>
            接続状態を取得します
            </summary>
        </member>
        <member name="T:BelicsClass.Network.BL_WCFClient`1.EventHandler">
            <summary>
            イベント定義
            </summary>
            <param name="sender"></param>
            <param name="state"></param>
        </member>
        <member name="T:BelicsClass.File.BL_RingFile">
            <summary>
            リングファイルクラス
            </summary>
        </member>
        <member name="M:BelicsClass.File.BL_RingFile.Open(System.String,System.Int32,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
            <summary>
            リングファイルをオープンします。
            </summary>
            <param name="file_name">オープンするファイルの名前を示す文字列を指定します。</param>
            <param name="length">オープンするファイルの１レコードのバイト数を指定します。</param>
            <param name="fileMode">ファイルを開く方法または作成する方法を指定します。</param>
            <param name="fileAccess">ファイルにアクセスする方法を指定します。</param>
            <param name="fileShare">ファイルの共有方法を指定します。</param>
            <param name="ring">書き込みのできる最大件数を指定します。</param>
        </member>
        <member name="M:BelicsClass.File.BL_RingFile.Open(System.String,System.Int32,System.String,System.String,System.Int32)">
            <summary>
            リングファイルをオープンします。
            </summary>
            <param name="file_name">オープンするファイルの名前を示す文字列を指定します。 </param>
            <param name="length">オープンするファイルの１レコードのバイト数を指定します。</param>
            <param name="fileAccess_mode">オープンするファイルのファイル属性を指定します。</param>
            <param name="share_mode">オープンするファイルの共有属性を指定します。</param>
            <param name="ring">書き込みのできる最大件数を指定します。</param>
        </member>
        <member name="M:BelicsClass.File.BL_RingFile.Close">
            <summary>
            リングファイルをクローズします。
            </summary>
        </member>
        <member name="M:BelicsClass.File.BL_RingFile.Write(System.Byte[])">
            <summary>
            ファイルにデータを書き込みます。
            </summary>
            <param name="data">書き込むレコードのデータが格納されているバイト配列を指定します。</param>
        </member>
        <member name="P:BelicsClass.File.BL_RingFile.FileLength">
            <summary>
            ファイル長 (バイト単位) を取得します。
            </summary>
        </member>
        <member name="P:BelicsClass.File.BL_RingFile.RecordLength">
            <summary>
            レコード長 (バイト単位) を取得します。
            </summary>
        </member>
        <member name="P:BelicsClass.File.BL_RingFile.ErrorCode">
            <summary>
            異常コードを取得します。
            </summary>
        </member>
        <member name="P:BelicsClass.File.BL_RingFile.ErrorMessage">
            <summary>
            異常内容を取得します。
            </summary>
        </member>
        <member name="T:BelicsClass.File.BL_Log">
            <summary>
            ログ記録クラス
            </summary>
        </member>
        <member name="M:BelicsClass.File.BL_Log.#ctor">
            <summary>
            ログ記録クラス
            </summary>
        </member>
        <member name="M:BelicsClass.File.BL_Log.#ctor(System.String,System.String)">
            <summary>
            ログ記録クラス
            </summary>
            <param name="path">ログファイル保存先フォルダ</param>
            <param name="file">ログファイル保存先ファイル名</param>
        </member>
        <member name="M:BelicsClass.File.BL_Log.#ctor(System.Boolean,System.String,System.String)">
            <summary>
            ログ記録クラス
            </summary>
            <param name="logEnable">ログを記録にする場合は true。それ以外の場合は false。</param>
            <param name="path">ログファイル保存先フォルダ</param>
            <param name="file">ログファイル保存先ファイル名</param>
        </member>
        <member name="M:BelicsClass.File.BL_Log.Finalize">
            <summary>
            ログ記録クラス
            </summary>
        </member>
        <member name="M:BelicsClass.File.BL_Log.Dispose">
            <summary>
            すべてのリソースを解放します。
            </summary>
        </member>
        <member name="M:BelicsClass.File.BL_Log.Initialize">
            <summary>
            リソースを取得します。
            </summary>
        </member>
        <member name="M:BelicsClass.File.BL_Log.Add(System.String)">
            <summary>
            ログを記録します。
            </summary>
            <param name="text">記録するデータが格納されている文字列。</param>
        </member>
        <member name="M:BelicsClass.File.BL_Log.Add(System.String,System.Int32)">
            <summary>
            ログを記録します。
            </summary>
            <param name="text">記録するデータが格納されている文字列。</param>
            <param name="level">見出し行とするための[.]を付加する個数</param>
            <returns>ログ書き込みに要した時間(ms)を返します。</returns>
        </member>
        <member name="M:BelicsClass.File.BL_Log.AddReturn(System.String)">
            <summary>
            ログを記録します。
            </summary>
            <param name="text">記録するデータが格納されている文字列。</param>
        </member>
        <member name="M:BelicsClass.File.BL_Log.AddReturn(System.String,System.Int32)">
            <summary>
            ログを記録します。
            記録した文字列を返します。(改行は含みません)
            </summary>
            <param name="text">記録するデータが格納されている文字列。</param>
            <param name="level">見出し行とするための[.]を付加する個数</param>
            <returns>ログ書き込みに要した時間(ms)を返します。</returns>
        </member>
        <member name="T:BelicsClass.Database.BL_SQLServer">
            <summary>
            データベースクラス(SQLServer)
            </summary>
        </member>
        <member name="M:BelicsClass.Database.BL_SQLServer.#ctor">
            <summary>
            データベースクラス
            </summary>
        </member>
        <member name="M:BelicsClass.Database.BL_SQLServer.#ctor(System.Int32)">
            <summary>
            データベースクラス
            </summary>
            <param name="cmdTimeout">コマンドタイムアウト値の設定。</param>
        </member>
        <member name="M:BelicsClass.Database.BL_SQLServer.GetConnectionString(System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="initialCatalog"></param>
            <param name="dataSource"></param>
            <param name="userID"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Database.BL_SQLServer.GetDbCommand(System.String,System.Data.Common.DbConnection)">
            <summary>
            
            </summary>
            <param name="cmdText"></param>
            <param name="connection"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Database.BL_SQLServer.GetDbDataAdapter(System.Data.Common.DbCommand)">
            <summary>
            
            </summary>
            <param name="selectCommand"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Database.BL_SQLServer.GetDbCommandBuilder(System.Data.Common.DbDataAdapter)">
            <summary>
            
            </summary>
            <param name="adapter"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Database.BL_SQLServer.GetTables">
            <summary>
            テーブル名取得
            </summary>
        </member>
        <member name="M:BelicsClass.Database.BL_SQLServer.SetIsolationLevel(BelicsClass.Database.BL_Database.IsolationLevel)">
            <summary>
            トランザクション分離レベルを設定します。
            </summary>
            <param name="level">設定する分離レベル。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Database.BL_SQLServer.BeginTransaction">
            <summary>
            トランザクションを開始します。
            </summary>
        </member>
        <member name="M:BelicsClass.Database.BL_SQLServer.CommitTransaction">
            <summary>
            トランザクションをコミットします。
            </summary>
        </member>
        <member name="M:BelicsClass.Database.BL_SQLServer.RollBackTransaction">
            <summary>
            トランザクションをロールバックします。
            </summary>
        </member>
        <member name="M:BelicsClass.Database.BL_SQLServer.ProcExecute(System.String,System.Data.SqlClient.SqlParameter[]@,System.Int32,System.Int32@)">
            <summary>
            ストアドプロシージャを実行します。
            </summary>
            <param name="procName">実行するストアドプロシージャ名が格納されている文字列。</param>
            <param name="param">パラメータ値。</param>
            <param name="paramCount">パラメータ数。</param>
            <param name="procReturn">ストアドプロシージャの戻り値。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Database.BL_SQLServer.ProcExecute(System.String,System.Int32@)">
            <summary>
            ストアドプロシージャを実行します。
            </summary>
            <param name="procName">実行するストアドプロシージャ名が格納されている文字列。</param>
            <param name="procReturn">ストアドプロシージャの戻り値。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Database.BL_SQLServer.ProcExecute(System.String,System.Data.SqlClient.SqlParameter[]@,System.Int32,System.Int32@,System.String)">
            <summary>
            ストアドプロシージャを実行しデータセット内に新規データテーブルを作成します。
            </summary>
            <param name="procName">実行するストアドプロシージャ名が格納されている文字列。</param>
            <param name="param">パラメータ値。</param>
            <param name="paramCount">パラメータ数。</param>
            <param name="procReturn">ストアドプロシージャの戻り値。</param>
            <param name="dataTableName">新規に作成するデータテーブル名が格納されている文字列。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Database.BL_SQLServer.ProcExecute(System.String,System.Int32@,System.String)">
            <summary>
            ストアドプロシージャを実行しデータセット内に新規データテーブルを作成します。
            </summary>
            <param name="procName">実行するストアドプロシージャ名が格納されている文字列。</param>
            <param name="procReturn">ストアドプロシージャの戻り値。</param>
            <param name="dataTableName">新規に作成するデータテーブル名が格納されている文字列。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Database.BL_SQLServer.CheckTable(System.String)">
            <summary>
            テーブルまたはビューの存在を確認します。
            </summary>
            <param name="tableName">存在を確認するテーブル名が格納されている文字列。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Database.BL_SQLServer.CheckProcedure(System.String)">
            <summary>
            ストアドプロシージャの存在を確認します。
            </summary>
            <param name="procName">存在を確認するストアドプロシージャ名が格納されている文字列。</param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Database.BL_SQLServer.get_sql_text(System.IO.Stream)">
            <summary>
            ストアドプロシージャ定義ファイルからソースコードを取得します
            </summary>
            <param name="stream">ストアドプロシージャ定義ファイルのストリーム</param>
            <returns></returns>
        </member>
        <member name="T:BelicsClass.Common.BL_EnumLabel">
            <summary>
            列挙型のフィールドにラベル文字列を付加するカスタム属性です。
            </summary>
        </member>
        <member name="M:BelicsClass.Common.BL_EnumLabel.#ctor(System.String)">
            <summary>
            BL_EnumLabel クラスの新しいインスタンスを初期化します
            </summary>
            <param name="label">ラベル文字列</param>
        </member>
        <member name="M:BelicsClass.Common.BL_EnumLabel.GetLabel(System.Enum)">
            <summary>
            属性で指定されたラベル文字列を取得する。
            </summary>
            <param name="value">ラベル付きフィールド</param>
            <returns>ラベル文字列</returns>
        </member>
        <member name="M:BelicsClass.Common.BL_EnumLabel.GetValue(System.String,System.Type)">
            <summary>
            ラベル文字列のインデックスを取得する。
            </summary>
            <param name="label"></param>
            <param name="enumType"></param>
            <returns></returns>
        </member>
        <member name="T:BelicsClass.Common.BL_BinarySerializableList`1">
            <summary>
            シリアライズ機能が付加されたListクラスです
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:BelicsClass.Common.BL_BinarySerializableList`1.Save(System.String)">
            <summary>
            自オブジェクトをファイルへシリアライズします
            例外は発生しません(内部で例外処理が行われます)
            </summary>
            <param name="path">保存先パス</param>
            <returns>シリアライズが成功するとtrueを返します</returns>
        </member>
        <member name="M:BelicsClass.Common.BL_BinarySerializableList`1.Load(System.String)">
            <summary>
            ファイルからデシリアライズして自オブジェクトへ読み込みます
            既存のデータはクリアされます
            </summary>
            <param name="path"></param>
            <returns>デシリアライズが成功するとtrueを返します</returns>
        </member>
        <member name="T:BelicsClass.Network.BL_TcpP2PMultiServer">
            <summary>
            マルチ接続可能TCPサーバークラスです
            </summary>
        </member>
        <member name="M:BelicsClass.Network.BL_TcpP2PMultiServer.#ctor(System.Net.IPAddress,System.Int32,System.Int32,System.Int32)">
            <summary>
            コンストラクタです。
            </summary>
            <param name="localIP">自分のIPアドレスを指定します。特に指定が無い場合はIPAddress.Anyを指定してください。</param>
            <param name="localPort">自分のポート番号を指定します。</param>
            <param name="sendBufferCount">送信データのバッファ数を指定します。連続送信回数を考慮して設定してください。</param>
            <param name="receiveBufferCount">受信データのバッファ数を指定します。連続受信回数を考慮して設定してください。</param>
        </member>
        <member name="M:BelicsClass.Network.BL_TcpP2PMultiServer.#ctor(System.Net.IPAddress,System.Int32,System.Int32,System.Int32,BelicsClass.Network.BL_TcpP2P.BL_FormatType)">
            <summary>
            コンストラクタです。
            </summary>
            <param name="localIP">自分のIPアドレスを指定します。特に指定が無い場合はIPAddress.Anyを指定してください。</param>
            <param name="localPort">自分のポート番号を指定します。</param>
            <param name="sendBufferCount">送信データのバッファ数を指定します。連続送信回数を考慮して設定してください。</param>
            <param name="receiveBufferCount">受信データのバッファ数を指定します。連続受信回数を考慮して設定してください。</param>
            <param name="formatType">フォーマット種別を指定してください。</param>
        </member>
        <member name="F:BelicsClass.Network.BL_TcpP2PMultiServer.m_LinkThread">
            <summary>
            接続待機用のスレッドです
            </summary>
        </member>
        <member name="F:BelicsClass.Network.BL_TcpP2PMultiServer.sockets">
            <summary>
            接続中のクライアントを管理するコレクションです
            </summary>
        </member>
        <member name="M:BelicsClass.Network.BL_TcpP2PMultiServer.Loop">
            <summary>
            スレッドのループです
            接続待機と接続確立処理のみを行います
            </summary>
        </member>
        <member name="M:BelicsClass.Network.BL_TcpP2PMultiServer.EndLink">
            <summary>
            接続待機を終了して、接続中のクライアントをすべて切断します
            </summary>
        </member>
        <member name="E:BelicsClass.Network.BL_TcpP2PMultiServer.EventListening">
            <summary>
            接続待機が開始された際に発生するイベントです
            </summary>
        </member>
        <member name="E:BelicsClass.Network.BL_TcpP2PMultiServer.EventConnected">
            <summary>
            クライアントが接続された際に発生するイベントです
            </summary>
        </member>
        <member name="E:BelicsClass.Network.BL_TcpP2PMultiServer.EventReceived">
            <summary>
            クライアントからデータを受信した際に発生するイベントです
            </summary>
        </member>
        <member name="E:BelicsClass.Network.BL_TcpP2PMultiServer.EventClosed">
            <summary>
            クライアントが切断された際に発生するイベントです
            </summary>
        </member>
        <member name="E:BelicsClass.Network.BL_TcpP2PMultiServer.EventError">
            <summary>
            通信エラーが発生した際に発生するイベントです
            </summary>
        </member>
        <member name="P:BelicsClass.Network.BL_TcpP2PMultiServer.ConnectedClients">
            <summary>
            接続中のクライアント数を取得します
            </summary>
        </member>
        <member name="T:BelicsClass.Network.BL_TcpP2PMultiServer.BL_TcpP2PMultiClient">
            <summary>
            マルチ接続された際に実際に通信を行うTCP接続クラスです
            </summary>
        </member>
        <member name="F:BelicsClass.Network.BL_TcpP2PMultiServer.BL_TcpP2PMultiClient.RemoteLock">
            <summary>
            リモートロック状態を保持します
            </summary>
        </member>
        <member name="M:BelicsClass.Network.BL_TcpP2PMultiServer.BL_TcpP2PMultiClient.#ctor(System.Int32,System.Int32,System.Net.Sockets.Socket)">
            <summary>
            コンストラクタ
            </summary>
            <param name="sendBufferCount">送信バッファ数</param>
            <param name="receiveBufferCount">受信バッファ数</param>
            <param name="linkedSocket">接続されたソケットオブジェクト</param>
        </member>
        <member name="M:BelicsClass.Network.BL_TcpP2PMultiServer.BL_TcpP2PMultiClient.#ctor(System.Int32,System.Int32,System.Net.Sockets.Socket,BelicsClass.Network.BL_TcpP2P.BL_FormatType)">
            <summary>
            コンストラクタ
            </summary>
            <param name="sendBufferCount">送信バッファ数</param>
            <param name="receiveBufferCount">受信バッファ数</param>
            <param name="linkedSocket">接続されたソケットオブジェクト</param>
            <param name="formatType">フォーマット種別を指定してください。</param>
        </member>
        <member name="M:BelicsClass.Network.BL_TcpP2PMultiServer.BL_TcpP2PMultiClient.Link">
            <summary>
            接続されたソケットオブジェクトを取得します
            </summary>
            <returns></returns>
        </member>
        <member name="T:BelicsClass.Network.BL_TcpP2PMultiServer.Event_Handler_Listening">
            <summary>
            接続待機が開始された際に発生するイベントデリゲートです
            </summary>
            <param name="sender">発生源</param>
            <param name="connected_clients">接続クライアント数</param>
        </member>
        <member name="T:BelicsClass.Network.BL_NetworkDrive">
            <summary>
            ネットワークドライブのマウントを制御するクラス
            </summary>
        </member>
        <member name="M:BelicsClass.Network.BL_NetworkDrive.NetAdd(System.String,System.String,System.String,System.String)">
            <summary>
            ネットワークドライブを割り当てます。
            </summary>
            <param name="LocalName">ドライブ名</param>
            <param name="RemoteName">ネットワーク名</param>
            <param name="Username">ユーザー名</param>
            <param name="Password">パスワード</param>
        </member>
        <member name="M:BelicsClass.Network.BL_NetworkDrive.NetAdd(System.String,System.String)">
            <summary>
            ネットワークドライブを割り当てます。
            </summary>
            <param name="LocalName">ドライブ名</param>
            <param name="RemoteName">ネットワーク名</param>
        </member>
        <member name="M:BelicsClass.Network.BL_NetworkDrive.NetCancel(System.String)">
            <summary>
            ネットワークドライブを切断します。
            </summary>
            <param name="LocalName">ドライブ名</param>
        </member>
        <member name="T:BelicsClass.Network.BL_EventSocketQueue">
            <summary>
            EventSocketQueueはFIFOとイベントおよびソケットを持ちます。
            FIFOにデータがある場合、イベントはシグナル状態になり、ソケットは受信データありになります。
            FIFOにデータがない場合、イベントはノンシグナル状態になり、ソケットは受信データ無しになります。
            イベントはGetWaitHandleにより取得でき、System.Threading.WaitHandleクラスの
            Wait*メソッドによりイベント発生を待つことが可能です。
            ソケットはEventSocketにより取得でき、System.Net.SocketクラスのSelectメソッドに
            よりイベント発生を待つことが可能です。
            </summary>
            <remarks>
            EventSocketで取得できるソケット以外のメンバはスレッドセーフです。詳細はSockeEventプロパティを
            参照してください。<br/>
            排他状態でキューを操作したい場合は、インスタンスに対してlockを行ってください。
            </remarks>
        </member>
        <member name="M:BelicsClass.Network.BL_EventSocketQueue.#ctor">
            <summary>
            デフォルトコンストラクタです。
            </summary>
        </member>
        <member name="M:BelicsClass.Network.BL_EventSocketQueue.#ctor(System.Int32)">
            <summary>
            キュー登録数制限付きのコンストラクタです。
            </summary>
        </member>
        <member name="M:BelicsClass.Network.BL_EventSocketQueue.Initialize">
            <summary>
            メンバの初期化を行います。
            </summary>
            <remarks>
            コンストラクタで呼び出されます。
            </remarks>
        </member>
        <member name="F:BelicsClass.Network.BL_EventSocketQueue.m_EventSocket">
            <summary>イベント用のソケットです。
            IPはループバック、ポートはオートバインドです。</summary>
        </member>
        <member name="F:BelicsClass.Network.BL_EventSocketQueue.m_EventEndPoint">
            <summary>イベント用ソケットのEndPointです。</summary>
        </member>
        <member name="M:BelicsClass.Network.BL_EventSocketQueue.#cctor">
            <summary>staticブロックです。</summary>
        </member>
        <member name="F:BelicsClass.Network.BL_EventSocketQueue.s_SendSocket">
            <summary>イベント用ソケットにデータを送信するソケットです。</summary>
        </member>
        <member name="F:BelicsClass.Network.BL_EventSocketQueue.s_WorkBuffer">
            <summary>カラ送信およびカラ受信用のバッファです。</summary>
        </member>
        <member name="F:BelicsClass.Network.BL_EventSocketQueue.s_WorkEndPoint">
            <summary>カラ送信およびカラ受信用のEndPointです。</summary>
        </member>
        <member name="M:BelicsClass.Network.BL_EventSocketQueue.ResetEvent">
            <summary>ソケットの受信イベントを解除します。</summary>
        </member>
        <member name="M:BelicsClass.Network.BL_EventSocketQueue.SetEvent">
            <summary>ソケットの受信イベントを発行します。</summary>
        </member>
        <member name="M:BelicsClass.Network.BL_EventSocketQueue.Enqueue(System.Object)">
            <summary>キューへ登録します。</summary>
            <param name="obj">登録するオブジェクトを指定します。</param>
            <returns>登録成功=true/登録失敗=false(キュー登録数制限)</returns>
        </member>
        <member name="M:BelicsClass.Network.BL_EventSocketQueue.Dequeue">
            <summary>
            キューから読み出します。
            </summary>
            <returns>読み出したオブジェクトを返します。
            キューが空の場合はnullを返します。</returns>
        </member>
        <member name="M:BelicsClass.Network.BL_EventSocketQueue.Clear">
            <summary>
            キューをクリアします。
            </summary>
        </member>
        <member name="M:BelicsClass.Network.BL_EventSocketQueue.Dispose">
            <summary>インスタンスを無効にします。</summary>
        </member>
        <member name="P:BelicsClass.Network.BL_EventSocketQueue.EventSocket">
            <summary>
            イベント用のソケットを取得します。<b/>
            キューにデータが入っている場合、ソケットは受信データありとなります。
            キューにデータが入っていない場合、ソケットは受信データ無しとなります。<b/><b/>
            【他のメンバとのスレッドセーフについて】<b/>
            EventSocketで得たソケットとDequeueメソッドおよびClearメソッドはスレッドセーフ
            ではありません。ソケットとDequeueメソッドおよびClearメソッドは単一のスレッド
            で処理してください。<b/><b/>
            【取得したソケットについて】<b/>
            取得したソケットに対してはSocketクラスのSelectメソッドにて受信待機を行う以外、
            一切の操作を行うことを禁じます。<b/>
            上記以外の操作について、一切の保証はありません。<b/>
            </summary>
        </member>
        <member name="T:BelicsClass.Database.BL_ExcelDb">
            <summary>
            ExcelOleクラス
            </summary>
        </member>
        <member name="F:BelicsClass.Database.BL_ExcelDb.ERR_EXCEL">
            <summary>
            EXCELのエラー
            </summary>
        </member>
        <member name="F:BelicsClass.Database.BL_ExcelDb.ERR_OTHERS">
            <summary>
            その他のエラー
            </summary>
        </member>
        <member name="M:BelicsClass.Database.BL_ExcelDb.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:BelicsClass.Database.BL_ExcelDb.#ctor(System.Int32)">
            <summary>
            
            </summary>
            <param name="cmdTimeout">コマンドタイムアウト値の設定。</param>
        </member>
        <member name="M:BelicsClass.Database.BL_ExcelDb.GetConnectionString(System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="initialCatalog"></param>
            <param name="dataSource"></param>
            <param name="userID"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Database.BL_ExcelDb.GetDbCommand(System.String,System.Data.Common.DbConnection)">
            <summary>
            
            </summary>
            <param name="cmdText"></param>
            <param name="connection"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Database.BL_ExcelDb.GetDbDataAdapter(System.Data.Common.DbCommand)">
            <summary>
            
            </summary>
            <param name="selectCommand"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Database.BL_ExcelDb.GetDbCommandBuilder(System.Data.Common.DbDataAdapter)">
            <summary>
            
            </summary>
            <param name="adapter"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Database.BL_ExcelDb.Exists">
            <summary>
            存在確認
            </summary>
        </member>
        <member name="M:BelicsClass.Database.BL_ExcelDb.GetTables">
            <summary>
            シート名取得
            </summary>
        </member>
        <member name="M:BelicsClass.Database.BL_ExcelDb.GetTableName(System.String)">
            <summary>
            シート名をテーブル名に変換
            </summary>
            <param name="sheet_name"></param>
            <returns></returns>
        </member>
        <member name="M:BelicsClass.Database.BL_ExcelDb.GetSheetData(System.String)">
            <summary>
            シートの全データを取得
            </summary>
            <param name="sheet_name"></param>
            <returns></returns>
        </member>
        <member name="T:BelicsClass.Common.BL_LocalTime">
            <summary>
            Win32APIを使用してローカル時刻を操作します。
            管理者権限が無いと設定できません。また、UACが有効な場合設定できません。
            </summary>
        </member>
        <member name="M:BelicsClass.Common.BL_LocalTime.SetLocalTime(BelicsClass.Common.BL_LocalTime.BL_SystemTime)">
            <summary>
            ローカル時刻を設定します。
            </summary>
            <param name="st">設定する時刻を指定します。</param>
            <returns>設定できた場合はtrue、失敗した場合はfalseを返します。</returns>
        </member>
        <member name="M:BelicsClass.Common.BL_LocalTime.GetLocalTime(BelicsClass.Common.BL_LocalTime.BL_SystemTime@)">
            <summary>
            ローカル時刻を取得します。
            </summary>
            <param name="st">取得した時刻の代入先を指定します。</param>
        </member>
        <member name="M:BelicsClass.Common.BL_LocalTime.#ctor">
            <summary>
            デフォルトコンストラクタです。
            本クラスはインスタンスを持つことができません。
            </summary>
        </member>
        <member name="P:BelicsClass.Common.BL_LocalTime.Now">
            <summary>
            ローカル日時を取得/設定します。
            </summary>
        </member>
        <member name="T:BelicsClass.Common.BL_LocalTime.BL_SystemTime">
            <summary>
            Win32API用のシステム時刻構造体です。
            </summary>
        </member>
        <member name="F:BelicsClass.Common.BL_LocalTime.BL_SystemTime.wYear">
            <summary>年</summary>
        </member>
        <member name="F:BelicsClass.Common.BL_LocalTime.BL_SystemTime.wMonth">
            <summary>月</summary>
        </member>
        <member name="F:BelicsClass.Common.BL_LocalTime.BL_SystemTime.wDayOfWeek">
            <summary>曜日</summary>
        </member>
        <member name="F:BelicsClass.Common.BL_LocalTime.BL_SystemTime.wDay">
            <summary>日</summary>
        </member>
        <member name="F:BelicsClass.Common.BL_LocalTime.BL_SystemTime.wHour">
            <summary>時</summary>
        </member>
        <member name="F:BelicsClass.Common.BL_LocalTime.BL_SystemTime.wMinute">
            <summary>分</summary>
        </member>
        <member name="F:BelicsClass.Common.BL_LocalTime.BL_SystemTime.wSecond">
            <summary>秒</summary>
        </member>
        <member name="F:BelicsClass.Common.BL_LocalTime.BL_SystemTime.wMilliseconds">
            <summary>ミリ秒</summary>
        </member>
    </members>
</doc>
